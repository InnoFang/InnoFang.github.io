<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Inno&#39; Blog</title>
  
  <subtitle>Programming is an art form</subtitle>
  <link href="http://innofang.github.io/atom.xml" rel="self"/>
  
  <link href="http://innofang.github.io/"/>
  <updated>2022-10-11T11:26:06.740Z</updated>
  <id>http://innofang.github.io/</id>
  
  <author>
    <name>Inno Fang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>将 what-digit-you-write 部署到 Heroku上</title>
    <link href="http://innofang.github.io/2022/10/11/%E5%B0%86what-digit-you-write%E9%83%A8%E7%BD%B2%E5%88%B0heroku%E4%B8%8A/"/>
    <id>http://innofang.github.io/2022/10/11/%E5%B0%86what-digit-you-write%E9%83%A8%E7%BD%B2%E5%88%B0heroku%E4%B8%8A/</id>
    <published>2022-10-11T07:50:21.000Z</published>
    <updated>2022-10-11T11:26:06.740Z</updated>
    
    <content type="html"><![CDATA[<p>以前一直在想怎么把一些写过的项目部署到云服务器上，方便展示。之前一直都听说过 Heroku，简单查了下确实可以方便我们的项目部署，最近闲来无事，准备拿 <a href="https://github.com/InnoFang/what-digit-you-write">what-digit-you-write</a>（一个将 Flask 和 Tensorflow2 相结合的手写数字识别 Web 应用）来练练手，并将部署到 Heroku 的过程记录如下。</p><span id="more"></span><h1 id="关于-Heroku"><a href="#关于-Heroku" class="headerlink" title="关于 Heroku"></a>关于 Heroku</h1><h2 id="1-注册-Heroku"><a href="#1-注册-Heroku" class="headerlink" title="1. 注册 Heroku"></a>1. 注册 Heroku</h2><p>首先要去 <a href="">Heroku</a> 上注册一个账号，这里建议使用 gmail 或者 outlook 邮箱，注册的过程中建议挂着梯子以防注册过程时无法现实验证码。如果一直没有收到邮件，建议查一下自己的垃圾邮箱或者已删除邮件是否有注册验证的邮件。</p><h2 id="2-下载-Heroku-CLI-程序"><a href="#2-下载-Heroku-CLI-程序" class="headerlink" title="2. 下载 Heroku CLI 程序"></a>2. 下载 Heroku CLI 程序</h2><p>下载链接在 <a href="https://devcenter.heroku.com/articles/heroku-cli#download-and-install">https://devcenter.heroku.com/articles/heroku-cli#download-and-install</a>。在后续的的部署中，都需要用到 <code>heroku</code> 这一命令。</p><h2 id="3-登录-Heroku"><a href="#3-登录-Heroku" class="headerlink" title="3. 登录 Heroku"></a>3. 登录 Heroku</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku login</span><br></pre></td></tr></table></figure><p>此时会跳转到网页请求登录，这个时候建议保持梯子连接的稳定，否则容易刷新不出页面的情况，如果连接了梯子仍然无法现实，建议耐心的多刷新几次。</p><h1 id="准备项目"><a href="#准备项目" class="headerlink" title="准备项目"></a>准备项目</h1><p>heroku 的部署也是需要 Git 操作的。因此，如果有一个现成的 Git 项目，那么可以跳到 <a href="#%E9%83%A8%E7%BD%B2%E5%88%B0%20Heroku">下一节</a>。</p><p>如果此时项目还不是 Git 项目，那么操作下也很简单:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;commit message&quot;</span><br></pre></td></tr></table></figure><p><strong>注意</strong> </p><ol><li>文件的添加情况请根据实际场景来完成，并且要避免添加一些无用的大文件，这是因为 Heroku 项目的部署有文件大小的限制（上线 500M），如果最终项目大于了限制数则会导致部署失败；</li><li>此时还不需要 <code>git push origin &lt;branch&gt;</code></li></ol><p>又因为我们的项目是一个 Python Web 项目，所以我们还需要导出依赖配置文件 <code>requirements.txt</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><h3 id="容易踩坑的地方"><a href="#容易踩坑的地方" class="headerlink" title="容易踩坑的地方"></a>容易踩坑的地方</h3><h4 id="关于存在与-GPU-相关的依赖"><a href="#关于存在与-GPU-相关的依赖" class="headerlink" title="关于存在与 GPU 相关的依赖"></a>关于存在与 GPU 相关的依赖</h4><p>首先 <code>Heroku</code> 服务器是没有 GPU 的，所以既然我们使用了 <code>Tensorflow</code>，那么我们就要<strong>注意把与 GPU 和 CUDA 相关的依赖项去掉</strong>（比如 <code>cudnn</code> 和 <code>cudatoolkit</code>，如果不去掉会因为无法下载依赖导致部署失败），并下载 <code>tensorflow-cpu</code> 版本（默认的 <code>Tensorflow</code> 会包含 GPU 模块，这会导致最终项目的空间占用大于 500M，从而导致部署失败）。如果你使用的是 <code>Pytorch</code>，也是一样的操作逻辑。</p><h4 id="关于-Python-版本的问题"><a href="#关于-Python-版本的问题" class="headerlink" title="关于 Python 版本的问题"></a>关于 Python 版本的问题</h4><p>不同的 <code>Heroku</code> 版本，在后台运行的 Python 版本都是不同的，具体的可以查看这个<a href="https://devcenter.heroku.com/articles/python-support">文档</a> 。</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/innofang.github.io@master/pic/%E5%B0%86what-digit-you-write%E9%83%A8%E7%BD%B2%E5%88%B0heroku%E4%B8%8A/supported-python.png"></p><p>我们的项目需要依赖 Python3.7，并且我们使用的 tensorflow-cpu 版本为 <code>2.1.0</code> 这也与 Python 的版本相关。而我们下载 Heroku 版本为 22，是不支持 Python3.7 的。此时，我们有两个方式可以选择：</p><ol><li>继续使用当前的 <code>Heroku</code> 版本，但是需要修改 <code>tensorflow-cpu</code> 的版本 (对于 Python3.10 能支持的 <code>tensorflow-cpu</code> 最低版本为 <code>2.8.0</code>);</li><li>修改 Python 版本(参考这个<a href="https://devcenter.heroku.com/articles/python-runtimes">文档</a>)，并需要修改 <code>Heroku Stack</code> 为 <code>20</code>(参考这个<a href="https://devcenter.heroku.com/articles/heroku-20-stack">文档</a>).</li></ol><p>如果需要在已经存在的项目上修改 <code>Heroku Stack</code>，那么可以使用如下命令修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku stack:set heroku-20</span><br></pre></td></tr></table></figure><p>如果是想在新创建项目的时候，指定 <code>Heroku Stack</code>，也可以使用如下的方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku create &lt;your-app-name&gt; --stack heroku-20</span><br></pre></td></tr></table></figure><p>这里我两个方案都尝试了，最后选择了方案一。</p><h1 id="部署到-Heroku"><a href="#部署到-Heroku" class="headerlink" title="部署到 Heroku"></a>部署到 Heroku</h1><h2 id="1-创建-Heroku-仓库"><a href="#1-创建-Heroku-仓库" class="headerlink" title="1. 创建 Heroku 仓库"></a>1. 创建 Heroku 仓库</h2><p>在 Git 项目目录下，使用如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku craete &lt;appname&gt;</span><br></pre></td></tr></table></figure><p>如果创建成功，<code>heroku</code> 会为 Git 仓库添加一个 <code>heroku</code> 的远端链接，方便我们之后可以直接 <code>push</code> 到 <code>heroku</code> 仓库中。</p><h2 id="2-使用-Gunicorn"><a href="#2-使用-Gunicorn" class="headerlink" title="2. 使用 Gunicorn"></a>2. 使用 Gunicorn</h2><p>毕竟是要部署 <code>Flask</code> 项目，这里还是建议使用 <code>Gunicorn</code> 来启动服务。首先需要在 <code>requirements.txt</code> 添加两个依赖：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gunicorn</span><br><span class="line">psycopg2</span><br></pre></td></tr></table></figure><p>这里不指定版本也没有问题。然后在项目目录下，创建一个文件名 <code>Procfile</code>，没有文件后缀，文件内容只有一行，就是为了让 <code>Heroku</code> 在部署项目后启动我们的服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web: gunicron &lt;your-app-main-file&gt;:app</span><br></pre></td></tr></table></figure><p>由于在 <code>what-digit-you-write</code> 中，我的主程序为 <code>app.py</code>，所以我的 <code>Procfile</code> 内容为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web: gunicorn app:app</span><br></pre></td></tr></table></figure><h2 id="部署项目"><a href="#部署项目" class="headerlink" title="部署项目"></a>部署项目</h2><p>如果我们在 <a href="#%E5%87%86%E5%A4%87%E9%A1%B9%E7%9B%AE">准备项目</a> 阶段成功避免了坑点（删掉 GPU 相关依赖，修改 <code>Tensorflow</code> 为 cpu 版本，对应好 <code>Heroku Stack</code> 版本和 <code>Python</code> 版本），并在上一小节中正确配置了 gunicorn。那么此时我们的项目，应该是可以直接通过以下指令直接部署到 <code>Heroku</code> 上的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push heroku master</span><br></pre></td></tr></table></figure><p>然后我可以查看部署项目的日志情况，检查一下是否顺利：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku logs</span><br></pre></td></tr></table></figure><p>如果是一般的项目问题此时应该可以正常启动了，但是如果你的项目用了 <code>Tensorflow</code>（可能用了 <code>Pytorch</code> 也是）会出现下面的问题，导致项目部署失败。</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/innofang.github.io@master/pic/%E5%B0%86what-digit-you-write%E9%83%A8%E7%BD%B2%E5%88%B0heroku%E4%B8%8A/crash-when-deploy.png"></p><p>这里我参照的解决方法是<a href="https://blog.csdn.net/qq_51447436/article/details/125573273">这篇博客</a>。简单来说，我们只需要往 <code>requirements.txt</code> 中添加一个 <code>3.19.0</code> 版本以上的 <code>protobuf</code> 的依赖就可以了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protobuf==3.19.0</span><br></pre></td></tr></table></figure><p>这时需要我们对修改后的 <code>requirements.txt</code> 添加到 Git 中，并提交到 <code>Heroku</code> 仓库远端。重新部署项目后，再检查一下 <code>heroku logs</code> 最新的日志情况，如果成功启动了项目，那么就可以打开<a href="https://what-digit-you-write.herokuapp.com/">演示项目地址</a>进行体验了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku open</span><br></pre></td></tr></table></figure><!-- image resource -->]]></content>
    
    
    <summary type="html">&lt;p&gt;以前一直在想怎么把一些写过的项目部署到云服务器上，方便展示。之前一直都听说过 Heroku，简单查了下确实可以方便我们的项目部署，最近闲来无事，准备拿 &lt;a href=&quot;https://github.com/InnoFang/what-digit-you-write&quot;&gt;what-digit-you-write&lt;/a&gt;（一个将 Flask 和 Tensorflow2 相结合的手写数字识别 Web 应用）来练练手，并将部署到 Heroku 的过程记录如下。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="http://innofang.github.io/categories/Python/"/>
    
    
    <category term="Python, Tensorflow, Flask, Heroku" scheme="http://innofang.github.io/tags/Python-Tensorflow-Flask-Heroku/"/>
    
  </entry>
  
  <entry>
    <title>论文浅析：GpSense: A GPU-friendy method for common-sense subgraph matching in massively parallel architectures</title>
    <link href="http://innofang.github.io/2020/09/30/%E8%AE%BA%E6%96%87%E6%B5%85%E6%9E%90%EF%BC%9AGpSense-A-GPU-friendly-methodfor-common-sense-subgraph-matching-in-massively-parallel-architectures/"/>
    <id>http://innofang.github.io/2020/09/30/%E8%AE%BA%E6%96%87%E6%B5%85%E6%9E%90%EF%BC%9AGpSense-A-GPU-friendly-methodfor-common-sense-subgraph-matching-in-massively-parallel-architectures/</id>
    <published>2020-09-30T08:37:39.000Z</published>
    <updated>2020-09-30T08:59:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>GpSense：一种用于在常识知识库中进行子图匹配的方法</p><span id="more"></span><h3 id="Section2：基于“过滤和合并”（filtering-and-joining）策略的并行计算架构"><a href="#Section2：基于“过滤和合并”（filtering-and-joining）策略的并行计算架构" class="headerlink" title="Section2：基于“过滤和合并”（filtering-and-joining）策略的并行计算架构"></a>Section2：基于“过滤和合并”（filtering-and-joining）策略的并行计算架构</h3><ul><li>子图同构：在大图中寻找一个与特定结构的小图相匹配的子图</li><li>子图匹配：找出所有的同构子图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/%E8%AE%BA%E6%96%87%E6%B5%85%E6%9E%90%EF%BC%9AGpSense-A-GPU-friendly-methodfor-common-sense-subgraph-matching-in-massively-parallel-architectures/GPUSubgraphMatching.jpg" alt="GPUSubgraphMatching"></p><p><code>generate_query_plan(q, g)</code>：为后续的搜索任务创建一个良好的节点顺序。首先选择的节点应该是有助于最小化查询节点和边的候选集合的大小。节点的排序规则 $f(u)=deg⁡(u)/freq(u.label)$。deg⁡(u) 是查询节点 u 的度，freq(u.label) 是与节点 u 有相同标签的数据图节点的数量。该函数更趋向于度数高、频率低的节点。选定第一个节点之后，generate_query_plan 会继续访问其邻居以找到下一个还未被选择并且至少连接了一个在节点序列中节点的节点，直到所有查询节点被选中该过程终止。</p><p><strong>Filtering Phase</strong>：该部分的目的就是减少节点候选集的数量，从而减少边的候选集的数量以及joining phase的运行时间。该阶段包含两个任务：初始化节点候选集合以及精简节点候选集合。</p><p><strong>Joining Phase</strong>：基于查询节点的候选集，collect_edge_candidates函数会单独地收集候选边。combine_edge_candidates 合并侯选边以生成最后的子图匹配结果。</p><h3 id="Section3：将常识知识库转换为有向图"><a href="#Section3：将常识知识库转换为有向图" class="headerlink" title="Section3：将常识知识库转换为有向图"></a>Section3：将常识知识库转换为有向图</h3><p>通过将三元组 <code>&lt;concept-relation-concept&gt;</code> 当作有向带权图的边，知识库自然就转换成了有向图，即将概念（concept）映射成节点，将关系（relation）映射成边的权值或标签。获得有向图之后就可以将每个节点标签转换为唯一的节点ID。</p><h3 id="Section4：GPU实现细节"><a href="#Section4：GPU实现细节" class="headerlink" title="Section4：GPU实现细节"></a>Section4：GPU实现细节</h3><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/%E8%AE%BA%E6%96%87%E6%B5%85%E6%9E%90%EF%BC%9AGpSense-A-GPU-friendly-methodfor-common-sense-subgraph-matching-in-massively-parallel-architectures/common-sense-KB.png" alt="common-sense-KB"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/%E8%AE%BA%E6%96%87%E6%B5%85%E6%9E%90%EF%BC%9AGpSense-A-GPU-friendly-methodfor-common-sense-subgraph-matching-in-massively-parallel-architectures/graph-representation.png" alt="graph-representation"></p><p>图表示的数据结构（三个数组）：</p><ul><li>节点数组|V|：数组长度为节点个数加 1</li><li>边数组|E|：由 |V| 中所有节点的邻接表组成节点数组中的节点指向边数组中节点的邻接表。此外节点数组的最后一个元素表述边数组的长度。</li><li>第三个数组：与边数组 |E| 的长度相同，存储数据图中所有边的标签。</li></ul><p>这种数据结构的优势在于，节点邻接表中的节点彼此相邻存储在GPU内存中。在GPU执行期间，连续的线程可以访问内存中的连续元素。 因此可以避免随机访问问题，从而减少基于GPU的方法的访问时间。</p><p>GPU 实现，介绍 Algorithm 1 中的一些函数，这些函数都基于两个优化技巧：占用率最大化，以隐藏内存访问延迟；基于wrap的执行方式，以利用合并（coalesce）的访问并处理 wrap中线程之间的工作负载不平衡。</p><p>优化技巧：</p><p>Use both incoming and outgoing graph representations. Consequently, GpSense can reduce a large amount of intermediate results during execution which is one of the most crucial issues for GPU applications</p><p>同时使用传入和传出图形表示。 因此，GpSense可以减少执行期间的大量中间结果，这是GPU应用程序最关键的问题之一</p><h3 id="Section5：实现结果"><a href="#Section5：实现结果" class="headerlink" title="Section5：实现结果"></a>Section5：实现结果</h3><ul><li>数据集：</li></ul><ul><li>数据图：SenticNet 及其扩展</li><li>查询图：从数据图中抽取节点并用BFS的方式扩展（从 SenticNet的密集区域抽取以确保查询结果不会只有“树”型）</li></ul><ul><li>用于比较的算法：VF2、QuickSI (QSI)、GraphQL (GQL)、TurboISO</li><li>验环境：</li></ul><ul><li>CPU：Intel Core i7-870 2.93GHz / 8GB RAM</li><li>GPU：NVIDIA Tesla C2050 / 3GB global memory / 48KB shared memory</li><li>CUDA toolkit: 6.0</li></ul><p>各算法执行100次不同的查询并记录平均耗时（average elapsed time）</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/%E8%AE%BA%E6%96%87%E6%B5%85%E6%9E%90%EF%BC%9AGpSense-A-GPU-friendly-methodfor-common-sense-subgraph-matching-in-massively-parallel-architectures/comparison-with-state-of-the-art-methods.png" alt="comparison-with-state-of-the-art-methods"></p><p>TurboISO算法与GpSense算法在10000个节点上的查询性能类似，但是当数据图规模不断增大时，GpSense算法的性能要优于TurboISO算法。将这两个算法进一步进行对比，分别测试查询图的节点数以及平均节点度数对两个算法效率的影响：</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/%E8%AE%BA%E6%96%87%E6%B5%85%E6%9E%90%EF%BC%9AGpSense-A-GPU-friendly-methodfor-common-sense-subgraph-matching-in-massively-parallel-architectures/comparison-with-TurboISO.png" alt="comparison-with-TurboISO"></p><p>TurboISO的递归调用次数相对于查询图的大小和数据图的程度呈指数增长。相反，具有大量并行线程的GpSense可以同时处理多个候选节点和边，因此，GpSense的性能更趋于稳定。</p><h3 id="Section6：结论"><a href="#Section6：结论" class="headerlink" title="Section6：结论"></a>Section6：结论</h3><p>提出了一种高效的适用于GPU的用于大规模常识知识库的子图匹配查询方法。该方法基于过滤与合并（“filtering-and-joining”）的策略。最终的实验结果表明该方法优于基于CPU的回溯算法。</p><!-- iamge resource -->]]></content>
    
    
    <summary type="html">&lt;p&gt;GpSense：一种用于在常识知识库中进行子图匹配的方法&lt;/p&gt;</summary>
    
    
    
    <category term="subgraph-matching, GPU" scheme="http://innofang.github.io/categories/subgraph-matching-GPU/"/>
    
    
    <category term="subgraph-matching, GPU" scheme="http://innofang.github.io/tags/subgraph-matching-GPU/"/>
    
  </entry>
  
  <entry>
    <title>Github项目clone速度过慢？试试这招</title>
    <link href="http://innofang.github.io/2020/08/28/Github%E9%A1%B9%E7%9B%AEclone%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2%EF%BC%9F%E8%AF%95%E8%AF%95%E8%BF%99%E6%8B%9B/"/>
    <id>http://innofang.github.io/2020/08/28/Github%E9%A1%B9%E7%9B%AEclone%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2%EF%BC%9F%E8%AF%95%E8%AF%95%E8%BF%99%E6%8B%9B/</id>
    <published>2020-08-28T06:44:17.000Z</published>
    <updated>2020-08-28T08:00:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>errrr，这标题有内味了……</p><span id="more"></span><p>将要 clone 的 Github 项目链接稍微修改一下就可以了，比如：</p><blockquote><p>git clone <a href="https://github.com/username/repo.git">https://github.com/username/repo.git</a></p></blockquote><p>修改为</p><blockquote><p>git clone <a href="https://github.com.cnpmjs.org/username/repo.git">https://github.com.cnpmjs.org/username/repo.git</a></p></blockquote><p>就是多了一个 <code>cnpmjs.org</code>。其实 <a href="https://github.com.cnpmjs.org/"><code>https://github.com.cnpmjs.org</code></a> 就是一个 Github 的镜像网站，同样也是可以打开的。对于经常用 node.js 的人来说，看到 cnpm 应该也挺熟悉的。</p><p>这个方法用了挺久的了，不过最近发现还是有很多人将项目同步到 <a href="https://gitee.com/">Gitee</a> 后再下载，相比之下只用加几个字母就可以让 clone 的速度有极大的提高，我觉得这种方法倒是值得推广一下的。 😀</p><p>此外，有的项目其实本身体积并不大，可能也就几 M 大小，但是 clone 后查看项目代码的体积却有几百 M。其实对于一个经常更新的项目来说，几百甚至上千的 commits 也是挺常见的，这就导致有时候真正占据 clone 时长的就是 <code>.git</code> 文件，而非项目的主要代码。对于大部分需要 clone 项目的人来说，更关心的只是项目的最新修改而非之前的修改，所以通过设定 clone 的深度 (<code>--depth</code>) 可以在减少 clone 项目体积的同时也减少了 clone 的时间。在克隆时指定 <code>--depth 1</code>，<code>--depth</code> 后面的数字表示要克隆最近的历史版本数，为 1 代表只克隆最新的一个版本。</p><p>搭配镜像网站链接使用更佳</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth 1 https://github.com.cnpmjs.org/username/repo.git</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;errrr，这标题有内味了……&lt;/p&gt;</summary>
    
    
    
    <category term="Github" scheme="http://innofang.github.io/categories/Github/"/>
    
    
    <category term="Github" scheme="http://innofang.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop分布式搭建全流程记录</title>
    <link href="http://innofang.github.io/2020/06/22/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    <id>http://innofang.github.io/2020/06/22/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/</id>
    <published>2020-06-22T06:05:32.000Z</published>
    <updated>2020-07-20T13:50:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本次Hadoop分布式环境搭建，最终目标是使用三个虚拟机来形成一个小的分布式集群，并可以在本机中通过主机名加端口的方式访问到虚拟机中的 HDFS 和 YARN，也就是说：可以在本机（Windows/Mac OS/Linux）中开发，再通过远程连接虚拟机来运行 MapReduce 程序。</p><span id="more"></span><p>本次搭建过程中，所用资源及其版本如下如下：</p><ul><li><strong>虚拟机：</strong> VMware Workstation 15.5 pro</li><li><strong>CentOS:</strong>  <a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/">CentOS-7-x86_64-DVD-2003</a></li><li><strong>JDK:</strong>  <a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">jdk-8u251-linux-x64</a></li><li><strong>Hadoop：</strong> <a href="http://archive.cloudera.com/cdh5/cdh/5/">hadoop-2.6.0-cdh5.15.0</a></li><li><strong>远程连接工具：</strong> <a href="https://www.netsarang.com/zh/free-for-home-school/">Xshell 和 Xftp</a> （个人可以通过邮件获取免费正版）</li></ul><p><strong>注意</strong> 本文不涉及软件破解过程，如果介意该过程可以使用 <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a> 作为替代，虽然在使用流程上会与 VMware 稍有不同，但是一样可以达到目的。此外，本文中涉及虚拟机的问题也将与之不同，如在 VirtualBox 的安装配置过程中遇到问题还请查阅其他文章。</p><h2 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h2><h3 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h3><p>首先打开 VMWare Workstation，逐步进行以下流程：</p><ol><li>点击菜单栏文件 </li><li>新建虚拟机</li><li>选择 “典型(推荐)”</li><li>安装程序光盘映像文件，选择下载好的 CentOS 镜像文件</li><li>修改虚拟机名字（这一步是为了方便管理虚拟机集群，修改名称诸如 <code>hadoop101</code> 之类易于分辨的皆可）</li><li>往后一直默认确认，直到虚拟机创建完毕</li></ol><p>接着需要修改虚拟机配置，基本配置要求如下：</p><ul><li><strong>硬盘：</strong> 20G（视自己硬盘空间而定，默认最低为 20G，后续不够还可以手动扩容）</li><li><strong>内存：</strong> 2G（一般 2G 就够了）</li><li><strong>处理器：</strong> 2 x 2 （即处理器数量和每个处理器的内核数量为 2 x 2，处理器内核总数为 4，如果还需要更高，需要查看自己CPU的个数与核数，处理器总核数不能超过本机上限）</li><li><strong>网络适配器：</strong> NAT 模式（VMware 默认配置）</li></ul><h3 id="配置虚拟机"><a href="#配置虚拟机" class="headerlink" title="配置虚拟机"></a>配置虚拟机</h3><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BE%E7%BD%AE.jpg" alt="虚拟机配置"></p><p>确认后即可点击 “开启此虚拟机” 进行虚拟机的启动项配置，语言设置选择中文</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9.jpg" alt="语言选择"></p><p>确认后进入 “安装信息摘要”，先配置 “安装位置”</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E5%AE%89%E8%A3%85%E4%BF%A1%E6%81%AF%E6%91%98%E8%A6%81.jpg" alt="安装信息摘要"></p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E5%AE%89%E8%A3%85%E7%9B%AE%E6%A0%87%E4%BD%8D%E7%BD%AE.jpg" alt="安装目标位置"></p><p>这里为了方便，我选择了 “自动配置分区”。点击 “完成”，回到 “安装信息摘要界面” 后，再点击 “网络和主机名”，打开以太网，点击 “完成”</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E7%BD%91%E7%BB%9C%E5%92%8C%E4%B8%BB%E6%9C%BA%E5%90%8D.jpg" alt="网络和主机名"></p><p>继续下一步</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE.jpg" alt="用户配置"></p><p>这里要为root配置密码，等会登陆后需要用到，暂时可以不用创建用户。稍等片刻，安装完成后，选择 “重启”。</p><p>重启后会看到终端交互界面，输入root和密码即可登录成功</p><p><strong>值得注意的是</strong>，在分布式集群的使用过程中，是不需要图形界面的，全程会使用 Xshell 这类远程终端工具来远程链接操作集群的系统，文件传输可以使用 Xftp 来完成，也可以使用其他类似的工具，比如 SecureCRT。当然，如果不习惯无操作界面的系统或者其他原因需要 GUI，那么可以在 CentOS 启动项配置过程中的 <code>安装信息摘要 -&gt; 软件 -&gt; 软件选择</code> 中选择自己需要的组件，不过使用默认的 “最小安装” 才是符合实际开发场景的。（GUI 安装选项不是本文重点并且也不需要，可以自行查阅其他文章）</p><h3 id="获取IP及关闭防火墙"><a href="#获取IP及关闭防火墙" class="headerlink" title="获取IP及关闭防火墙"></a>获取IP及关闭防火墙</h3><p>紧接着输入 <code>ip addr</code> 获取本机的 IP 地址，当然<strong>前提</strong>是在安装时已经打开了以太网的连接</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E8%8E%B7%E5%8F%96IP%E5%9C%B0%E5%9D%80.jpg" alt="获取IP地址"></p><p>下一步，我们需要将虚拟机的防火墙关闭，这样主机才能 ping 通虚拟机的 IP。相关操作如下所示：</p><ul><li>启动防火墙：<code>systemctl start firewalld.service</code></li><li>关闭防火墙：<code>systemctl stop firewalld.service</code></li><li>重启防火墙：<code>systemctl restart firewalld.service</code></li><li>显示防火墙状态：<code>systemctl status firewalld.service</code></li><li>禁止防火墙开机自启：<code>systemctl disable firewalld.service</code></li></ul><p>要注意的是，CentOS 7 的防火墙操作指令与 CentOS 6 的不同，如果你是 CentOS 6 的操作系统还请自行查阅相关操作。<br>这里我们需要<strong>先关闭防火墙</strong>，<strong>再禁止防火墙开机自启</strong>，<strong>最后查看一下防火墙状态</strong>，出现如下信息则表示防火墙已关闭。</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99.jpg" alt="关闭防火墙"></p><p>接着主机可以尝试 ping 一下虚拟机的 IP，如果能 ping 通则说明没有问题。</p><h3 id="配置静态IP"><a href="#配置静态IP" class="headerlink" title="配置静态IP"></a>配置静态IP</h3><p>首先在控制台输入 <code>vi /etc/sysconfig/network-scripts/ifcfg-eth0</code></p><p>输入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.15.133</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.15.2</span><br><span class="line">DNS1=192.168.15.2</span><br><span class="line">NAME=eth0</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E4%BF%AE%E6%94%B9%E9%9D%99%E6%80%81IP.jpg" alt="修改静态IP"></p><p><strong>注意</strong> <code>IPADDR</code> 是该台虚拟机的 IP 地址，所以要与你上一步获取到的 IP 地址相一致。此外，对于 <code>GATEWAY</code> 的值，需要查看当前虚拟机的网关，并与之保持一致，<code>DNS1</code> 的值与 <code>GATEWAY</code> 的值相同即可。获取步骤如下</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%89%93%E5%BC%80%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E7%BC%96%E8%BE%91%E5%99%A8.jpg" alt="虚拟机打开虚拟网络编辑器"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E7%BC%96%E8%BE%91%E5%99%A8.jpg" alt="虚拟网络编辑器"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%9F%A5%E7%9C%8B%E7%BD%91%E5%85%B3IP.jpg" alt="查看网关IP"></p><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><p>接下来修改主机名，这样做是为了在打开多个系统的终端时，可以分得清对应的是哪个。输入 <code>vi /etc/sysconfig/network</code>，输入如下内容（主机名为 <code>hadoop101</code>），保存之后，重启即可看到主机名已经修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=hadoop101</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D.jpg" alt="修改主机名"></p><h3 id="创建一个一般用户"><a href="#创建一个一般用户" class="headerlink" title="创建一个一般用户"></a>创建一个一般用户</h3><p>如果是在自己安装的虚拟机上操作，为了省事可以省略这一步，但是实际操作过程中，是<strong>不建议直接使用 root 用户进行操作</strong>的。主要原因在于 root 的权限过大，如果在 root 权限下进行了误操作，那么造成的损失会非常大，此外从安全的角度考虑，以 root 身份运行的程序被攻击时，就会直接获取到 root 的密码，其后果也是不堪设想的。对于开发人员来说，普通用户的权限也能够满足绝大部分需求，而且对于有多种用途的 linux 来说，只有一个 root 账号是不便于管理的。因此，<strong>本文还是建议按照步骤执行，不要省略这一步</strong>。</p><p>创建新用户的方式很简单，比如创建一个名为 <code>inno</code> 的用户（用户名请自行替换）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建新用户，用户名为 inno，请自行替换</span></span><br><span class="line">adduser inno</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建新用户的密码，</span></span><br><span class="line">passwd inno</span><br></pre></td></tr></table></figure><p>可以通过 <code>ll /home</code> 看到刚才创建的用户目录，此时的用户权限较低，为了之后的操作方便，先为新创建的用户赋予 root 权限</p><h4 id="为新建用户赋予-root-权限"><a href="#为新建用户赋予-root-权限" class="headerlink" title="为新建用户赋予 root 权限"></a>为新建用户赋予 root 权限</h4><p>步骤如下：</p><ol><li>使用命令 <code>chmod -v u+w /etc/sudoers</code> 设置 sudoers 文件权限为可读写</li><li>使用命令 <code>vi /etc/sudoers</code> 编辑 sudoers 文件</li><li>找到 <code>root    ALL=(ALL)       ALL</code> 这一行并在下一行添加新建的用户名，如下：<ul><li>添加该行后就可以使用 sudo 行使 root 权限 <code>inno    ALL=(ALL)       ALL</code></li><li><strong>若想在使用 sudo 时不输入密码</strong>，则可更改为  <code>inno    ALL=(ALL)       NOPASSWD: ALL</code></li><li>保存退出</li></ul></li><li>使用命令 <code>chmod -v u-w /etc/sudoers</code>删除 sudoers 写权限</li></ol><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E4%B8%BA%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7%E6%B7%BB%E5%8A%A0root%E6%9D%83%E9%99%90.jpg" alt="为新建用户添加root权限"></p><p>使用命令 <code>su inno</code>，切换到 <code>inno</code> 用户下，测试一下 <code>sudo ls</code>，如果没有报错，则说明配置成功。</p><h3 id="创建统一管理压缩包和解压文件的文件夹"><a href="#创建统一管理压缩包和解压文件的文件夹" class="headerlink" title="创建统一管理压缩包和解压文件的文件夹"></a>创建统一管理压缩包和解压文件的文件夹</h3><p>在 <code>/opt</code> 下创建 <code>module</code>、<code>software</code> 文件夹，并修改两个文件夹的所有者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /opt/module</span><br><span class="line">sudo mkdir /opt/software</span><br><span class="line">sudo chown inno:inno /opt/module /opt/software</span><br></pre></td></tr></table></figure><p>之后压缩包会统一放在 <code>/opt/software</code> 目录下，解压后的文件会放在 <code>/opt/module</code> 目录下</p><h3 id="克隆虚拟机"><a href="#克隆虚拟机" class="headerlink" title="克隆虚拟机"></a>克隆虚拟机</h3><p>因为最终的目的是使用多台虚拟机形成一个小集群，所以上面的基本操作是适用于往后所有用作集群的虚拟机的，因此，我们需要在上述操作都完成后，为虚拟机新建一个节点，这样在之后克隆虚拟机时就可以从当前节点克隆，操作流程如下</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E5%BF%AB%E7%85%A7%E7%AE%A1%E7%90%86%E5%99%A8.jpg" alt="快照管理器"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%8B%8D%E6%91%84%E5%BF%AB%E7%85%A7.jpg" alt="拍摄快照"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%96%B0%E7%9A%84%E5%BF%AB%E7%85%A7%E8%8A%82%E7%82%B9.jpg" alt="新的快照节点"></p><p><strong>注意</strong>，克隆操作需要关闭当前运行的虚拟机后才能运行</p><p><strong>Q：</strong> 为什么我们要从一个干净的 Linux 虚拟机开始克隆？可否在配置完一台虚拟机的 Hadoop 环境后再进行克隆？</p><p><strong>A：</strong> 按理说是可以的，特别是对于在自己本机上用虚拟机搭建的分布式环境来说，这样在配置好一台 Hadoop 环境后再克隆可以方便很多。但是在实际开发过程中，往往用的不会是虚拟机，而是在服务器上，这就没有办法进行克隆操作了，因此学习如何远程同步多台虚拟机的配置环境是很有必要的。</p><p>选择 “clean” 节点，点击右下的 “克隆” 按钮，再克隆两台虚拟机，并且虚拟机名字分别为 <code>hadoop102</code> 和 <code>hadoop103</code>。</p><p><strong>注意</strong> 对于新克隆的虚拟机，还需要执行两个步骤，参照 <a href="#%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81IP"><code>配置静态IP</code></a> 和 <a href="#%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D"><code>修改主机名</code></a> 这两步的操作，分别设置对应的静态 IP 地址和网关，以及修改新克隆的两台虚拟机的主机名为 <code>hadoop102</code> 和 <code>hadoop103</code>，然后重启即可。</p><h3 id="配置-hosts"><a href="#配置-hosts" class="headerlink" title="配置 hosts"></a>配置 hosts</h3><p>将三台虚拟机都打开并登陆后，输入 <code>ip addr</code> 查看各自的 IP 地址，本文中三台虚拟机的 IP 地址和主机名的映射关系如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.15.133 hadoop101</span><br><span class="line">192.168.15.134 hadoop102</span><br><span class="line">192.168.15.136 hadoop103</span><br></pre></td></tr></table></figure><p>接着需要把这些内容复制到每台虚拟机的 host 文件中，在每台虚拟机终端中输入命令 <code>vi /etc/hosts</code> ，将内容复制进去即可。</p><p>如果不想挨个操作，可以在修改完 <code>hadoop101</code> 的 <code>/etc/hosts</code> 文件后，就在 <code>hadoop101</code> 这台虚拟机的终端上使用命令拷贝到另外两台虚拟机的对应位置上（IP 地址为另外两台虚拟机的IP地址）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/hosts root@192.168.15.134:/etc/</span><br><span class="line">scp /etc/hosts root@192.168.15.136:/etc/</span><br></pre></td></tr></table></figure><p><strong>注意</strong>，还需要在你 Windows 的 hosts 文件中配置以上 IP 映射，否则后面无法通过主机名链接到 HDFS。Windows 的 hosts 文件路径为 <code>C:\Windows\System32\drivers\etc\HOSTS</code>，以管理员身份打开，并将上面的 IP 地址映射添加到文件末尾后保存（Mac OS 的添加方式自行查阅）。</p><h3 id="使用-Xshell-远程访问虚拟机"><a href="#使用-Xshell-远程访问虚拟机" class="headerlink" title="使用 Xshell 远程访问虚拟机"></a>使用 Xshell 远程访问虚拟机</h3><p>实际开发环境中，是没法直接去操作节点的，这时候就需要使用 Xshell 这类远程终端工具来访问。在自己的电脑上操作时也很方便，只要第一次连接成功后，之后每次只需打开虚拟机就可以放到后台了，直接操作终端界面会比在虚拟机之间来回切换方便很多。同样的还有一款 Xftp 文件传输工具，我们也可以用类似的方式通过远程连接来往节点传送文件。对于 Xshell 连接步骤如下</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/Xshell%E6%96%B0%E5%BB%BA%E8%BF%9E%E6%8E%A5.jpg" alt="Xshell新建连接"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/Xshell%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%BE%93%E5%85%A5IP.jpg" alt="Xshell远程连接输入IP"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/Xshell%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E5%90%8D.jpg" alt="Xshell远程连接输入用户名"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/Xshell%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%BE%93%E5%85%A5%E5%AF%86%E9%92%A5.jpg" alt="Xshell远程连接输入密钥"></p><p>如果是第一次连接，则会提示是否保存主机密钥，点击保存即可。</p><p>Xftp 的连接方式类似，新建连接，然后输入 IP 地址，之后选择 IP 地址后再输入用户名和密码即可。</p><p>之后的所有操作都将通过 Xshell 来完成，虚拟机只会放到后台运行。</p><h3 id="配置ssh免密登录"><a href="#配置ssh免密登录" class="headerlink" title="配置ssh免密登录"></a>配置ssh免密登录</h3><p>集群之间的主机需要能够相互进行通信，因此配置 ssh 免密登录十分重要。先在 <code>hadoop101</code> 上输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>然后可以一直敲回车直到结束。接着拷贝生成的公钥到另外两台虚拟机上，在 <code>hadoop101</code> 上输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub hadoop102</span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub hadoop103</span><br></pre></td></tr></table></figure><p>这样就将 <code>hadoop101</code> 的 ssh 密钥拷贝到了 <code>hadoop102</code> 和 <code>hadoop103</code> 上。<strong>另外两台虚拟机也需要执行上面两步</strong>，要注意修改要拷贝到的虚拟机的主机名（对于 <code>haoop102</code> 的密钥，就是要拷贝到 <code>hadoop101</code> 和 <code>hadoop103</code> 上）。</p><p>然后测试一下是否可以连接成功，比如在 <code>hadoop101</code> 上输入 <code>ssh hadoop102</code>，如果出现如下类似结果即表示成功</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E6%B5%8B%E8%AF%95.jpg" alt="ssh免密登录测试"></p><h2 id="Hadoop-完全分布式配置"><a href="#Hadoop-完全分布式配置" class="headerlink" title="Hadoop 完全分布式配置"></a>Hadoop 完全分布式配置</h2><h3 id="集群部署规划及资源准备"><a href="#集群部署规划及资源准备" class="headerlink" title="集群部署规划及资源准备"></a>集群部署规划及资源准备</h3><table><thead><tr><th>&nbsp;</th><th>hadoop101</th><th>hadoop102</th><th>hadoop103</th></tr></thead><tbody><tr><td><strong>HDFS</strong></td><td>DataNode <br/> NameNode</td><td>DataNode</td><td>DataNode <br/> SecondaryNameNode</td></tr><tr><td><strong>YARN</strong></td><td>NodeManager</td><td>NodeManager <br/> ResourceManager</td><td>NodeManager</td></tr></tbody></table><p>因为资源有限，所以在该集群中只是用了三台虚拟机，<code>hadoop101</code> 既是 HDFS 集群的主机（包含NameNode）也是 HDFS 集群的从机（连同另外两台都包含 DataNode）；<code>hadoop102</code> 既是 YARN 集群的主机（包含 ResourceManager）也是 YARN 集群的从机（连同另外两台）。</p><p>接下来开始按照集群部署规划开始安装配置，在此之前，还需要先将下载好的 JDK 和 Hadoop 压缩包通过 Xftp 传入到 <code>hadoop101</code> 上。打开 Xftp 然后确保已成功连接上 <code>hadoop101</code>，在左边的 Windows 文件树中找到 JDK 和 Hadoop 压缩包，然后再在右边找到虚拟机的 <code>/opt/software</code> 目录，直接将左边的文件拖到到右边的文件夹即可</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E4%BD%BF%E7%94%A8Xftp%E4%BC%A0%E9%80%81%E8%B5%84%E6%BA%90.jpg" alt="使用Xftp传送资源"></p><p><strong>往后的操作会先在 <code>hadoop101</code> 上进行资源解压和配置，然后再利用同步的方式，将解压文件和配置环境同步到另外两台虚拟机上。</strong></p><h3 id="安装并配置-JDK"><a href="#安装并配置-JDK" class="headerlink" title="安装并配置 JDK"></a>安装并配置 JDK</h3><blockquote><p>如果 CentOS 7 安装的是带 GUI 的版本，那么系统会自带 Java，因此还需要先删除系统自带的 JDK 再安装自己的JDK，删除方法自行查阅。</p></blockquote><p>先解压 JDK 到 <code>/opt/module</code> 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[inno@hadoop101 ~]$ cd /opt/software/</span><br><span class="line">[inno@hadoop101 software]$ tar -zxvf jdk-8u251-linux-x64.tar.gz -C /opt/module</span><br></pre></td></tr></table></figure><p>再来配置 JDK 环境变量，这里先获取 JDK 的路径，以便后面的操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[inno@hadoop101 jdk1.8.0_251]$ pwd</span><br><span class="line">/opt/module/jdk1.8.0_251</span><br></pre></td></tr></table></figure><p>接着输入 <code>sudo vi /etc/profile</code> 打开 <code>/etc/profile</code> 文件，并在末尾添加 JDK 的环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">JAVA_HOME</span></span><br><span class="line">export JAVA_HOME=/opt/module/jdk1.8.0_251</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>保存退出后输入 <code>source /etc/profile</code> 让配置文件生效，测试一下，若出现如下信息则表示 JDK 配置成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[inno@hadoop101 jdk1.8.0_251]$ java -version</span><br><span class="line">java version &quot;1.8.0_251&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_251-b08)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.251-b08, mixed mode)</span><br></pre></td></tr></table></figure><p>接着另外两台虚拟机也可以按照上述步骤手动安装，也可以使用以下命令同步到另外两台虚拟机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rsync -av /opt/module/jdk1.8.0_251 hadoop102:/opt/module/</span><br><span class="line">sudo rsync -av /opt/module/jdk1.8.0_251 hadoop103:/opt/module/</span><br><span class="line">sudo rsync -av /etc/profile hadoop102:/etc/profile</span><br><span class="line">sudo rsync -av /etc/profile hadoop103:/etc/profile</span><br></pre></td></tr></table></figure><p>rsync 是一种远程同步工具，具有速度快、避免复制相同内容和支持符号链接的优点。相比于上面使用过的 scp，用 rsync 做文件的复制要比 scp 的速度快，并且 rsync 只对差异文件做更新而 scp 是把所有文件都复制过去。这在之后会有很多的用途。<strong>在使用之前还需要在每台虚拟机上运行如下代码快速安装</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install rsync -y</span><br></pre></td></tr></table></figure><p><strong>注意</strong> 将 JDK 和 <code>/etc/profile</code> 文件同步完成后，还需要到另外两台虚拟机上执行 <code>source /etc/profile</code> 命令，使配置生效，然后再测试一下 <code>java -version</code>，确保输出正确信息，确认无误后方可进行接下来的操作。</p><h3 id="安装并配置-Hadoop"><a href="#安装并配置-Hadoop" class="headerlink" title="安装并配置 Hadoop"></a>安装并配置 Hadoop</h3><h4 id="解压并配置环境变量"><a href="#解压并配置环境变量" class="headerlink" title="解压并配置环境变量"></a>解压并配置环境变量</h4><p>同样的，先到 <code>hadoop101</code> 上的 <code>/opt/software</code> 找到 Hadoop 的压缩包，解压到 <code>/opt/module</code> 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[inno@hadoop101 ~]$ cd /opt/software/</span><br><span class="line">[inno@hadoop101 software]$ tar -zxvf hadoop-2.6.0-cdh5.15.0.tar.gz.tar -C /opt/module</span><br></pre></td></tr></table></figure><p>接着获取 hadoop 解压后的文件路径，以便等下配置 Hadoop 的环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[inno@hadoop101 hadoop-2.6.0-cdh5.15.0]$ pwd</span><br><span class="line">/opt/module/hadoop-2.6.0-cdh5.15.0</span><br></pre></td></tr></table></figure><p>接着输入 <code>sudo vi /etc/profile</code> 打开 <code>/etc/profile</code> 文件，并在末尾添加 Hadoop 的环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">HADOOP_HOME</span></span><br><span class="line">export HADOOP_HOME=/opt/module/hadoop-2.6.0-cdh5.15.0</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure><p>保存退出后输入 <code>source /etc/profile</code> 让配置文件生效，测试一下，若出现如下信息则表示 Hadoop 配置成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[inno@hadoop101 hadoop-2.6.0-cdh5.15.0]$ hadoop version</span><br><span class="line">Hadoop 2.6.0-cdh5.15.0</span><br><span class="line">Subversion http://github.com/cloudera/hadoop -r e3cb23a1cb2b89d074171b44e71f207c3d6ffa50</span><br><span class="line">Compiled by jenkins on 2018-05-24T11:22Z</span><br><span class="line">Compiled with protoc 2.5.0</span><br><span class="line">From source with checksum 2efeda2e2d6b27ecf59ab56fffd9881</span><br><span class="line">This command was run using /opt/module/hadoop-2.6.0-cdh5.15.0/share/hadoop/common/hadoop-common-2.6.0-cdh5.15.0.jar</span><br></pre></td></tr></table></figure><h4 id="Hadoop的目录结构"><a href="#Hadoop的目录结构" class="headerlink" title="Hadoop的目录结构"></a>Hadoop的目录结构</h4><p>这里临时阐述一下 Hadoop 的目录结构，是为了之后配置一些文件的时候，能大致明白其作用</p><ol><li><code>bin</code> 目录：存放对 Hadoop 相关服务（HDFS,YARN）进行操作的脚本</li><li><code>etc</code> 目录：Hadoop 的配置文件目录，存放 Hadoop 的配置文件</li><li><code>lib</code> 目录：存放 Hadoop 的本地库（对数据进行压缩解压缩功能）</li><li><code>sbin</code> 目录：存放启动或停止 Hadoop 相关服务的脚本</li><li><code>share</code> 目录：存放Hadoop的依赖 jar 包、文档、和官方案例</li></ol><p>只后要配置的所有文件的位置，都在你 hadoop 解压目录下的 <code>etc/hadoop</code> 目录下</p><h4 id="配置集群"><a href="#配置集群" class="headerlink" title="配置集群"></a>配置集群</h4><h5 id="核心文件配置"><a href="#核心文件配置" class="headerlink" title="核心文件配置"></a>核心文件配置</h5><p>配置 <code>core-site.xml</code>，输入 <code>vi core-site.xml</code>，并在文件中添加如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定HDFS中NameNode的地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop101:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="comment">&lt;!-- 指定Hadoop运行时产生文件的存储目录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/module/hadoop-2.6.0-cdh5.15.0/data/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="HDFS-文件配置"><a href="#HDFS-文件配置" class="headerlink" title="HDFS 文件配置"></a>HDFS 文件配置</h5><p>配置 <code>hadoop-env.sh</code>，输入 <code>vi hadoop-env.sh</code>，，找到 <code># The java implementation to use.</code> 这一行</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E9%85%8D%E7%BD%AEhadoop-env.jpg" alt="配置hadoop-env"></p><p>将下面一行的 <code>JAVA_HOME</code> 修改为自己的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/module/jdk1.8.0_251</span><br></pre></td></tr></table></figure><p>配置 <code>hdfs-site.xml</code>，输入 <code>vi hdfs-site.xml</code>，并在文件中添加如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定HFDS副本的数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定Hadoop辅助名称节点主机配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop103:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="YARN-文件配置"><a href="#YARN-文件配置" class="headerlink" title="YARN 文件配置"></a>YARN 文件配置</h5><p>配置 <code>yarn-env.sh</code>，输入 <code>vi yarn-env.sh</code>，找到 <code># some Java parameters</code> 这一行</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E9%85%8D%E7%BD%AEyarn-env.jpg" alt="配置yarn-env"></p><p>取消在这一行下面的 <code>JAVA_HOME</code> 注释，并修改为自己的 <code>JAVA_HOME</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/module/jdk1.8.0_251</span><br></pre></td></tr></table></figure><p>配置 <code>yarn-site.xml</code>，输入 <code>vi yarn-site.xml</code>，并在文件中添加如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Reducer获取数据的方式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定YARN的ResourceManager的地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop102<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 日志聚集功能使能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 日志保留时间设置7天 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation.retain-seconds<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>604800<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="MapReduce-文件配置"><a href="#MapReduce-文件配置" class="headerlink" title="MapReduce 文件配置"></a>MapReduce 文件配置</h5><p>配置 <code>mapred-env.sh</code>，输入 <code>vi mapred-env.sh</code>，找到被注释的 <code># export JAVA_HOME=...</code>，</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E9%85%8D%E7%BD%AEmapred-env.jpg" alt="配置mapred-env"></p><p>取消该注释，并修改为自己的 <code>JAVA_HOME</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/module/jdk1.8.0_251</span><br></pre></td></tr></table></figure><p>配置 <code>mapred-site.xml</code>，因为一开始是没有该文件的，需要先拷贝 <code>mapred-site.xml.template</code> 并重命名为 <code>mapred-site.xml</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp mapred-site.xml.template mapred-site.xml</span><br></pre></td></tr></table></figure><p>输入 <code>vi mapred-site.xml</code>，并在文件中添加如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定MR运行在Yarn上 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 历史服务器端地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop101:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 历史服务器web端地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop101:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="配置-slaves"><a href="#配置-slaves" class="headerlink" title="配置 slaves"></a>配置 slaves</h5><p>配置从节点的主机名，如果有按照之前的步骤在 <code>/etc/hosts</code> 文件中做了 IP 地址和主机名的映射，那么就可以直接使用主机名，否则就需要写对应的 IP 地址</p><p>输入 <code>vi slaves</code>，并在文件中添加如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadoop101</span><br><span class="line">hadoop102</span><br><span class="line">hadoop103</span><br></pre></td></tr></table></figure><p><strong>注意</strong> 文件中添加的内容结尾不允许有空格，并且文件中不允许有空行。</p><h5 id="同步虚拟机文件及配置环境"><a href="#同步虚拟机文件及配置环境" class="headerlink" title="同步虚拟机文件及配置环境"></a>同步虚拟机文件及配置环境</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rsync -av /opt/module/hadoop-2.6.0-cdh5.15.0 hadoop102:/opt/module/</span><br><span class="line">sudo rsync -av /opt/module/hadoop-2.6.0-cdh5.15.0 hadoop103:/opt/module/</span><br><span class="line">sudo rsync -av /etc/profile hadoop102:/etc/profile</span><br><span class="line">sudo rsync -av /etc/profile hadoop103:/etc/profile</span><br></pre></td></tr></table></figure><p><strong>注意</strong> 在完成了同步操作后，还需要在各台虚拟机上执行 <code>source /etc/profile</code> 使配置生效。</p><h2 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h2><h3 id="格式化-NameNode"><a href="#格式化-NameNode" class="headerlink" title="格式化 NameNode"></a>格式化 NameNode</h3><p>如果集群是第一次启动，需要格式化NameNode（注意格式化之前，一定要先停止上次启动的所有namenode和datanode进程，然后再删除data和log数据）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><p><strong>注意</strong> <strong>NameNode 只在第一次启动时需要格式化</strong>，往后非必要的情况下都不需要格式化，因为频繁的格式化会导致出现一些意想不到的问题，比如找不到 DataNode 等。</p><h3 id="启动HDFS和YARN"><a href="#启动HDFS和YARN" class="headerlink" title="启动HDFS和YARN"></a>启动HDFS和YARN</h3><ul><li>先在 <code>hadoop101</code> 上启动 HFDS，使用脚本命令 <code>start-dfs.sh</code></li><li>再在 <code>hadoop102</code>（包含 ResourceManager） 上启动 YARN，使用脚本命令 <code>start-yarn.sh</code></li></ul><p><strong>注意</strong> 若 NameNode 和 ResourceMange 不是同一台机器，则不能在 NameNode 上启动 YARN，应该在 ResouceManager 所在的机器上启动 YARN。</p><p>接下来使用 jps 命令分别查看一下三台虚拟机的运行情况</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/hadoop101-jps.jpg" alt="hadoop101-jps"></p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/hadoop102-jps.jpg" alt="hadoop102-jps"></p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/hadoop103-jps.jpg" alt="hadoop103-jps"></p><p>结果与之前的集群部署规划相符合。至此，Hadoop 分布式集群基本部署完成，再来看一下控制台的情况，以下操作在自己本机（Windows / Mac OS）的浏览器中操作</p><p>输入 <code>haoop101:50070</code> 查看 HDFS 的运行情况：</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%9F%A5%E7%9C%8BHDFS%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8A%B6%E5%86%B5.jpg" alt="查看HDFS的运行状况"></p><p>再点击头部的 <code>Datanodes</code> 查看 DataNode 的情况</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%9F%A5%E7%9C%8BDataNode%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8A%B6%E5%86%B5.jpg" alt="查看DataNode的运行状况"></p><p>可以发现 3 台 DataNode 都已经运行起来了。接着输入 <code>hadoop102:8088</code> 查看 YARN 的运行情况：</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%9F%A5%E7%9C%8BYARN%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8A%B6%E6%80%81.jpg" alt="查看YARN的运行状态"></p><p>点击 <code>Active Nodes</code> 下的数字 3，还可以看到红框内存活着的三台 DataNode 的信息</p><h3 id="启动历史服务器"><a href="#启动历史服务器" class="headerlink" title="启动历史服务器"></a>启动历史服务器</h3><p>因为之前已经在 <a href="#YARN-%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE">YARN文件配置</a> 和 <a href="#MapReduce-%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE">MapReduce文件配置</a> 这一步中配置过历史服务器了，所以这里可以直接在 <code>hadoop101</code> 上使用命令启动历史服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mr-jobhistory-daemon.sh start historyserver</span><br></pre></td></tr></table></figure><p>使用 jps 查看启动情况</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E5%90%AF%E5%8A%A8%E5%8E%86%E5%8F%B2%E6%9C%8D%E5%8A%A1%E5%99%A8.jpg" alt="启动历史服务器"></p><p>配置历史服务器的目的是为了方便查看程序的历史运行情况。</p><h3 id="运行官方示例"><a href="#运行官方示例" class="headerlink" title="运行官方示例"></a>运行官方示例</h3><p>经过以上的铺垫，下面就可以使用官方示例查看一下实际的运行效果</p><p>在主机 <code>hadoop101</code> 的 <code>/opt/module/hadoop-2.6.0-cdh5.15.0</code> 目录下，执行如下命令，回车便可看到运行结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">[inno@hadoop101 hadoop-2.6.0-cdh5.15.0]$ hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0-cdh5.15.0.jar pi 3 4</span><br><span class="line">Number of Maps  = 3</span><br><span class="line">Samples per Map = 4</span><br><span class="line">20/07/06 20:57:05 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span><br><span class="line">Wrote input for Map #0</span><br><span class="line">Wrote input for Map #1</span><br><span class="line">Wrote input for Map #2</span><br><span class="line">Starting Job</span><br><span class="line">20/07/06 20:57:07 INFO client.RMProxy: Connecting to ResourceManager at hadoop102/192.168.15.134:8032</span><br><span class="line">20/07/06 20:57:07 INFO input.FileInputFormat: Total input paths to process : 3</span><br><span class="line">20/07/06 20:57:07 INFO mapreduce.JobSubmitter: number of splits:3</span><br><span class="line">20/07/06 20:57:07 INFO mapreduce.JobSubmitter: Submitting tokens for job: job_1594037734992_0001</span><br><span class="line">20/07/06 20:57:08 INFO impl.YarnClientImpl: Submitted application application_1594037734992_0001</span><br><span class="line">20/07/06 20:57:08 INFO mapreduce.Job: The url to track the job: http://hadoop102:8088/proxy/application_1594037734992_0001/</span><br><span class="line">20/07/06 20:57:08 INFO mapreduce.Job: Running job: job_1594037734992_0001</span><br><span class="line">20/07/06 20:57:17 INFO mapreduce.Job: Job job_1594037734992_0001 running in uber mode : false</span><br><span class="line">20/07/06 20:57:17 INFO mapreduce.Job:  map 0% reduce 0%</span><br><span class="line">20/07/06 20:57:24 INFO mapreduce.Job:  map 33% reduce 0%</span><br><span class="line">20/07/06 20:57:27 INFO mapreduce.Job:  map 67% reduce 0%</span><br><span class="line">20/07/06 20:57:28 INFO mapreduce.Job:  map 100% reduce 0%</span><br><span class="line">20/07/06 20:57:30 INFO mapreduce.Job:  map 100% reduce 100%</span><br><span class="line">20/07/06 20:57:30 INFO mapreduce.Job: Job job_1594037734992_0001 completed successfully</span><br><span class="line">20/07/06 20:57:30 INFO mapreduce.Job: Counters: 49</span><br><span class="line">File System Counters</span><br><span class="line">FILE: Number of bytes read=72</span><br><span class="line">FILE: Number of bytes written=573225</span><br><span class="line">FILE: Number of read operations=0</span><br><span class="line">FILE: Number of large read operations=0</span><br><span class="line">FILE: Number of write operations=0</span><br><span class="line">HDFS: Number of bytes read=792</span><br><span class="line">HDFS: Number of bytes written=215</span><br><span class="line">HDFS: Number of read operations=15</span><br><span class="line">HDFS: Number of large read operations=0</span><br><span class="line">HDFS: Number of write operations=3</span><br><span class="line">Job Counters </span><br><span class="line">Launched map tasks=3</span><br><span class="line">Launched reduce tasks=1</span><br><span class="line">Data-local map tasks=3</span><br><span class="line">Total time spent by all maps in occupied slots (ms)=19491</span><br><span class="line">Total time spent by all reduces in occupied slots (ms)=3145</span><br><span class="line">Total time spent by all map tasks (ms)=19491</span><br><span class="line">Total time spent by all reduce tasks (ms)=3145</span><br><span class="line">Total vcore-milliseconds taken by all map tasks=19491</span><br><span class="line">Total vcore-milliseconds taken by all reduce tasks=3145</span><br><span class="line">Total megabyte-milliseconds taken by all map tasks=19958784</span><br><span class="line">Total megabyte-milliseconds taken by all reduce tasks=3220480</span><br><span class="line">Map-Reduce Framework</span><br><span class="line">Map input records=3</span><br><span class="line">Map output records=6</span><br><span class="line">Map output bytes=54</span><br><span class="line">Map output materialized bytes=84</span><br><span class="line">Input split bytes=438</span><br><span class="line">Combine input records=0</span><br><span class="line">Combine output records=0</span><br><span class="line">Reduce input groups=2</span><br><span class="line">Reduce shuffle bytes=84</span><br><span class="line">Reduce input records=6</span><br><span class="line">Reduce output records=0</span><br><span class="line">Spilled Records=12</span><br><span class="line">Shuffled Maps =3</span><br><span class="line">Failed Shuffles=0</span><br><span class="line">Merged Map outputs=3</span><br><span class="line">GC time elapsed (ms)=398</span><br><span class="line">CPU time spent (ms)=4400</span><br><span class="line">Physical memory (bytes) snapshot=1034440704</span><br><span class="line">Virtual memory (bytes) snapshot=11132063744</span><br><span class="line">Total committed heap usage (bytes)=859832320</span><br><span class="line">Shuffle Errors</span><br><span class="line">BAD_ID=0</span><br><span class="line">CONNECTION=0</span><br><span class="line">IO_ERROR=0</span><br><span class="line">WRONG_LENGTH=0</span><br><span class="line">WRONG_MAP=0</span><br><span class="line">WRONG_REDUCE=0</span><br><span class="line">File Input Format Counters </span><br><span class="line">Bytes Read=354</span><br><span class="line">File Output Format Counters </span><br><span class="line">Bytes Written=97</span><br><span class="line">Job Finished in 23.456 seconds</span><br><span class="line">Estimated value of Pi is 3.66666666666666666667</span><br></pre></td></tr></table></figure><p>看一下控制台的情况，浏览器输入 <code>hadoop102:8088</code>，可以看到官方示例已经运行完成。因为上一步已经配置过了历史服务器，正好可以看一下官方示例的运行过程中，产生的日志，查看步骤如下</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%9F%A5%E7%9C%8B%E5%AE%98%E6%96%B9%E7%A4%BA%E4%BE%8B%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8A%B6%E6%80%811.jpg" alt="查看官方示例的运行状态1"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%9F%A5%E7%9C%8B%E5%AE%98%E6%96%B9%E7%A4%BA%E4%BE%8B%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8A%B6%E6%80%812.jpg" alt="查看官方示例的运行状态2"><br><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%9F%A5%E7%9C%8B%E5%AE%98%E6%96%B9%E7%A4%BA%E4%BE%8B%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97.jpg" alt="查看官方示例的运行日志"></p><p>如果我们的 MapReduce 程序出现了错误，那么查看 Log 文件可以很好的帮助我们解决问题。</p><h3 id="停止集群"><a href="#停止集群" class="headerlink" title="停止集群"></a>停止集群</h3><p>当不需要运行集群的时候，要注意千万不能直接关闭虚拟机，一定要先停止集群的运行，再关闭虚拟机，否则会造成很多想不到的结果。</p><ul><li><strong>停止历史服务器</strong>：<code>mr-jobhistory-daemon.sh stop historyserver</code></li><li><strong>停止YARN</strong>：<code>stop-yarn.sh</code></li><li><strong>停止HDFS</strong>：<code>top-dfs.sh</code></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="集群时间同步"><a href="#集群时间同步" class="headerlink" title="集群时间同步"></a>集群时间同步</h3><p>经过之前的步骤，Hadoop 完全分布式集群已经配置完成了，所以这一步的集群时间同步与 Hadoop 集群的关系不是特别大。所谓的集群时间同步，就是为了让三台服务器的时间取得一致（仅仅只是保持一致，而非保证时间正确），这么做的目的是因为在之后使用集群的过程中，比如使用 HBase 的时候，对主机和从机的时间同步性要求很高。虽然说集群时间同步的配置与否并不影响 Hadoop，但是在之后的使用过程中，还是需要有这么一个步骤，因此这里建议还是顺便配置一下。</p><p>时间同步的原理也很简单：找一个机器，作为时间服务器，集群中其它所有的机器与这台机器的时间进行定时的同步，比如，每隔十分钟同步一次时间。</p><p>因为时间同步服务依赖于 NTP 服务，所以首先应该查一下系统是否具有 NTP 服务。<strong>注意</strong>，以下操作都需要在 root 用户下执行，因此在执行所有操作前进行切换 ，使用命令 <code>su root</code> ，如果不切换那么就需要每条命令之前加上 <code>sudo</code>。</p><h4 id="检查NTP服务是否存在"><a href="#检查NTP服务是否存在" class="headerlink" title="检查NTP服务是否存在"></a>检查NTP服务是否存在</h4><p>首先，检查 NTP 是否安装 <code>rpm -qa|grep ntp</code>，如果没有输出任何信息，则表示系统没有 NTP 服务，那么输入 <code>yum install ntp</code> 安装一下即可。然后再输入 <code>rpm -qa|grep ntp</code> 检查一下是否有输入，如果出现如下信息，则表示 NTP 服务已存在</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%A3%80%E6%9F%A5NTP%E6%9C%8D%E5%8A%A1%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85.jpg" alt="检查NTP服务是否安装"></p><h4 id="检查NTPD服务是否开启"><a href="#检查NTPD服务是否开启" class="headerlink" title="检查NTPD服务是否开启"></a>检查NTPD服务是否开启</h4><p>输入 <code>service ntpd status</code>，如果出现如下信息则表示服务未开启</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E6%A3%80%E6%9F%A5NTP%E6%9C%8D%E5%8A%A1%E6%98%AF%E5%90%A6%E5%BC%80%E5%90%AF.jpg" alt="检查NTPD服务是否开启"></p><p>如果显示正在运行，那么需要先将其关闭，否则端口会被占用。关闭的步骤也很简单，依次输入如下两条命令</p><ul><li>输入 <code>service ntpd stop</code> 即关闭 NTP 服务</li><li>然后 <code>chkconfig ntpd off</code></li></ul><p><strong>注意</strong> 以上  <a href="#%E6%A3%80%E6%9F%A5NTP%E6%9C%8D%E5%8A%A1%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8">检查NTP服务是否存在</a> 和 <a href="#%E6%A3%80%E6%9F%A5NTP%E6%9C%8D%E5%8A%A1%E6%98%AF%E5%90%A6%E5%BC%80%E5%90%AF">检查NTP服务是否开启</a> 需要分别在三台虚拟机上执行，往下开始正式的配置。</p><h4 id="修改NTP配置文件"><a href="#修改NTP配置文件" class="headerlink" title="修改NTP配置文件"></a>修改NTP配置文件</h4><p>我们选择 <code>hadoop101</code> 作为时间服务器，因此这一步的修改配置文件将在 <code>hadoop101</code> 的终端上执行，输入 <code>vi /etc/ntp.conf</code></p><ol><li>找到 <code>#restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap</code> 这一行，并取消它的注释</li><li>找到如下几行并都为其添加注释<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server 0.centos.pool.ntp.org iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst</span><br><span class="line">server 2.centos.pool.ntp.org iburst</span><br><span class="line">server 3.centos.pool.ntp.org iburst</span><br></pre></td></tr></table></figure></li><li>在文件末尾添加如下两行（目的是当该节点丢失网络连接，依然可以采用本地时间作为时间服务器为集群中的其他节点提供时间同步）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/Hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/%E4%BF%AE%E6%94%B9NTP%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.jpg" alt="修改NTP配置文件"></li></ol><h4 id="修改-etc-sysconfig-ntpd文件"><a href="#修改-etc-sysconfig-ntpd文件" class="headerlink" title="修改/etc/sysconfig/ntpd文件"></a>修改<code>/etc/sysconfig/ntpd</code>文件</h4><p>这一步是为了让硬件时间与系统时间一起同步，输入 <code>vi /etc/sysconfig/ntpd</code>，文件末尾添加如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SYNC_HWCLOCK=yes</span><br></pre></td></tr></table></figure><h4 id="重启NTP服务并设置开机自启"><a href="#重启NTP服务并设置开机自启" class="headerlink" title="重启NTP服务并设置开机自启"></a>重启NTP服务并设置开机自启</h4><p>先检查一下 NTPD 服务的状态，输入 <code>service ntpd status</code>，一般来说是停止的，因为没停止是不能修改的，但是操作前进行检查还是有必要的。</p><ul><li>开启 NTPD 服务 <code>service ntpd start</code></li><li>设置 NTPD 服务开机自启 <code>chkconfig ntpd on</code></li></ul><p>至此，<code>hadoop101</code> 作为时间服务器已经配置完成。</p><h4 id="配置其它机器与时间服务器进行同步"><a href="#配置其它机器与时间服务器进行同步" class="headerlink" title="配置其它机器与时间服务器进行同步"></a>配置其它机器与时间服务器进行同步</h4><p>在另外两台虚拟机上，配置 10 分钟与时间服务器同步一次，输入 <code>crontab -e</code>，编写定时任务如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/10 * * * * /usr/sbin/ntpdate hadoop101</span><br></pre></td></tr></table></figure><p>这定时任务的意思就是：每隔 10 分钟执行一次 <code>/usr/sbin/ntpdate hadoop101</code> 命令。</p><p>至此就完成了集群时间同步的配置。如果想要测试一下，可以修改其他两台机器的时间，比如在另外两台机器的终端中输入 <code>date -s &quot;2020-02-02 20:02:20&quot;</code> 修改一下时间，十分钟后再输入 <code>date</code> 查看时间是否已经恢复。当然为了便于快速看到结果，定时任务的时间间隔可以修改成一分钟（将 10 改为 1 即可）。</p><!-- iamge resource -->]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本次Hadoop分布式环境搭建，最终目标是使用三个虚拟机来形成一个小的分布式集群，并可以在本机中通过主机名加端口的方式访问到虚拟机中的 HDFS 和 YARN，也就是说：可以在本机（Windows/Mac OS/Linux）中开发，再通过远程连接虚拟机来运行 MapReduce 程序。&lt;/p&gt;</summary>
    
    
    
    <category term="Hadoop" scheme="http://innofang.github.io/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="http://innofang.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程学习记录</title>
    <link href="http://innofang.github.io/2020/04/05/Shell%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://innofang.github.io/2020/04/05/Shell%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2020-04-05T06:06:05.000Z</published>
    <updated>2020-05-13T03:47:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要是记录学习 Shell 编程时所记录的一些笔记。</p><span id="more"></span><h2 id="Shell-脚本的格式"><a href="#Shell-脚本的格式" class="headerlink" title="Shell 脚本的格式"></a>Shell 脚本的格式</h2><p>在 Linux 中有很多命令，每一条命令都可以完成某种特定的任务，这也是 UNIX 的设计哲学：一条命令只做一件事。因此为了组合命令以及便于多次执行，可以使用脚本文件来保存需要执行的命令。</p><p>创建一个以 <code>.sh</code> 为后缀的文件，我们可以在其中编写很多指令。如果执行的是刚编写好的脚本文件，那么在执行前还需要为其赋予可执行权限 <code>chmod u+rx filename</code>。</p><p>说到 Shell 脚本执行方式，有下面几种：</p><ol><li><code>bash ./filename.sh</code></li><li><code>./filename.sh</code></li><li><code>source ./filename.sh</code></li><li><code>.filename.sh</code></li></ol><p>在 1、2 中，会创建一个名叫 bash 的子进程，Shell 脚本就会运行在该子进程中，两者的区别就在于 2 需要在脚本开头使用 <code>#!/bin/bash</code> 来指定使用 bash，而方式 1 在执行时就明确需要使用 bash 了。方式 3、4 则是在当前进程中执行 Shell 脚本。</p><p>如何理解前两种和后两种执行方式的区别呢？比如在 Shell 脚本中存在切换目录的操作 <code>cd</code> ，在前两种方式中，在脚本执行完成后，当前的路径是不会被改变的，因为是使用另一个进程执行的该脚本，而后两种方式在脚本执行完成后，当前路径就会被改变，因为它就是在当前进程下执行的。</p><p>有时候我们会发现 Shell 脚本的第一行往往都是 <code>#!/bin/bash</code>，写这一行代码有什么作用呢？或者说有什么好处呢？</p><p>简而言之，在第一行开头使用 <code>#!</code> 可以在文件中指定脚本的解析方式，在使用  <code>bash filename.sh</code> 来执行 Shell 时，就是直接指定 bash 作为解析方式，文件内以 <code>#</code> 开头的部分都会被当作注释。而在使用 <code>./filename.sh</code> 来执行脚本文件时，会使用系统自带的 Shell 来解析脚本文件，遇到以 <code>#!</code> 开头的行时就会被当成非注释，因此在开头写上 <code>#!/bin/bash</code> 就表示需要使用 bash 来解析脚本文件。换句话说，如果第一行写的是，<code>#!/usr/bin/python</code> 或者 <code>#!/usr/bin/python3</code> 就表示该文件需要使用 Python 来解析，即使文件后缀为 <code>.sh</code>。</p><h2 id="管道与重定向"><a href="#管道与重定向" class="headerlink" title="管道与重定向"></a>管道与重定向</h2><ul><li><strong>管道</strong>：进程通信的主要工具，在 Shell 中是为了方便两条命令能够进行通信</li><li><strong>重定向</strong>：将标准输出输出到指定的位置</li></ul><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>因为在 Shell 编程中，管道是没有名字的，所以也叫匿名管道或者管道符。管道符是 <code>|</code> ，其作用就是将前一个命令执行的结果传递给后面的命令。比如，<code>echo 123 | cat</code>。</p><p>值得注意的是，管道会为两条命令创建一个子进程来进行通信，所以在使用 <code>cd</code> 、<code>pwd</code> 等内部命令时，当前的进程是得不到相应的结果的。</p><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>一个进程默认会打开标准输入、标准输出、错误输出三个文件描述符</p><ul><li><strong>输入重定向 <code>&lt;</code></strong> 比如 <code>read var &lt; /path/filename</code></li><li><strong>输出重定向 <code>&gt;</code>、<code>&gt;&gt;</code>、<code>2&gt;</code>、<code>&amp;&gt;</code></strong> 比如 <code>echo 123 &gt; /path/filename</code><ul><li><code>&gt;</code> 清空文件内容并输入</li><li><code>&gt;&gt;</code> 在文件末尾追加</li><li><code>2&gt;</code> 当命令执行错误时，会将错误信息输出到指定文件</li><li><code>&amp;&gt;</code> 无论命令执行成功与否，都会将信息输出到指定文件中</li></ul></li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><blockquote><p><strong>定义</strong> 变量的命名与大多数编程语言的区别相差不大，都是由字母、数字以及下划线组成且不以数字开头。</p></blockquote><h3 id="变量的赋值"><a href="#变量的赋值" class="headerlink" title="变量的赋值"></a>变量的赋值</h3><ul><li><code>变量名=变量值</code>（<code>=</code> 两边不允许出现空格，因为出现空格后，变量名会被当作命令，因此会报错）<ul><li><code>a=123</code></li></ul></li><li>使用 let 为变量赋值<ul><li><code>let a=10+20</code></li></ul></li><li>将命令赋值给变量<ul><li><code>l=ls</code></li></ul></li><li>将命令结果赋值给变量，使用 <code>$()</code> 或者 <code>&#39;&#39;</code><ul><li><code>letc=$(ls -l /etc)</code></li></ul></li><li>变量值有空格等特殊字符可以包含在 <code>&quot;&quot;</code> 或 <code>&#39;&#39;</code> 中</li></ul><h3 id="变量的引用"><a href="#变量的引用" class="headerlink" title="变量的引用"></a>变量的引用</h3><p>定义完变量后就需要使用它，使用方式为 <code>$&#123;变量名&#125;</code>，当然如果变量在引用时不会引发歧义的话，是可以省略掉 <code>&#123;&#125;</code> 的，什么叫不会引发歧义呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s1=<span class="string">&#x27;hello&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接引用变量，往往是可以省略掉 &#123;&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果还需要在变量之后衔接其他东西，那么就能会识别成别的变量，导致无法输出想要的值</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s123</span>   <span class="comment"># 没有该变量，输出空串</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;s1&#125;</span>23 <span class="comment"># 输出 hello23</span></span><br></pre></td></tr></table></figure><p>此外，还有一种使用场景，如果我需要使用的变量为空值，是否可以使用别的值来代替空值，而当变量被被复赋值后，又可以直接输出变量值而非控制？有一种才做叫做变量替换，形式为 <code>变量=$&#123;引用变量-替换值&#125;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设定 path 为文件名，如果为空则输出下划线 _</span></span><br><span class="line">path=<span class="variable">$&#123;filename-_&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> path</span><br><span class="line"><span class="comment"># 如果设定了 filename 的值，则输出该值，否则会输出下划线 _</span></span><br></pre></td></tr></table></figure><h3 id="变量的作用范围"><a href="#变量的作用范围" class="headerlink" title="变量的作用范围"></a>变量的作用范围</h3><p>变量的默认作用范围是只在当前的进程当中，也就是说，别的进程想要引用另外一个进程的变量是取不到的。</p><p>这就需要用到之前提及过的 Shell 脚本的几种解析方式了，如果我们想在脚本中使用该进程中设置的其他变量，就需要使用到 <code>source filename.sh</code> 或者 <code>. filename.sh</code>，因为这样脚本就会运行在当前进程下。</p><ul><li>那如果子进程也想访问父进程中的变量，该如何实现呢？<blockquote><p>可以使用 <strong>export</strong> 关键字，通过 <code>export 变量</code> 的方式，让别的进程也可以放到这一变量。</p></blockquote></li><li>如果想要删除设置过的变量，又该如何实现呢？<blockquote><p> 可以使用 <strong>unset</strong> 关键字，通过 <code>unset 变量</code> 来删除变量。</p></blockquote></li></ul><h3 id="系统环境的变量"><a href="#系统环境的变量" class="headerlink" title="系统环境的变量"></a>系统环境的变量</h3><p>系统的环境变量都为大写字母加下划线的组合，要查看有哪些环境变量可以使用命令 <code>env | more</code> 或者 <code>set | more</code> 来查看，使用 <code>set</code> 可以查看更多的命令，这里还是用了管道加 <code>more</code> 指令的方式来分页查看命令</p><p>常见的系统变量，比如有 <code>PATH</code>，当我们要使用非系统自带的指令时，就需要将可执行命令的路劲<strong>追加</strong>到 <code>PATH</code> 中，也就是使用冒号 <code>:</code> 来分割 <code>PATH=$PATH:新的命令路径</code>，并记得用 <code>export</code> 来到处 <code>PATH</code>，这样在使用时，系统就可以找到需要使用的命令。</p><p>除了系统变量外，还有一些预定义变量</p><ul><li><code>$?</code>：用来表示上一条命令是否成功执行，成功为 0， 失败为 1</li><li><code>$$</code>：用来查看当前进程的 PID，在对脚本的运行状态以及监测时会用到</li><li><code>$0</code>：用来查看当前进程的名称</li></ul><p>此外，还有用于为脚本传递参数的位置变量，比如 <code>$1</code>、<code>$2</code>、<code>$3</code>、<code>$4</code>、<code>$5</code>、<code>$6</code>、<code>$7</code>、<code>$8</code>、<code>$9</code>、<code>$&#123;10&#125;</code>…… ……</p><p>它们分别用来代替第一个脚本参数以及之后的参数，这样我们在编写 Shell 脚本时就可以很方便的指代传进来的参数。</p><h3 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h3><p>环境变量的配置文件有很多个</p><ul><li><code>/etc/profile</code> 保存系统或终端启动时的运行环境，在登录情况下，会被第一个加载</li><li><code>~/.bash_profile</code></li><li><code>/etc/profile.d/</code> 这是一个目录，根据不同的 Shell 版本会执行下面不同的脚本</li><li><code>~/.bashrc</code></li><li><code>/etc/bashrc</code></li></ul><p>简单区别，在 <code>etc</code> 目录下的配置文件，是所有用户通用的；而其他跟在 <code>~</code> 后的配置文件，表示在家（home）目录下，当前用户特有的配置文件。此外，除了目录的不同，还区分了 <code>profile</code> 和 <code>bashrc</code> 这几种配置文件，这是因为登录当前用户的情况分为 <code>loggin shell</code> 和 <code>no login shell</code>，也就是说对于 <code>login shell</code> 会使用当前的所有配置文件，而对于 <code>no login shell</code> 则会只使用 <code>bashrc</code> 的文件。</p><p>各个配置文件在加载时也分先后，相同的变量，后加载的会覆盖掉先加载的。在登陆状态下，配置文件的加载顺序为</p><ol><li><code>/etc/profile</code></li><li><code>~/.bash_profile</code></li><li><code>~/.bashrc</code></li><li><code>/etc/bashrc</code></li></ol><p>而在非登录的情况下，配置文件是加载不完全的，其加载顺序如下：</p><ol><li><code>~/.bashrc</code></li><li><code>/etc/bashrc</code></li></ol><p>值得注意的是，这些配置文件都是在每次打开终端或者 Shell 时会去加载，因此如果新添加了环境变量是不会立即生效的，所以要使得环境变量立即生效可以使用 <code>source</code> 来重新加载添加了新环境变量的的配置文件。</p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ul><li><strong>定义数组</strong> <code>array=( 1 2 3 4 5 )</code> 元素间用空格区分</li><li><strong>显示数组的所有元素</strong> <code>echo $&#123;array[@]&#125;</code></li><li><strong>显示数组元素个数</strong> ```echo $</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要是记录学习 Shell 编程时所记录的一些笔记。&lt;/p&gt;</summary>
    
    
    
    <category term="Shell" scheme="http://innofang.github.io/categories/Shell/"/>
    
    
    <category term="Shell" scheme="http://innofang.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>重学MySQL之视图</title>
    <link href="http://innofang.github.io/2020/04/02/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E8%A7%86%E5%9B%BE/"/>
    <id>http://innofang.github.io/2020/04/02/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E8%A7%86%E5%9B%BE/</id>
    <published>2020-04-02T07:58:50.000Z</published>
    <updated>2020-04-03T12:25:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>重新学习 MySQL 的基础知识，本章内容为视图。</p><span id="more"></span><h2 id="认识视图"><a href="#认识视图" class="headerlink" title="认识视图"></a>认识视图</h2><p>视图是一个虚拟表，其内容由查询定义。同真实表一样，视图包含一系列带有名称的列和行数据，但视图并不是数据库真实存储的数据表。</p><p>在讲解视图的作用之前，我们先举一个例子，在此使用的数据与 <a href="https://innofang.github.io/2020/03/31/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/#%E5%87%86%E5%A4%87%E6%95%B0%E6%8D%AE">重学MySQL之查询练习</a> 中的数据一致。</p><blockquote><p>查看 student、teacher、score 三张表的数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> s_birthday          <span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span>  <span class="operator">|</span> 曾华   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span>  <span class="operator">|</span> 匡明   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 王丽   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">104</span>  <span class="operator">|</span> 李军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 王芳   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span>  <span class="operator">|</span> 陆军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span>  <span class="operator">|</span> 王尼玛 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">108</span>  <span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> course;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> c_name     <span class="operator">|</span> t_no <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span> 计算机导论 <span class="operator">|</span> <span class="number">825</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span> 操作系统   <span class="operator">|</span> <span class="number">804</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span> 数字电路   <span class="operator">|</span> <span class="number">856</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span><span class="number">-888</span> <span class="operator">|</span> 高等数学   <span class="operator">|</span> <span class="number">831</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.34</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">68</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br></pre></td></tr></table></figure><p>现在需要查询 <strong>每门课程中高于该门课程平均分的学生的成绩记录</strong></p><p>这种查询比较简单，可以用简单的子查询来解决</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 先试着查询每门课程的平均成绩</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no, <span class="built_in">AVG</span>(grade) <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> <span class="built_in">AVG</span>(grade) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">85.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">76.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">81.6667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 接着用子查询的方式求出每门课程中高于平均分的学生成绩</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">AS</span> s1 <span class="keyword">WHERE</span> grade<span class="operator">&gt;=</span>(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(grade) <span class="keyword">FROM</span> score <span class="keyword">AS</span> s2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no <span class="keyword">HAVING</span> s1.c_no<span class="operator">=</span>s2.c_no);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>在上面的查询过程中，因为都是在一张表上操作，所以使用了别名的操作，因为之前是求高于每门课程平均分的学生成绩，假如现在还需要<strong>查询低于每门课程平均分的学生成绩</strong>，或者<strong>高于每门课程平均分的男\女同学的成绩</strong>，或者 ……</p><p>可见对于这类需求，每次都需要求出每门课程的平均分，而这一数据并不存在与表中，那么为了简化操作，是否有另一种方式来简化这种查询呢？</p><p>有的。视图的目的就显现出来了，之前说，视图其实是一张虚拟表，它<strong>不是真正数据表</strong>，其结构和数据是建立在对数据中真实表的查询基础上的。<strong>视图是查看数据表的一种方法</strong>，可以查询数据表中某些字段构成的数据，<strong>只是一些 SQL 语句的集合</strong>。从安全的角度来看，<strong>视图的数据安全性更高</strong>，使用视图的用户不接触数据表，不知道表结构。要注意的是，视图是数据的窗口，而表是内容。表是实际数据的存放单位，而<strong>视图只是以不同的显示方式展示数据，其数据来源还是实际表</strong>。</p><p>有了上述例子的铺垫，下面来详细介绍视图。</p><h2 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h2><p>语法格式如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> <span class="operator">&lt;</span>视图名<span class="operator">&gt;</span> <span class="keyword">AS</span> <span class="operator">&lt;</span><span class="keyword">SELECT</span>语句<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><p>在上述例子的基础上，我们可以创建一个基于查询每门课程平均分的视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 创建视图</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">VIEW</span> avg_score <span class="keyword">AS</span> <span class="keyword">SELECT</span> c_no, <span class="built_in">AVG</span>(grade) <span class="keyword">AS</span> avg_grade <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 视图也可以被查询</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> avg_score;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-----------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> avg_grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>   <span class="number">85.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>   <span class="number">76.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>   <span class="number">81.6667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>有了视图过后，就可以简化我们之前的查询操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score, avg_score <span class="keyword">WHERE</span> score.c_no<span class="operator">=</span>avg_score.c_no <span class="keyword">AND</span> grade<span class="operator">&gt;=</span>avg_grade;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+-------+-----------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span> c_no  <span class="operator">|</span> avg_grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+-------+-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>   <span class="number">85.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>   <span class="number">76.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>   <span class="number">81.6667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>   <span class="number">85.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+-------+-----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="修改视图"><a href="#修改视图" class="headerlink" title="修改视图"></a>修改视图</h2><p>语法格式如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> <span class="operator">&lt;</span>视图名<span class="operator">&gt;</span> <span class="keyword">AS</span> <span class="operator">&lt;</span><span class="keyword">SELECT</span>语句<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>还是拿之前的例子，比如现在我们需要为视图 <code>avg_score</code> 做一个简单的修改，查询出课程号，课程名和平均成绩</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">VIEW</span> avg_score <span class="keyword">AS</span> <span class="keyword">SELECT</span> course.c_no, c_name, <span class="built_in">AVG</span>(grade) <span class="keyword">AS</span> avg_grade <span class="keyword">FROM</span> score, course <span class="keyword">WHERE</span> score.c_no<span class="operator">=</span>course.c_no <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.08</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> avg_score;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> c_name     <span class="operator">|</span> avg_grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span> 计算机导论 <span class="operator">|</span>   <span class="number">85.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span> 操作系统   <span class="operator">|</span>   <span class="number">76.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span> 数字电路   <span class="operator">|</span>   <span class="number">81.6667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+-----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h2><p>语法格式如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> <span class="operator">&lt;</span>视图名<span class="number">1</span><span class="operator">&gt;</span> [ , <span class="operator">&lt;</span>视图名<span class="number">2</span><span class="operator">&gt;</span> …]</span><br></pre></td></tr></table></figure><p>删除之前创建的视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">DROP</span> <span class="keyword">VIEW</span> avg_score;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;重新学习 MySQL 的基础知识，本章内容为视图。&lt;/p&gt;</summary>
    
    
    
    <category term="MySQL" scheme="http://innofang.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="http://innofang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>重学MySQL之查询练习</title>
    <link href="http://innofang.github.io/2020/03/31/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/"/>
    <id>http://innofang.github.io/2020/03/31/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/</id>
    <published>2020-03-31T05:26:54.000Z</published>
    <updated>2020-04-03T12:26:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>重新学习 MySQL 的基础知识，查询是数据库中常用的操作，本章主要是通过练习来实践查询操作。</p><span id="more"></span><h2 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h2><h3 id="建数据表"><a href="#建数据表" class="headerlink" title="建数据表"></a>建数据表</h3><blockquote><p>创建数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE select_test;</span><br></pre></td></tr></table></figure><blockquote><p>切换数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE select_test;</span><br></pre></td></tr></table></figure><blockquote><p>创建学生表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">    s_no <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">PRIMARY</span> KEY COMMENT <span class="string">&#x27;学生学号&#x27;</span>,</span><br><span class="line">    s_name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">    s_gender <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生性别&#x27;</span>,</span><br><span class="line">    s_birthday DATETIME COMMENT <span class="string">&#x27;学生生日&#x27;</span>,</span><br><span class="line">    class <span class="type">VARCHAR</span>(<span class="number">20</span>) COMMENT <span class="string">&#x27;学生班级&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>创建教师表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> teacher (</span><br><span class="line">    t_no <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">PRIMARY</span> KEY COMMENT <span class="string">&#x27;教师编号&#x27;</span>,</span><br><span class="line">    t_name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;教师名称&#x27;</span>,</span><br><span class="line">    t_gender <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;教师性别&#x27;</span>,</span><br><span class="line">    t_birthday DATETIME COMMENT <span class="string">&#x27;教师生日&#x27;</span>,</span><br><span class="line">    title <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;教师职称&#x27;</span>,</span><br><span class="line">    department <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;教师部门&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>创建课程表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> course (</span><br><span class="line">    c_no <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">PRIMARY</span> KEY COMMENT <span class="string">&#x27;课程编号&#x27;</span>,</span><br><span class="line">    c_name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;课程名字&#x27;</span>,</span><br><span class="line">    t_no <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;教师编号&#x27;</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(t_no) <span class="keyword">REFERENCES</span> teacher(t_no)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>创建成绩表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> score (</span><br><span class="line">    s_no <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生编号&#x27;</span>,</span><br><span class="line">    c_no <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;课程编号&#x27;</span>,</span><br><span class="line">    grade <span class="type">DECIMAL</span> COMMENT <span class="string">&#x27;分数&#x27;</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(s_no) <span class="keyword">REFERENCES</span> student(s_no),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(c_no) <span class="keyword">REFERENCES</span> course(c_no),</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(s_no, c_no)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><blockquote><p>添加学生表数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;101&#x27;</span>, <span class="string">&#x27;曾华&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1977-09-01&#x27;</span>, <span class="string">&#x27;95033&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;102&#x27;</span>, <span class="string">&#x27;匡明&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1975-10-02&#x27;</span>, <span class="string">&#x27;95031&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;103&#x27;</span>, <span class="string">&#x27;王丽&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1976-01-23&#x27;</span>, <span class="string">&#x27;95033&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;104&#x27;</span>, <span class="string">&#x27;李军&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1976-02-20&#x27;</span>, <span class="string">&#x27;95033&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;105&#x27;</span>, <span class="string">&#x27;王芳&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1975-02-10&#x27;</span>, <span class="string">&#x27;95031&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;106&#x27;</span>, <span class="string">&#x27;陆军&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1974-06-03&#x27;</span>, <span class="string">&#x27;95031&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;107&#x27;</span>, <span class="string">&#x27;王尼玛&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1976-02-20&#x27;</span>, <span class="string">&#x27;95033&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;108&#x27;</span>, <span class="string">&#x27;张全蛋&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1975-02-10&#x27;</span>, <span class="string">&#x27;95031&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">&#x27;109&#x27;</span>, <span class="string">&#x27;赵铁柱&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1974-06-03&#x27;</span>, <span class="string">&#x27;95031&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>添加教师表数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;804&#x27;</span>, <span class="string">&#x27;李诚&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1958-12-02&#x27;</span>, <span class="string">&#x27;副教授&#x27;</span>, <span class="string">&#x27;计算机系&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;856&#x27;</span>, <span class="string">&#x27;张旭&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1969-03-12&#x27;</span>, <span class="string">&#x27;讲师&#x27;</span>, <span class="string">&#x27;电子工程系&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;825&#x27;</span>, <span class="string">&#x27;王萍&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1972-05-05&#x27;</span>, <span class="string">&#x27;助教&#x27;</span>, <span class="string">&#x27;计算机系&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;831&#x27;</span>, <span class="string">&#x27;刘冰&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1977-08-14&#x27;</span>, <span class="string">&#x27;助教&#x27;</span>, <span class="string">&#x27;电子工程系&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>添加课程表数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;3-105&#x27;</span>, <span class="string">&#x27;计算机导论&#x27;</span>, <span class="string">&#x27;825&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;3-245&#x27;</span>, <span class="string">&#x27;操作系统&#x27;</span>, <span class="string">&#x27;804&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;6-166&#x27;</span>, <span class="string">&#x27;数字电路&#x27;</span>, <span class="string">&#x27;856&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;9-888&#x27;</span>, <span class="string">&#x27;高等数学&#x27;</span>, <span class="string">&#x27;831&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>添加成绩表数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;103&#x27;</span>, <span class="string">&#x27;3-105&#x27;</span>, <span class="string">&#x27;92&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;103&#x27;</span>, <span class="string">&#x27;3-245&#x27;</span>, <span class="string">&#x27;86&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;103&#x27;</span>, <span class="string">&#x27;6-166&#x27;</span>, <span class="string">&#x27;85&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;105&#x27;</span>, <span class="string">&#x27;3-105&#x27;</span>, <span class="string">&#x27;88&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;105&#x27;</span>, <span class="string">&#x27;3-245&#x27;</span>, <span class="string">&#x27;75&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;105&#x27;</span>, <span class="string">&#x27;6-166&#x27;</span>, <span class="string">&#x27;79&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;109&#x27;</span>, <span class="string">&#x27;3-105&#x27;</span>, <span class="string">&#x27;76&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;109&#x27;</span>, <span class="string">&#x27;3-245&#x27;</span>, <span class="string">&#x27;68&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> score <span class="keyword">VALUES</span>(<span class="string">&#x27;109&#x27;</span>, <span class="string">&#x27;6-166&#x27;</span>, <span class="string">&#x27;81&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="基本查询练习"><a href="#基本查询练习" class="headerlink" title="基本查询练习"></a>基本查询练习</h2><h4 id="1-查询-student-表的所有记录"><a href="#1-查询-student-表的所有记录" class="headerlink" title="1. 查询 student 表的所有记录"></a>1. 查询 student 表的所有记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> s_birthday          <span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span>  <span class="operator">|</span> 曾华   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span>  <span class="operator">|</span> 匡明   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 王丽   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">104</span>  <span class="operator">|</span> 李军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 王芳   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span>  <span class="operator">|</span> 陆军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span>  <span class="operator">|</span> 王尼玛 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">108</span>  <span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="2-查询-student-表中的-s-name、s-gender-和-class-字段的所有记录"><a href="#2-查询-student-表中的-s-name、s-gender-和-class-字段的所有记录" class="headerlink" title="2. 查询 student 表中的 s_name、s_gender 和 class 字段的所有记录"></a>2. 查询 student 表中的 s_name、s_gender 和 class 字段的所有记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_name, s_gender, class <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> 曾华   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 匡明   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 陆军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王尼玛 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="3-查询-teacher-表中不重复的-department-列"><a href="#3-查询-teacher-表中不重复的-department-列" class="headerlink" title="3. 查询 teacher 表中不重复的 department 列"></a>3. 查询 teacher 表中不重复的 department 列</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(department) <span class="keyword">FROM</span> teacher;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> department <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> 计算机系   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 电子工程系 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="4-查询-score-表中成绩在60-80之间的所有记录（区间查询和运算符查询）"><a href="#4-查询-score-表中成绩在60-80之间的所有记录（区间查询和运算符查询）" class="headerlink" title="4. 查询 score 表中成绩在60-80之间的所有记录（区间查询和运算符查询）"></a>4. 查询 score 表中成绩在60-80之间的所有记录（区间查询和运算符查询）</h4><blockquote><p>区间查询：<code>BETWEEN a AND b</code>, 查询区间为 [a, b]</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 运算符查询</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> grade<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">AND</span> grade<span class="operator">&lt;=</span><span class="number">80</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">68</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 区间查询</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> grade <span class="keyword">BETWEEN</span> <span class="number">60</span> <span class="keyword">AND</span> <span class="number">80</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="5-查询-score-表中成绩为-85-86-或-88-的记录"><a href="#5-查询-score-表中成绩为-85-86-或-88-的记录" class="headerlink" title="5. 查询 score 表中成绩为 85, 86 或 88 的记录"></a>5. 查询 score 表中成绩为 85, 86 或 88 的记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> grade <span class="keyword">IN</span> (<span class="number">85</span>, <span class="number">86</span>, <span class="number">88</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="6-查询-student-表中-‘95031’-班或性别为-‘女’-的所有记录"><a href="#6-查询-student-表中-‘95031’-班或性别为-‘女’-的所有记录" class="headerlink" title="6. 查询 student 表中 ‘95031’ 班或性别为 ‘女’ 的所有记录"></a>6. 查询 student 表中 ‘95031’ 班或性别为 ‘女’ 的所有记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> class<span class="operator">=</span><span class="string">&#x27;95031&#x27;</span> <span class="keyword">OR</span> s_gender<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> s_birthday          <span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span>  <span class="operator">|</span> 匡明   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 王丽   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 王芳   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span>  <span class="operator">|</span> 陆军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">108</span>  <span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="7-以-class-降序的方式查询-student-表的所有记录"><a href="#7-以-class-降序的方式查询-student-表的所有记录" class="headerlink" title="7. 以 class 降序的方式查询 student 表的所有记录"></a>7. 以 class 降序的方式查询 student 表的所有记录</h4><blockquote><p><code>ORDER By</code> 对字段进行排序：默认升序（<code>ASC</code>），降序为 <code>DESC</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> class <span class="keyword">DESC</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> s_birthday          <span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span>  <span class="operator">|</span> 曾华   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 王丽   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">104</span>  <span class="operator">|</span> 李军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span>  <span class="operator">|</span> 王尼玛 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span>  <span class="operator">|</span> 匡明   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 王芳   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span>  <span class="operator">|</span> 陆军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">108</span>  <span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="8-以-c-no-升序、grade-降序查询-score-表的所有记录"><a href="#8-以-c-no-升序、grade-降序查询-score-表的所有记录" class="headerlink" title="8. 以 c_no 升序、grade 降序查询 score 表的所有记录"></a>8. 以 c_no 升序、grade 降序查询 score 表的所有记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">ORDER</span> <span class="keyword">BY</span> c_no <span class="keyword">ASC</span>, grade <span class="keyword">DESC</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">68</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="9-查询-“95031”-班的学生人数"><a href="#9-查询-“95031”-班的学生人数" class="headerlink" title="9. 查询 “95031” 班的学生人数"></a>9. 查询 “95031” 班的学生人数</h4><blockquote><p>使用 <code>COUNT()</code> 函数进行统计</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> class<span class="operator">=</span>&quot;95031&quot;;</span><br></pre></td></tr></table></figure><h4 id="10-查询-score-表中的最高分的学生学号和课程编号（子查询或排序查询）"><a href="#10-查询-score-表中的最高分的学生学号和课程编号（子查询或排序查询）" class="headerlink" title="10. 查询 score 表中的最高分的学生学号和课程编号（子查询或排序查询）"></a>10. 查询 score 表中的最高分的学生学号和课程编号（子查询或排序查询）</h4><blockquote><p>LIMIT 关键字用法：<code>LIMIT 起始位置, 数量</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, c_no <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> grade<span class="operator">=</span>(<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(grade) <span class="keyword">FROM</span> score);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以使用降序排序，取第一个的方法，但对于有多个相同最大值的情况不能确保数量正确</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, c_no <span class="keyword">FROM</span> score <span class="keyword">ORDER</span> <span class="keyword">BY</span> grade <span class="keyword">DESC</span> LIMIT <span class="number">0</span>, <span class="number">1</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="11-查询每门课的平均成绩"><a href="#11-查询每门课的平均成绩" class="headerlink" title="11. 查询每门课的平均成绩"></a>11. 查询每门课的平均成绩</h4><blockquote><p><code>AVG()</code> 函数可以计算平均值; <code>GROUP BY</code> 可以按列分组</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 需要计算每门课的平均成绩，所以需要按课程类型分组，否则统一计算只会得到一个平均成绩</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no, <span class="built_in">AVG</span>(grade) <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> <span class="built_in">AVG</span>(grade) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">85.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">76.3333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">81.6667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="12-查询-score-表中至少有-2-名学生选修的-并且以-3-开头的课程的平均分"><a href="#12-查询-score-表中至少有-2-名学生选修的-并且以-3-开头的课程的平均分" class="headerlink" title="12. 查询 score 表中至少有 2 名学生选修的, 并且以 3 开头的课程的平均分"></a>12. 查询 score 表中至少有 2 名学生选修的, 并且以 3 开头的课程的平均分</h4><blockquote><p>模糊查询可以使用 <code>LIKE</code> 关键字，”<code>%</code>“ 是一个通配符，<code>3%</code> 用来匹配以 3 开头的课程<br>在 <code>GROUP BY</code> 使用条件查询需要使用 <code>HAVING</code> 关键字而非 <code>WHERE</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no, <span class="built_in">AVG</span>(grade), <span class="built_in">COUNT</span>(c_no) <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(c_no) <span class="operator">&gt;=</span> <span class="number">2</span> <span class="keyword">AND</span> c_no <span class="keyword">LIKE</span> <span class="string">&#x27;3%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> <span class="built_in">AVG</span>(grade) <span class="operator">|</span> <span class="built_in">COUNT</span>(c_no) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">85.3333</span> <span class="operator">|</span>           <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">76.3333</span> <span class="operator">|</span>           <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+-------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="13-查询分数大于-70-但是小于-90-的-s-no-列"><a href="#13-查询分数大于-70-但是小于-90-的-s-no-列" class="headerlink" title="13. 查询分数大于 70 但是小于 90 的 s_no 列:"></a>13. 查询分数大于 70 但是小于 90 的 s_no 列:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, grade <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> grade <span class="operator">&gt;</span> <span class="number">70</span> <span class="keyword">AND</span> grade <span class="operator">&lt;</span> <span class="number">90</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+</span></span><br><span class="line"><span class="number">7</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, grade <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> grade <span class="keyword">BETWEEN</span> <span class="number">71</span> <span class="keyword">AND</span> <span class="number">89</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="14-查询所有的学生-s-name-c-no-grade-列"><a href="#14-查询所有的学生-s-name-c-no-grade-列" class="headerlink" title="14. 查询所有的学生 s_name , c_no, grade 列"></a>14. 查询所有的学生 s_name , c_no, grade 列</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_name, c_no, grade <span class="keyword">FROM</span> student, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_name <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">68</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure><h4 id="15-查询所有学生的-s-no-c-name-grade-列"><a href="#15-查询所有学生的-s-no-c-name-grade-列" class="headerlink" title="15. 查询所有学生的 s_no, c_name, grade 列"></a>15. 查询所有学生的 s_no, c_name, grade 列</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, c_name, grade <span class="keyword">FROM</span> course, score <span class="keyword">WHERE</span> course.c_no<span class="operator">=</span>score.c_no;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_name     <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 计算机导论 <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 操作系统   <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 数字电路   <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 计算机导论 <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 操作系统   <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 数字电路   <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 计算机导论 <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 操作系统   <span class="operator">|</span>    <span class="number">68</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 数字电路   <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.07</span> sec)</span><br></pre></td></tr></table></figure><h4 id="16-查询所有的学生-s-name-c-name-grade-列"><a href="#16-查询所有的学生-s-name-c-name-grade-列" class="headerlink" title="16. 查询所有的学生 s_name , c_name, grade 列"></a>16. 查询所有的学生 s_name , c_name, grade 列</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_name, c_name, grade <span class="keyword">FROM</span> student, course, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no <span class="keyword">AND</span> course.c_no<span class="operator">=</span>score.c_no;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_name <span class="operator">|</span> c_name     <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span> 计算机导论 <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span> 操作系统   <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span> 数字电路   <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span> 计算机导论 <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span> 操作系统   <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span> 数字电路   <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 计算机导论 <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 操作系统   <span class="operator">|</span>    <span class="number">68</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 数字电路   <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="17-查询班级是’95031’班学生每门课的平均分"><a href="#17-查询班级是’95031’班学生每门课的平均分" class="headerlink" title="17. 查询班级是’95031’班学生每门课的平均分"></a>17. 查询班级是’95031’班学生每门课的平均分</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 1. 先试着查询 95031 班的学生成绩</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no, grade <span class="keyword">FROM</span> student, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no <span class="keyword">AND</span> class<span class="operator">=</span><span class="string">&#x27;95031&#x27;</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 2. 然后按课程号 c_no 分组，再求平均分</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no, <span class="built_in">AVG</span>(grade) <span class="keyword">FROM</span> student, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no <span class="keyword">AND</span> class<span class="operator">=</span><span class="string">&#x27;95031&#x27;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> <span class="built_in">AVG</span>(grade) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">82.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">71.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">80.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以使用子查询加分组的方式</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no, <span class="built_in">AVG</span>(grade) <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> s_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> s_no <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> class<span class="operator">=</span><span class="string">&#x27;95031&#x27;</span>) <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="18-查询选修-‘3-105’-课程且成绩高于-‘109’-号同学的-‘3-105’-课程成绩的所有同学的记录"><a href="#18-查询选修-‘3-105’-课程且成绩高于-‘109’-号同学的-‘3-105’-课程成绩的所有同学的记录" class="headerlink" title="18. 查询选修 ‘3-105’ 课程且成绩高于 ‘109’ 号同学的 ‘3-105’ 课程成绩的所有同学的记录"></a>18. 查询选修 ‘3-105’ 课程且成绩高于 ‘109’ 号同学的 ‘3-105’ 课程成绩的所有同学的记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 1. 先试着查绚选修了 3-105 课程的 109 号同学的分数</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> grade <span class="keyword">FROM</span> student, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no <span class="keyword">AND</span> c_no<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> score.s_no<span class="operator">=</span><span class="string">&#x27;109&#x27;</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 2. 再查询成绩高于 109 号同学的所有同学记录</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no <span class="keyword">AND</span> c_no<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> grade <span class="operator">&gt;</span> (<span class="keyword">SELECT</span> grade <span class="keyword">FROM</span> student, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no <span class="keyword">AND</span> c_no<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> score.s_no<span class="operator">=</span><span class="string">&#x27;109&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> s_birthday          <span class="operator">|</span> class <span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 王丽   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 王芳   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+------+-------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="19-查询成绩高于选修了-‘3-105’-课程且学号为-‘109’-的同学的成绩的所有记录"><a href="#19-查询成绩高于选修了-‘3-105’-课程且学号为-‘109’-的同学的成绩的所有记录" class="headerlink" title="19. 查询成绩高于选修了 ‘3-105’ 课程且学号为 ‘109’ 的同学的成绩的所有记录"></a>19. 查询成绩高于选修了 ‘3-105’ 课程且学号为 ‘109’ 的同学的成绩的所有记录</h4><blockquote><p>相比于 T18，该问题不限制课程号，只要成绩大于109号同学的3-105课程成绩即可，并且查询的只是 score 表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> grade <span class="operator">&gt;</span> (<span class="keyword">SELECT</span> grade <span class="keyword">FROM</span> student, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no <span class="keyword">AND</span> c_no<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> score.s_no<span class="operator">=</span><span class="string">&#x27;109&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="20-查询与学号为-101-和-108-的同学同年出生的所有学生的-s-no、s-name-和-s-birthday"><a href="#20-查询与学号为-101-和-108-的同学同年出生的所有学生的-s-no、s-name-和-s-birthday" class="headerlink" title="20. 查询与学号为 101 和 108 的同学同年出生的所有学生的 s_no、s_name 和 s_birthday"></a>20. 查询与学号为 101 和 108 的同学同年出生的所有学生的 s_no、s_name 和 s_birthday</h4><blockquote><p>因为要匹配同年出生，所以要对取出生日的年份，使用 <code>YEAR()</code> 函数</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, s_name, s_birthday <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(s_birthday) <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(s_birthday) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_no <span class="keyword">IN</span> (<span class="string">&#x27;101&#x27;</span>, <span class="string">&#x27;108&#x27;</span>));</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_birthday          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span>  <span class="operator">|</span> 曾华   <span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span>  <span class="operator">|</span> 匡明   <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 王芳   <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">108</span>  <span class="operator">|</span> 张全蛋 <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+---------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="21-查询任课教师为-‘张旭’-的学生的成绩"><a href="#21-查询任课教师为-‘张旭’-的学生的成绩" class="headerlink" title="21. 查询任课教师为 ‘张旭’ 的学生的成绩"></a>21. 查询任课教师为 ‘张旭’ 的学生的成绩</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, score.c_no, grade <span class="keyword">FROM</span> teacher, course, score <span class="keyword">WHERE</span> teacher.t_no<span class="operator">=</span>course.t_no <span class="keyword">AND</span> course.c_no<span class="operator">=</span>score.c_no <span class="keyword">AND</span> t_name<span class="operator">=</span><span class="string">&#x27;张旭&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以使用多层嵌套子查询的方式</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 1. 先找到 &#x27;张旭&#x27; 老师的教师号</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> t_name<span class="operator">=</span><span class="string">&#x27;张旭&#x27;</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 2. 再找到 &#x27;张旭&#x27; 老师所教授的课程号</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> t_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> t_name<span class="operator">=</span><span class="string">&#x27;张旭&#x27;</span>);</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 3. 再从 score 表中找到对应课程号的成绩</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, c_no, grade <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> t_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> t_name<span class="operator">=</span><span class="string">&#x27;张旭&#x27;</span>));</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="22-查询选修人数大于-2-人的课程的教师姓名"><a href="#22-查询选修人数大于-2-人的课程的教师姓名" class="headerlink" title="22. 查询选修人数大于 2 人的课程的教师姓名"></a>22. 查询选修人数大于 2 人的课程的教师姓名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 只需查询教师名字，但为了直观还是多输出了一些信息</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> course.c_no, c_name, t_name, <span class="built_in">COUNT</span>(course.c_no) <span class="keyword">FROM</span> teacher, course, score <span class="keyword">WHERE</span> teacher.t_no<span class="operator">=</span>course.t_no <span class="keyword">AND</span> course.c_no<span class="operator">=</span>score.c_no <span class="keyword">GROUP</span> <span class="keyword">BY</span> score.c_no <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(course.c_no) <span class="operator">&gt;</span> <span class="number">2</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+--------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> c_name     <span class="operator">|</span> t_name <span class="operator">|</span> <span class="built_in">COUNT</span>(course.c_no) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+--------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span> 计算机导论 <span class="operator">|</span> 王萍   <span class="operator">|</span>                  <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span> 操作系统   <span class="operator">|</span> 李诚   <span class="operator">|</span>                  <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span> 数字电路   <span class="operator">|</span> 张旭   <span class="operator">|</span>                  <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+--------+--------------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以使用多层嵌套子查询的方式</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 1. 先按课程分组，查询选修人数大于 2 的课程编号</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 2. 再通过课程表，利用课程编号查询出对应的教师编号</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> c_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">2</span>);</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 3. 再通过教师表，利用教师编号查询出对应的教师名称</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> t_name <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> t_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> c_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_no <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">2</span>));</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> t_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> 李诚   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王萍   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张旭   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="23-查询-95033-班和-95031-班全体学生的记录"><a href="#23-查询-95033-班和-95031-班全体学生的记录" class="headerlink" title="23. 查询 95033 班和 95031 班全体学生的记录"></a>23. 查询 95033 班和 95031 班全体学生的记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> class <span class="keyword">IN</span> (<span class="string">&#x27;95033&#x27;</span>, <span class="string">&#x27;95031&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> s_birthday          <span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span>  <span class="operator">|</span> 曾华   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span>  <span class="operator">|</span> 匡明   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 王丽   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">104</span>  <span class="operator">|</span> 李军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 王芳   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span>  <span class="operator">|</span> 陆军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span>  <span class="operator">|</span> 王尼玛 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">108</span>  <span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="24-查询存在-85-分以上成绩的课程-c-no"><a href="#24-查询存在-85-分以上成绩的课程-c-no" class="headerlink" title="24. 查询存在 85 分以上成绩的课程 c_no"></a>24. 查询存在 85 分以上成绩的课程 c_no</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> grade <span class="operator">&gt;</span> <span class="number">85</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="25-查出所有-‘计算机系’-教师所教课程的成绩表"><a href="#25-查出所有-‘计算机系’-教师所教课程的成绩表" class="headerlink" title="25. 查出所有 ‘计算机系’ 教师所教课程的成绩表"></a>25. 查出所有 ‘计算机系’ 教师所教课程的成绩表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, score.c_no, grade <span class="keyword">FROM</span> teacher, course, score <span class="keyword">WHERE</span> teacher.t_no<span class="operator">=</span>course.t_no <span class="keyword">AND</span> course.c_no<span class="operator">=</span>score.c_no <span class="keyword">AND</span> department<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">86</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">68</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以使用多层嵌套子查询的方式</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 1. 通过教师表，先找出 &#x27;计算机系&#x27; 老师的教师编号</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> department<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 2. 通过课程表，再找出对应老师所教授课程的课程编号</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> t_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> department<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span>);</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 2. 通过成绩表，找出对应课程的成绩</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> t_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> department<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span>));</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="26-查询-‘计算机系’-与-‘电子工程系’-中不同职称的教师的所有记录-职称相同的不输出"><a href="#26-查询-‘计算机系’-与-‘电子工程系’-中不同职称的教师的所有记录-职称相同的不输出" class="headerlink" title="26. 查询 ‘计算机系’ 与 ‘电子工程系’ 中不同职称的教师的所有记录 (职称相同的不输出)"></a>26. 查询 ‘计算机系’ 与 ‘电子工程系’ 中不同职称的教师的所有记录 (职称相同的不输出)</h4><blockquote><p>换句话说，题目大意就是，找出两个系中职称互补的教师，职称相交的不要<br>电子工程系中已有的职称，计算机系中不能有人有，反过来计算机系中有的职称，电子工程系不能有人有<br>两个系的职称是互补的，互补的输出需要将查询结果进行联合，使用 <code>UNION</code> 关键字联合两个查询的结果</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> department<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span> <span class="keyword">AND</span> title <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> title <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> department<span class="operator">=</span><span class="string">&#x27;电子工程系&#x27;</span>)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">UNION</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> department<span class="operator">=</span><span class="string">&#x27;电子工程系&#x27;</span> <span class="keyword">AND</span> title <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> title <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> department<span class="operator">=</span><span class="string">&#x27;计算机系&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+--------+------------+</span></span><br><span class="line"><span class="operator">|</span> t_no <span class="operator">|</span> t_name <span class="operator">|</span> t_gender <span class="operator">|</span> t_birthday          <span class="operator">|</span> title  <span class="operator">|</span> department <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+--------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">804</span>  <span class="operator">|</span> 李诚   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1958</span><span class="number">-12</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> 副教授 <span class="operator">|</span> 计算机系   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">856</span>  <span class="operator">|</span> 张旭   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1969</span><span class="number">-03</span><span class="number">-12</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> 讲师   <span class="operator">|</span> 电子工程系 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+--------+------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h4 id="27-查询在-‘3-105’-课程中考得至少比其中一些-‘3-245’-课程好的同学的-c-no-s-no-和-grade-并且按照-grade-从高到低次序排序"><a href="#27-查询在-‘3-105’-课程中考得至少比其中一些-‘3-245’-课程好的同学的-c-no-s-no-和-grade-并且按照-grade-从高到低次序排序" class="headerlink" title="27. 查询在 ‘3-105’ 课程中考得至少比其中一些 ‘3-245’ 课程好的同学的 c_no, s_no 和 grade, 并且按照 grade 从高到低次序排序"></a>27. 查询在 ‘3-105’ 课程中考得至少比其中一些 ‘3-245’ 课程好的同学的 c_no, s_no 和 grade, 并且按照 grade 从高到低次序排序</h4><blockquote><p>只要 ‘3-105’ 课程的学生成绩比其中至少一个 ‘3-245’ 课程的学生成绩好即符合要求，要表达 <code>任意一个</code> 的目的，可以使用 <code>ANY()</code> 函数</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> grade<span class="operator">&gt;</span><span class="keyword">ANY</span>(<span class="keyword">SELECT</span> grade <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span><span class="string">&#x27;3-245&#x27;</span>) <span class="keyword">ORDER</span> <span class="keyword">BY</span> grade <span class="keyword">DESC</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以让选修 3-105 的同学成绩与选修 3-245 的同学的最低成绩作比较</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> grade<span class="operator">&gt;</span>(<span class="keyword">SELECT</span> <span class="built_in">MIN</span>(grade) <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span><span class="string">&#x27;3-245&#x27;</span>) <span class="keyword">ORDER</span> <span class="keyword">BY</span> grade <span class="keyword">DESC</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="28-查询在-‘3-105’-课程中考得比-‘3-245’-课程中都好的同学的-c-no-s-no-和-grade"><a href="#28-查询在-‘3-105’-课程中考得比-‘3-245’-课程中都好的同学的-c-no-s-no-和-grade" class="headerlink" title="28. 查询在 ‘3-105’ 课程中考得比 ‘3-245’ 课程中都好的同学的 c_no, s_no 和 grade"></a>28. 查询在 ‘3-105’ 课程中考得比 ‘3-245’ 课程中都好的同学的 c_no, s_no 和 grade</h4><blockquote><p>相比于 T27，本题要表达的是 <code>都要好</code> 的概念，因此需要使用 <code>ALL()</code> 函数</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> grade<span class="operator">&gt;</span><span class="keyword">ALL</span>(<span class="keyword">SELECT</span> grade <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span><span class="string">&#x27;3-245&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以让选修 3-105 的同学成绩与选修 3-245 的同学的最高成绩成绩作比较</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> grade<span class="operator">&gt;</span>(<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(grade) <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span><span class="string">&#x27;3-245&#x27;</span>);</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="29-查询所有教师和同学的-name、gender、birthday"><a href="#29-查询所有教师和同学的-name、gender、birthday" class="headerlink" title="29. 查询所有教师和同学的 name、gender、birthday"></a>29. 查询所有教师和同学的 name、gender、birthday</h4><blockquote><p>因为 t_name 和 s_name 都表示姓名，并且在联合查询的结果中，会发现只有 t_name、t_gender、t_birthday，所以为了统一，可以使用别名，利用 <code>AS</code> 关键字即可</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> t_name <span class="keyword">AS</span> name, t_gender <span class="keyword">AS</span> gender, t_birthday <span class="keyword">AS</span> birthday <span class="keyword">FROM</span> teacher</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">UNION</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_name, s_gender, s_birthday <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> name   <span class="operator">|</span> gender <span class="operator">|</span> birthday            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> 李诚   <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1958</span><span class="number">-12</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王萍   <span class="operator">|</span> 女     <span class="operator">|</span> <span class="number">1972</span><span class="number">-05</span><span class="number">-05</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 刘冰   <span class="operator">|</span> 女     <span class="operator">|</span> <span class="number">1977</span><span class="number">-08</span><span class="number">-14</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张旭   <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1969</span><span class="number">-03</span><span class="number">-12</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 曾华   <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 匡明   <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span> 女     <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李军   <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span> 女     <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 陆军   <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王尼玛 <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男     <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+---------------------+</span></span><br><span class="line"><span class="number">13</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="30-查询所有-‘女’-教师和-‘女’-学生的-name、gender-和-birthday"><a href="#30-查询所有-‘女’-教师和-‘女’-学生的-name、gender-和-birthday" class="headerlink" title="30. 查询所有 ‘女’ 教师和 ‘女’ 学生的 name、gender 和 birthday"></a>30. 查询所有 ‘女’ 教师和 ‘女’ 学生的 name、gender 和 birthday</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> t_name <span class="keyword">AS</span> name, t_gender <span class="keyword">AS</span> gender, t_birthday <span class="keyword">AS</span> birthday <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> t_gender<span class="operator">=</span><span class="string">&#x27;女&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">UNION</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_name, s_gender, s_birthday <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_gender<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> name <span class="operator">|</span> gender <span class="operator">|</span> birthday            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> 王萍 <span class="operator">|</span> 女     <span class="operator">|</span> <span class="number">1972</span><span class="number">-05</span><span class="number">-05</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 刘冰 <span class="operator">|</span> 女     <span class="operator">|</span> <span class="number">1977</span><span class="number">-08</span><span class="number">-14</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王丽 <span class="operator">|</span> 女     <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳 <span class="operator">|</span> 女     <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+---------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="31-查询成绩比该课程平均成绩低的同学的成绩表"><a href="#31-查询成绩比该课程平均成绩低的同学的成绩表" class="headerlink" title="31. 查询成绩比该课程平均成绩低的同学的成绩表"></a>31. 查询成绩比该课程平均成绩低的同学的成绩表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">AS</span> a <span class="keyword">WHERE</span> grade<span class="operator">&lt;</span>(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(grade) <span class="keyword">FROM</span> score <span class="keyword">AS</span> b <span class="keyword">WHERE</span> a.c_no<span class="operator">=</span>b.c_no);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">79</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span>    <span class="number">68</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span>    <span class="number">81</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="32-查询所有任课教师的-t-name-和-department"><a href="#32-查询所有任课教师的-t-name-和-department" class="headerlink" title="32. 查询所有任课教师的 t_name 和 department"></a>32. 查询所有任课教师的 t_name 和 department</h4><blockquote><p>要注意是任课教师，所以需要结合课程表来查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> t_name, department <span class="keyword">FROM</span> teacher, course <span class="keyword">WHERE</span> teacher.t_no<span class="operator">=</span>course.t_no;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> t_name <span class="operator">|</span> department <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> 李诚   <span class="operator">|</span> 计算机系   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王萍   <span class="operator">|</span> 计算机系   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 刘冰   <span class="operator">|</span> 电子工程系 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张旭   <span class="operator">|</span> 电子工程系 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以用子查询的方式</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> t_name, department <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> t_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> course);</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="33-查出至少有2名男生的班号"><a href="#33-查出至少有2名男生的班号" class="headerlink" title="33. 查出至少有2名男生的班号"></a>33. 查出至少有2名男生的班号</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> class <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_gender<span class="operator">=</span><span class="string">&#x27;男&#x27;</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> class <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="34-查询-student-表中不姓-‘王’-的同学的记录"><a href="#34-查询-student-表中不姓-‘王’-的同学的记录" class="headerlink" title="34. 查询 student 表中不姓 ‘王’ 的同学的记录"></a>34. 查询 student 表中不姓 ‘王’ 的同学的记录</h4><blockquote><p>模糊查询可以使用 <code>LIKE</code> 关键字，如果要对模糊查询结果取反可以使用 <code>NOT LIKE</code><br>也可以对复杂字符串匹配使用正则表达式，使用关键字 <code>REGEXP</code></p><blockquote><p><code>不姓 &#39;王&#39; 的同学</code> 的正则表达式：<code>^[^王].+</code>，第一个 <code>^</code> 表示要匹配的字符串的开头，<code>[]</code> 内的 <code>^</code> 表示剔除方括号内的内容， <code>^[^王]</code> 表示第字符串开头不为王，<br><code>.</code> 表示任意任意字符，<code>.+</code> 表示匹配任意字符一次或多次，因为中文名字不会只有姓氏，还至少包含一个名</p></blockquote></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_name <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">&#x27;王%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> s_birthday          <span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span>  <span class="operator">|</span> 曾华   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span>  <span class="operator">|</span> 匡明   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">104</span>  <span class="operator">|</span> 李军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span>  <span class="operator">|</span> 陆军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">108</span>  <span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 也可以使用正则表达式来查询不姓王的同学</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_name REGEXP <span class="string">&#x27;^[^王].+&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><h4 id="35-查询-student-中每个学生的姓名和年龄"><a href="#35-查询-student-中每个学生的姓名和年龄" class="headerlink" title="35. 查询 student 中每个学生的姓名和年龄"></a>35. 查询 student 中每个学生的姓名和年龄</h4><blockquote><p>年龄 = 当前时间 - 出生年份，当前时间可以通过 <code>NOW()</code> 函数获取，年份可以通过 <code>YEAR()</code> 函数获取</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_name, <span class="keyword">YEAR</span>(NOW()) <span class="operator">-</span> <span class="keyword">YEAR</span>(s_birthday) <span class="keyword">AS</span> age <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+</span></span><br><span class="line"><span class="operator">|</span> s_name <span class="operator">|</span> age  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+</span></span><br><span class="line"><span class="operator">|</span> 曾华   <span class="operator">|</span>   <span class="number">43</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 匡明   <span class="operator">|</span>   <span class="number">45</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王丽   <span class="operator">|</span>   <span class="number">44</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李军   <span class="operator">|</span>   <span class="number">44</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王芳   <span class="operator">|</span>   <span class="number">45</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 陆军   <span class="operator">|</span>   <span class="number">46</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王尼玛 <span class="operator">|</span>   <span class="number">44</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张全蛋 <span class="operator">|</span>   <span class="number">45</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span>   <span class="number">46</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="36-查询-student-表中最大和最小的-s-birthday-的值"><a href="#36-查询-student-表中最大和最小的-s-birthday-的值" class="headerlink" title="36. 查询 student 表中最大和最小的 s_birthday 的值"></a>36. 查询 student 表中最大和最小的 s_birthday 的值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(s_birthday), <span class="built_in">MIN</span>(s_birthday) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">MAX</span>(s_birthday)     <span class="operator">|</span> <span class="built_in">MIN</span>(s_birthday)     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="37-以班级号和年龄从大到小的顺序查询-student-表中的全部记录"><a href="#37-以班级号和年龄从大到小的顺序查询-student-表中的全部记录" class="headerlink" title="37. 以班级号和年龄从大到小的顺序查询 student 表中的全部记录"></a>37. 以班级号和年龄从大到小的顺序查询 student 表中的全部记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> class <span class="keyword">DESC</span>, s_birthday;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> s_name <span class="operator">|</span> s_gender <span class="operator">|</span> s_birthday          <span class="operator">|</span> class <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> 王丽   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1976</span><span class="number">-01</span><span class="number">-23</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">104</span>  <span class="operator">|</span> 李军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span>  <span class="operator">|</span> 王尼玛 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1976</span><span class="number">-02</span><span class="number">-20</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span>  <span class="operator">|</span> 曾华   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1977</span><span class="number">-09</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95033</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span>  <span class="operator">|</span> 陆军   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> 赵铁柱 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1974</span><span class="number">-06</span><span class="number">-03</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> 王芳   <span class="operator">|</span> 女       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">108</span>  <span class="operator">|</span> 张全蛋 <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-02</span><span class="number">-10</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span>  <span class="operator">|</span> 匡明   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1975</span><span class="number">-10</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> <span class="number">95031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="38-查询所有-‘男’-教师及其所教授的课程"><a href="#38-查询所有-‘男’-教师及其所教授的课程" class="headerlink" title="38. 查询所有 ‘男’ 教师及其所教授的课程"></a>38. 查询所有 ‘男’ 教师及其所教授的课程</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> teacher, course <span class="keyword">WHERE</span> t_gender<span class="operator">=</span><span class="string">&#x27;男&#x27;</span> <span class="keyword">AND</span> teacher.t_no<span class="operator">=</span>course.t_no;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+--------+------------+-------+----------+------+</span></span><br><span class="line"><span class="operator">|</span> t_no <span class="operator">|</span> t_name <span class="operator">|</span> t_gender <span class="operator">|</span> t_birthday          <span class="operator">|</span> title  <span class="operator">|</span> department <span class="operator">|</span> c_no  <span class="operator">|</span> c_name   <span class="operator">|</span> t_no <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+--------+------------+-------+----------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">804</span>  <span class="operator">|</span> 李诚   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1958</span><span class="number">-12</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> 副教授 <span class="operator">|</span> 计算机系   <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span> 操作系统 <span class="operator">|</span> <span class="number">804</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">856</span>  <span class="operator">|</span> 张旭   <span class="operator">|</span> 男       <span class="operator">|</span> <span class="number">1969</span><span class="number">-03</span><span class="number">-12</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">|</span> 讲师   <span class="operator">|</span> 电子工程系 <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span> 数字电路 <span class="operator">|</span> <span class="number">856</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+----------+---------------------+--------+------------+-------+----------+------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 或者使用子查询的方式</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> t_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> t_no <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> t_gender<span class="operator">=</span><span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+</span></span><br><span class="line"><span class="operator">|</span> c_no  <span class="operator">|</span> c_name   <span class="operator">|</span> t_no <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span> 操作系统 <span class="operator">|</span> <span class="number">804</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span> 数字电路 <span class="operator">|</span> <span class="number">856</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="39-查询最高分同学的-s-no、c-no-和-grade"><a href="#39-查询最高分同学的-s-no、c-no-和-grade" class="headerlink" title="39. 查询最高分同学的 s_no、c_no 和 grade"></a>39. 查询最高分同学的 s_no、c_no 和 grade</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> student.s_no, c_no, grade <span class="keyword">FROM</span> student, score <span class="keyword">WHERE</span> student.s_no<span class="operator">=</span>score.s_no <span class="keyword">AND</span> grade<span class="operator">=</span>(<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(grade) <span class="keyword">FROM</span> score);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="40-查询和-‘李军’-同性别的所有同学的-s-name"><a href="#40-查询和-‘李军’-同性别的所有同学的-s-name" class="headerlink" title="40. 查询和 ‘李军’ 同性别的所有同学的 s_name"></a>40. 查询和 ‘李军’ 同性别的所有同学的 s_name</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_name <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_gender<span class="operator">=</span>(<span class="keyword">SELECT</span> s_gender <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_name<span class="operator">=</span><span class="string">&#x27;李军&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> s_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> 曾华   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 匡明   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李军   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 陆军   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王尼玛 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张全蛋 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵铁柱 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="number">7</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="41-查询和-‘李军’-同性别并且同班的所有同学的-s-name"><a href="#41-查询和-‘李军’-同性别并且同班的所有同学的-s-name" class="headerlink" title="41. 查询和 ‘李军’ 同性别并且同班的所有同学的 s_name"></a>41. 查询和 ‘李军’ 同性别并且同班的所有同学的 s_name</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_name <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_gender<span class="operator">=</span>(<span class="keyword">SELECT</span> s_gender <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_name<span class="operator">=</span><span class="string">&#x27;李军&#x27;</span>) <span class="keyword">AND</span> class<span class="operator">=</span>(<span class="keyword">SELECT</span> class <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_name<span class="operator">=</span><span class="string">&#x27;李军&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> s_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> 曾华   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李军   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王尼玛 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="42-查询所有选修-‘计算机导论’-课程的-‘男’-同学的成绩表"><a href="#42-查询所有选修-‘计算机导论’-课程的-‘男’-同学的成绩表" class="headerlink" title="42. 查询所有选修 ‘计算机导论’ 课程的 ‘男’ 同学的成绩表"></a>42. 查询所有选修 ‘计算机导论’ 课程的 ‘男’ 同学的成绩表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span>  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_no<span class="operator">=</span>(<span class="keyword">SELECT</span> c_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> c_name<span class="operator">=</span><span class="string">&#x27;计算机导论&#x27;</span> ) <span class="keyword">AND</span> s_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> s_no <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_gender<span class="operator">=</span><span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span>    <span class="number">76</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="43-新建一张-rank-表，查询所有学生的-s-no、c-no和-level-列"><a href="#43-新建一张-rank-表，查询所有学生的-s-no、c-no和-level-列" class="headerlink" title="43. 新建一张 rank 表，查询所有学生的 s_no、c_no和 level 列"></a>43. 新建一张 rank 表，查询所有学生的 s_no、c_no和 level 列</h4><blockquote><p>新建一个 rank 表代表学生的成绩等级，并插入数据：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="built_in">rank</span> (</span><br><span class="line">    low <span class="type">INT</span>(<span class="number">3</span>),</span><br><span class="line">    upp <span class="type">INT</span>(<span class="number">3</span>),</span><br><span class="line">    level <span class="type">char</span>(<span class="number">1</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> rank <span class="keyword">VALUES</span> (<span class="number">90</span>, <span class="number">100</span>, <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> rank <span class="keyword">VALUES</span> (<span class="number">80</span>, <span class="number">89</span>, <span class="string">&#x27;B&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> rank <span class="keyword">VALUES</span> (<span class="number">70</span>, <span class="number">79</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> rank <span class="keyword">VALUES</span> (<span class="number">60</span>, <span class="number">69</span>, <span class="string">&#x27;D&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> rank <span class="keyword">VALUES</span> (<span class="number">0</span>, <span class="number">59</span>, <span class="string">&#x27;E&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>查询所有学生的 s_no、c_no和 level 列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> s_no, c_no, level <span class="keyword">FROM</span> score, rank <span class="keyword">WHERE</span> grade <span class="keyword">BETWEEN</span> low <span class="keyword">AND</span> upp;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> s_no <span class="operator">|</span> c_no  <span class="operator">|</span> level <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span> A     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span> B     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span> B     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span> B     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span> C     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span> C     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-105</span> <span class="operator">|</span> C     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">3</span><span class="number">-245</span> <span class="operator">|</span> D     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">109</span>  <span class="operator">|</span> <span class="number">6</span><span class="number">-166</span> <span class="operator">|</span> B     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+-------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="进阶查询练习-连接查询"><a href="#进阶查询练习-连接查询" class="headerlink" title="进阶查询练习 - 连接查询"></a>进阶查询练习 - 连接查询</h2><p>SQL 共有四种连接查询</p><ol><li>内连接 <code>inner join</code> 或 <code>join</code></li><li>外连接<ol><li>左连接 <code>left join</code>  或者 <code>left outer join</code></li><li>右连接 <code>right join</code> 或者 <code>right outer join</code></li><li>完全外连接 <code>full join</code> 或者 <code>full outer join</code></li></ol></li></ol><h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><blockquote><p>创建数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE join_select_test;</span><br></pre></td></tr></table></figure><blockquote><p>切换数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE join_select_test;</span><br></pre></td></tr></table></figure><blockquote><p>创建 <code>person</code> 表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> person (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    cardId <span class="type">INT</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>创建 <code>card</code> 表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> card (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="添加数据-1"><a href="#添加数据-1" class="headerlink" title="添加数据"></a>添加数据</h3><blockquote><p>添加 <code>person</code> 表数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> person <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="number">3</span>), (<span class="number">3</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="number">6</span>);</span><br></pre></td></tr></table></figure><blockquote><p>添加 <code>card</code> 表数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> card <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;饭卡&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;建行卡&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;农行卡&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;工商卡&#x27;</span>), (<span class="number">5</span>, <span class="string">&#x27;邮政卡&#x27;</span>);</span><br></pre></td></tr></table></figure><p>分析两张表发现，<code>person</code> 表并没有为 <code>cardId</code> 字段设置一个在 <code>card</code> 表中对应的 <code>id</code> 外键。如果设置了的话，<code>person</code> 中 <code>cardId</code> 字段值为 <code>6</code> 的记录就插不进去，因为该 <code>cardId</code> 值在 <code>card</code> 表中并对应的存在。</p><h3 id="1-内连接"><a href="#1-内连接" class="headerlink" title="1. 内连接"></a>1. 内连接</h3><blockquote><p>要查询这两张表中<strong>有关系</strong>的数据，可以使用 <code>JOIN</code> 或者 <code>INNER JOIN</code> ( 内连接 ) 将它们连接在一起。内连接查询条件需要使用 <code>ON</code> 关键字</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person <span class="keyword">INNER</span> <span class="keyword">JOIN</span> card <span class="keyword">on</span> person.cardId <span class="operator">=</span> card.id;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> name <span class="operator">|</span> cardId <span class="operator">|</span> id   <span class="operator">|</span> name   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 张三 <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 饭卡   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> 李四 <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> 农行卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person <span class="keyword">JOIN</span> card <span class="keyword">on</span> person.cardId <span class="operator">=</span> card.id;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><p>可见内连接就是把两张表中有关联的数据连接在了一起，同样的效果也可以使用 <code>WHERE</code> 条件查询实现。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person, card <span class="keyword">WHERE</span> person.cardId<span class="operator">=</span>card.id;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> name <span class="operator">|</span> cardId <span class="operator">|</span> id   <span class="operator">|</span> name   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 张三 <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 饭卡   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> 李四 <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> 农行卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="2-左外连接"><a href="#2-左外连接" class="headerlink" title="2. 左外连接"></a>2. 左外连接</h3><blockquote><p>表 <code>A</code> 左外连接表 <code>B</code>，那么表 <code>A</code> 中的列都会完整显示，而表 <code>B</code> 中对应的缺失部分会用 <code>NULL</code> 代替，可以使用 <code>LEFT JOIN</code> 或者 <code>LEFT OUTER JOIN</code> ( 左外连接 ) 将它们连接在一起</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> card <span class="keyword">on</span> person.cardId <span class="operator">=</span> card.id;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> name <span class="operator">|</span> cardId <span class="operator">|</span> id   <span class="operator">|</span> name   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 张三 <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 饭卡   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> 李四 <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> 农行卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> 王五 <span class="operator">|</span>      <span class="number">6</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> card <span class="keyword">on</span> person.cardId <span class="operator">=</span> card.id;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><p>左连接可以理解为，保证了左边表的完整性，而右边表为了配合左边表会将缺失值用 <code>NULL</code> 代替。</p><h3 id="3-右外连接"><a href="#3-右外连接" class="headerlink" title="3. 右外连接"></a>3. 右外连接</h3><blockquote><p>表 <code>A</code> 右外连接表 <code>B</code>，那么表 <code>B</code> 中的列都会完整显示，而表 <code>A</code> 中对应的缺失部分会用 <code>NULL</code> 代替，可以使用 <code>RIGHT JOIN</code> 或者 <code>RIGHT OUTER JOIN</code> ( 右外连接 ) 将它们连接在一起</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> card <span class="keyword">on</span> person.cardId <span class="operator">=</span> card.id;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> name <span class="operator">|</span> cardId <span class="operator">|</span> id   <span class="operator">|</span> name   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 张三 <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 饭卡   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> 李四 <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> 农行卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> 建行卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span> 工商卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">5</span> <span class="operator">|</span> 邮政卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> card <span class="keyword">on</span> person.cardId <span class="operator">=</span> card.id;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 结果同上</span></span><br></pre></td></tr></table></figure><p>与左外连接正好相反的理解，右外连接保证了右边表的完整性，而左边表为了配合右边表会将缺失值用 <code>NULL</code> 代替。</p><h3 id="4-全外连接"><a href="#4-全外连接" class="headerlink" title="4. 全外连接"></a>4. 全外连接</h3><p><strong>注意</strong> MySQL 不支持全外连接关键字（<code>FULL JOIN</code> 或者 <code>FULL OUTER JOIN</code>），但是可以使用 UNION 来实现全外连接的效果</p><blockquote><p>全外连接，就是保证两张表的数据完整性，而两张表对应部分的缺失值就会用 <code>NULL</code> 代替</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="comment">-- 使用 UNION 把左外连接的结果和右外连接的结果联合，就可以得到全外连接的查询结果</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> card <span class="keyword">on</span> person.cardId <span class="operator">=</span> card.id</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">UNION</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> card <span class="keyword">on</span> person.cardId <span class="operator">=</span> card.id;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> name <span class="operator">|</span> cardId <span class="operator">|</span> id   <span class="operator">|</span> name   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 张三 <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> 饭卡   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> 李四 <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> 农行卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> 王五 <span class="operator">|</span>      <span class="number">6</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> 建行卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span> 工商卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">5</span> <span class="operator">|</span> 邮政卡 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+--------+------+--------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>为了便于理解，下面用文氏图来表示两张表四种连接查询的关系</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1585669030375&di=a88d558f35b688f08ddbf81395fcd92c&imgtype=0&src=http://img2.imgtn.bdimg.com/it/u=1067182167,1790622130&fm=214&gp=0.jpg"></p><p>根据文氏图的表达结果，还可以有另外几种情况，下面将所有情况统一列举</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1585669098202&di=48cf41dc0b3d16f3b69c50669262fa5c&imgtype=0&src=http://cw.hubwiz.com/card/c/577113f4da97b6e9299d31d5/1/5/2/img/join.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;重新学习 MySQL 的基础知识，查询是数据库中常用的操作，本章主要是通过练习来实践查询操作。&lt;/p&gt;</summary>
    
    
    
    <category term="MySQL" scheme="http://innofang.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="http://innofang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>重学MySQL之事务</title>
    <link href="http://innofang.github.io/2020/03/29/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E4%BA%8B%E5%8A%A1/"/>
    <id>http://innofang.github.io/2020/03/29/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E4%BA%8B%E5%8A%A1/</id>
    <published>2020-03-29T14:17:07.000Z</published>
    <updated>2020-05-17T07:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>重新学习 MySQL 的基础知识，本章内容为事务的介绍</p><span id="more"></span><h2 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h2><p><strong>数据库事务(Database Transaction)</strong> ，事务是一系列作为一个逻辑单元来执行的操作集合。</p><p><strong>事务具有四大特征（ACID）：</strong></p><ul><li><strong>原子性（Atomicity）</strong>：事务是最小的工作单位，不可以再分割，事务中的操作要么全部执行，要么全都不执行，不能只完成部分操作。原子性在数据库系统中，由恢复机制来实现。</li><li><strong>一致性（Consistency）</strong>：同一事务中的 SQL 语句，必须保证同时成功或这失败，事务开始前和结束后的状态应该保持一致性。数据库一致性的定义是由用户负责的。</li><li><strong>隔离性（Isolation）</strong>：系统必须保证事务不受其他并发执行事务的影响，即当多个事务同时运行时，各事务之间相互隔离，不可互相干扰。事务查看数据时所处的状态，要么是另一个并发事务修改它之前的状态，要么是另一个并发事务修改它之后的状态，事务不会查看中间状态的数据。隔离性通过系统的并发控制机制实现。</li><li>*<em>持久性（Durability）</em>：事务一旦结束 ( <code>COMMIT</code> ) ，就不可以再返回了 ( <code>ROLLBACK</code> ) 。</li></ul><p>事务的 ACID 原则保证了一个事务或者成功提交，或者失败回滚，二者必居其一。</p><h2 id="为什么要使用事务"><a href="#为什么要使用事务" class="headerlink" title="为什么要使用事务"></a>为什么要使用事务</h2><p>举例来说，银行转账的时候，用户 A 向用户 B 转账了 100 元，此时在数据库中，用户 A 的金额应当 <code>-100</code>，而用户 B 的金额应当 <code>+100</code>。倘若只有一条 SQL 语句执行成功，而另一条执行失败，那么就会出现数据前后不一致的情况。</p><p>因此在执行多条有关联的 SQL 语句时，事务要求这些 SQL 语句要么同时执行成功，要么都失败。</p><h2 id="事务的流程"><a href="#事务的流程" class="headerlink" title="事务的流程"></a>事务的流程</h2><p>在 MySQL 中，要使用事务，首先就需要先<strong>开启事务</strong>，然后执行 SQL 语句，所有 SQL 语句都执行完确认无误后就可以<strong>提交</strong>；如果<strong>在提交之前</strong>及时发现了错误，可以使用<strong>回滚</strong>来撤销刚才执行的 SQL 语句，使其回到最后一次提交数据时的状态。</p><p>注意，一旦 SQL 执行结果提交成功，回滚操作就无法撤销刚才的操作。因此，<strong>提交（COMMIT）</strong>与<strong>回滚（ROLLBACK）</strong>应当是一对并列操作而非递进操作。</p><p>在 MySQL 中，事务是默认自动提交的。所以，为了保证一致性，以便在 SQL 语句执行错误后及时回滚，我们可以选择手动关闭自动提交</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询事务的自动提交状态</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> @<span class="variable">@AUTOCOMMIT</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@AUTOCOMMIT</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span>            <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 关闭自动提交</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> AUTOCOMMIT <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询自动提交状态</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> @<span class="variable">@AUTOCOMMIT</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@AUTOCOMMIT</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span>            <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>此后，倘若我们需要提交数据，就需要手动提交，即在 <code>@@AUTOCOMMIT = 0</code> 时，使用 <code>COMMIT</code> 命令提交事务。</p><p>如果需要回滚，则在 <code>@@AUTOCOMMIT = 0</code> 时，使用 <code>ROLLBACK</code> 命令回滚事务。</p><p>但是，关闭自动提交后，就会使得数据库的操作更加繁琐，因为每次执行语句后都需要手动输入 <code>COMMIT</code>。</p><p>因此，我们可以选择使用手动开启事务的方式</p><h2 id="开启事务"><a href="#开启事务" class="headerlink" title="开启事务"></a>开启事务</h2><p>在 MySQL 中，可以使用 <code>BEGIN</code> 或者 <code>START TRANSACTION</code> 来手动开启事务</p><p>以上面银行转账为例，创建一张 user 表，并插入两条记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> money <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.33</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span>(name, money) <span class="keyword">VALUES</span>(<span class="string">&#x27;Mike&#x27;</span>, <span class="number">1000</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.36</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span>(name, money) <span class="keyword">VALUES</span>(<span class="string">&#x27;Amy&#x27;</span>, <span class="number">2000</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.08</span> sec)</span><br></pre></td></tr></table></figure><p>开启事务，完成 Mike 向 Amy 转账 100 元的操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">BEGIN</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="number">-100</span> <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;Mike&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.31</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="operator">+</span><span class="number">100</span> <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;Amy&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>   <span class="number">900</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">2100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>虽然我们还没有提交修改，但会发现数据表中的数据已经更改了，但是不要慌，此时发生变化的数据只是暂存在一张临时表中，要完成最终数据的修改，仍然需要手动提交。</p><h2 id="提交事务"><a href="#提交事务" class="headerlink" title="提交事务"></a>提交事务</h2><p>提交事务，意味着将事务开始以来所执行的所有数据修改成为数据库的永久部分，因此也标志着一个事务的结束。一旦执行了该命令，将不能回滚事务。只有在所有修改都准备好提交给数据库时，才执行这一操作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">COMMIT</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.09</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>   <span class="number">900</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">2100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>此时，对数据的修改才正式生效。</p><h2 id="撤销事务"><a href="#撤销事务" class="headerlink" title="撤销事务"></a>撤销事务</h2><p>正如前面所说，如果修改已经提交，那么回滚是无效的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ROLLBACK</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>   <span class="number">900</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">2100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>开启事务，尝试执行 Amy 向 Mike 转账 200 元的操作，并在最后进行回滚</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">BEGIN</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="number">-200</span> <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;Amy&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.05</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="operator">+</span><span class="number">200</span> <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;Mike&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>  <span class="number">1100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">1900</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ROLLBACK</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.07</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>   <span class="number">900</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">2100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>回滚成功。</p><p>不过有时候，我们并不需要回退所有操作，可以让事务回滚到指定位置，此时，需要在事务中设定保存点（SAVEPOINT）。</p><p>保存点的创建通过 <code>SAVEPOINT &lt;保存点名称&gt;</code> 语句来实现，再执行 <code>ROLLBACK TO &lt;保存点名称&gt;</code> 语句回滚到该保存点。</p><p>开启事务，完成以下操作：</p><ol><li>Mike 向 Amy 转账 200 元</li><li>Amy 向 Mike 转账 100 元</li><li>回滚到第二步，并将最终修改提交</li></ol><p>最终的结果是，Mike 仅仅只向 Amy 转账了 200 元。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">BEGIN</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="number">-200</span> <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;Mike&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.32</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="operator">+</span><span class="number">200</span> <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;Amy&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>   <span class="number">700</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">2300</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SAVEPOINT</span> mike2amy;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="number">-100</span> <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;Amy&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> UPDATE <span class="keyword">user</span> <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="operator">+</span><span class="number">100</span> <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;Mike&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>   <span class="number">800</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">2200</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> mike2amy;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>   <span class="number">700</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">2300</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">COMMIT</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.08</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> money <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span>   <span class="number">700</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Amy  <span class="operator">|</span>  <span class="number">2300</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="事务的隔离性"><a href="#事务的隔离性" class="headerlink" title="事务的隔离性"></a>事务的隔离性</h2><p>之前的例子中提到了原子性、一致性和持久性，但未提到隔离性，因此这里单独讲解</p><p>事务的隔离性分为四种（性能从高到低，隔离级别从低到高）：</p><h4 id="1-READ-UNCOMMITTED-读取未提交"><a href="#1-READ-UNCOMMITTED-读取未提交" class="headerlink" title="1. READ UNCOMMITTED ( 读取未提交 )"></a>1. READ UNCOMMITTED ( 读取未提交 )</h4><p>如果有多个事务，那么任意事务都可以看见其他事务的未提交数据。</p><p>设置系统隔离级别，LEVEL 后面表示要设置的隔离级别。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="keyword">GLOBAL</span> TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> @<span class="variable">@GLOBAL</span>.TX_ISOLATION;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@GLOBAL</span>.TX_ISOLATION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> READ<span class="operator">-</span>UNCOMMITTED      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>在查询隔离级别时，<code>SELECT @@GLOBAL.TX_ISOLATION;</code> 表示系统的隔离级别，而不加 GLOBAL 的语句 <code>SELECT @@TX_ISOLATION;</code> 则表示会话的隔离级别，设置隔离级别的时候也可以选择是否是 GLOBAL 的。</p><p>注意，以上是查询隔离级别的语法是 MySQL 5.x 的，如果是 MySQL 8.x 则需要略加修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@GLOBAL.TRANSACTION_ISOLATION;</span><br><span class="line">SELECT @@TRANSACTION_ISOLATION;</span><br></pre></td></tr></table></figure><p>该级别的性能是最优的，但是隔离性是最差的。当一个事务可以读取另一个事务未提交的数据时，就会出现<strong>脏读（Dirty Read）</strong> 的情况，这在实际开发中是不允许出现的。</p><h4 id="2-READ-COMMITTED-读取已提交"><a href="#2-READ-COMMITTED-读取已提交" class="headerlink" title="2. READ COMMITTED ( 读取已提交 )"></a>2. READ COMMITTED ( 读取已提交 )</h4><p>只能读取到其他事务已经提交的数据。</p><p>需要注意的是，在有新的事务连接进来时，它们可以查询到已经提交过的事务数据。但是<strong>对于当前事务来说，它们看到的还是未提交之前的数据</strong>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="keyword">GLOBAL</span> TRANSACTION ISOLATION LEVEL READ COMMITTED;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> @<span class="variable">@GLOBAL</span>.TX_ISOLATION;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@GLOBAL</span>.TX_ISOLATION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> READ<span class="operator">-</span>COMMITTED        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>虽然 READ COMMITTED 让我们只能读取到其他事务已经提交的数据，但还是会出现问题，就是在读取同一个表的数据时，可能会发生前后不一致的情况。这被称为不可重复读现象 ( READ COMMITTED ) 。</p><h4 id="3-REPEATABLE-READ-可被重复读"><a href="#3-REPEATABLE-READ-可被重复读" class="headerlink" title="3. REPEATABLE READ ( 可被重复读 )"></a>3. REPEATABLE READ ( 可被重复读 )</h4><p><strong>MySQL 默认事务隔离级别</strong></p><p>如果有多个连接都开启了事务，那么事务之间只能共享之前<strong>已提交</strong>的记录，比如事务 A 在读到一条数据之后，此时事务 B 对该数据进行了修改并提交，那么事务 A 再读该数据，读到的还是原来的内容。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="keyword">GLOBAL</span> TRANSACTION ISOLATION LEVEL REPEATABLE READ;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> @<span class="variable">@GLOBAL</span>.TX_ISOLATION;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@GLOBAL</span>.TX_ISOLATION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> REPEATABLE<span class="operator">-</span>READ       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>不过，可重复读会导致 <strong>幻读（Phantom Read）</strong> 问题，它指的是事务 A 在读取某一范围的数据时，另一个事务在该范围内修改了新的数据，当事务 A 再读取该范围的数据时，会发现出现了新的数据，这导致了数据前后的不一致。而解决幻读的方式就是使用更高级别的隔离——串行化（SERIALIZABLE）。</p><h4 id="4-SERIALIZABLE-串行化"><a href="#4-SERIALIZABLE-串行化" class="headerlink" title="4. SERIALIZABLE ( 串行化 )"></a>4. SERIALIZABLE ( 串行化 )</h4><p>假设把所有的事务都放在一个串行的队列中，那么所有的事务都会按照固定顺序执行，执行完一个事务后再继续执行下一个事务的写入操作 ( <strong>这意味着队列中同时只能执行一个事务的写入操作</strong> ) 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="keyword">GLOBAL</span> TRANSACTION ISOLATION LEVEL SERIALIZABLE;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> @<span class="variable">@GLOBAL</span>.TX_ISOLATION;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@GLOBAL</span>.TX_ISOLATION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> SERIALIZABLE          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>如果事务 A 开启后执行了 SQL 语句但未提交，此时事务 B 开启后也打算执行 SQL 语句，因为隔离级别设置为串行化，所以<strong>在事务 A 未手动提交之前，事务 B 的操作都将进入阻塞状态，或者出现等待超时</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;重新学习 MySQL 的基础知识，本章内容为事务的介绍&lt;/p&gt;</summary>
    
    
    
    <category term="MySQL" scheme="http://innofang.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="http://innofang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>重学MySQL之范式</title>
    <link href="http://innofang.github.io/2020/03/28/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E8%8C%83%E5%BC%8F/"/>
    <id>http://innofang.github.io/2020/03/28/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E8%8C%83%E5%BC%8F/</id>
    <published>2020-03-28T06:34:43.000Z</published>
    <updated>2020-03-28T08:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>重新学习 MySQL 的基础知识，本章内容为数据库的第一范式，第二范式和第三方式的讲解</p><span id="more"></span><h2 id="数据库设计的范式"><a href="#数据库设计的范式" class="headerlink" title="数据库设计的范式"></a>数据库设计的范式</h2><p>简要的地说，范式就是设计数据库时，需要遵循的一些规范。通过遵从不同的规范要求，设计出合理的关系型数据库。各种范式呈递次规范，越高的范式数据库冗余越小，要遵循后面的范式，必须先遵循前边的所有范式。</p><p>目前数据库共有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BNF）、第四范式（4NF）、第五范式（5NF，又称完美范式）。</p><p>在实际数据库设计过程中，符合前三个范式就可以解决大部分的问题，因此本章着重讲解前三个范式。</p><h2 id="例子分析"><a href="#例子分析" class="headerlink" title="例子分析"></a>例子分析</h2><p>在讲解各个范式的概念之前，我决定先引出需要讲解的例子，通过问题来引出范式的概念</p><table><thead><tr><th>学号</th><th>姓名</th><th>系主任</th><th>课程名称</th><th>分数</th></tr></thead><tbody><tr><td>10010</td><td>张三</td><td>计算机系陈续缘</td><td>数据结构</td><td>90</td></tr><tr><td>10010</td><td>张三</td><td>计算机系陈续缘</td><td>数据库</td><td>85</td></tr><tr><td>10010</td><td>张三</td><td>计算机系陈续缘</td><td>编译原理</td><td>77</td></tr><tr><td>10020</td><td>李四</td><td>经管系刘快计</td><td>大学英语</td><td>86</td></tr><tr><td>10020</td><td>李四</td><td>经管系刘快计</td><td>高等数学</td><td>80</td></tr><tr><td>10020</td><td>李四</td><td>经管系刘快计</td><td>工商管理</td><td>82</td></tr><tr><td>10030</td><td>王五</td><td>自动化系赵是福</td><td>大学物理</td><td>72</td></tr><tr><td>10030</td><td>王五</td><td>自动化系赵是福</td><td>电路</td><td>75</td></tr><tr><td>10030</td><td>王五</td><td>自动化系赵是福</td><td>单片机技术</td><td>79</td></tr></tbody></table><h3 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h3><p>上表为学生的选课表。观察表的结构，可以发现学号，姓名、课程名称和分数，在字面意义上都是无法继续被分割的数据项，倘如我们观察 <code>系主任</code> 这一列，就会发现系名和主任名称是连在一起的，很明显可以对该列进行简化，比如新增一个 <code>系名</code> 列</p><table><thead><tr><th>学号</th><th>姓名</th><th>系名</th><th>系主任</th><th>课程名称</th><th>分数</th></tr></thead><tbody><tr><td>10010</td><td>张三</td><td>计算机系</td><td>陈续缘</td><td>数据结构</td><td>90</td></tr><tr><td>10010</td><td>张三</td><td>计算机系</td><td>陈续缘</td><td>数据库</td><td>85</td></tr><tr><td>10010</td><td>张三</td><td>计算机系</td><td>陈续缘</td><td>编译原理</td><td>77</td></tr><tr><td>10020</td><td>李四</td><td>经管系</td><td>刘快计</td><td>大学英语</td><td>86</td></tr><tr><td>10020</td><td>李四</td><td>经管系</td><td>刘快计</td><td>高等数学</td><td>80</td></tr><tr><td>10020</td><td>李四</td><td>经管系</td><td>刘快计</td><td>工商管理</td><td>82</td></tr><tr><td>10030</td><td>王五</td><td>自动化系</td><td>赵是福</td><td>大学物理</td><td>72</td></tr><tr><td>10030</td><td>王五</td><td>自动化系</td><td>赵是福</td><td>电路</td><td>75</td></tr><tr><td>10030</td><td>王五</td><td>自动化系</td><td>赵是福</td><td>单片机技术</td><td>79</td></tr></tbody></table><p>此时，该表的<strong>每一列都成了不可分割的原子数据项</strong>，对于这类数据表，称之为符合<strong>第一范式（1NF）</strong>。</p><p>这也是绝大部分数据表都符合的基本范式。那么再次观察这张数据表存在哪些问题？</p><ol><li>存在非常严重的数据冗余（重复）：<code>姓名</code>、<code>系名</code>、<code>系主任</code></li><li>数据添加存在问题：添加新开设的系和系主任时，数据不合法（因为新增一条数据还需要 <code>学号</code>、<code>姓名</code>、<code>课程</code> 和 <code>分数</code>）</li><li>数据删除存在问题：张三毕业时，删除数据会把 <code>系名</code> 和 <code>系主任</code> 的数据一起删除</li></ol><h3 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h3><p>在介绍第二范式之前，通过观察符合第一范式的数据表来弄清楚几个概念：</p><ul><li>函数依赖：可以发现通过 <code>学号</code>，可以确定 <code>姓名</code>。因此说 <code>姓名</code> 依赖于  <code>学号</code>，记为 <code>学号 --&gt; 姓名</code><blockquote><p><strong>概念</strong> 如果通过 A 属性（属性组）的值，能够唯一确定 B 属性的值，则称 B 依赖于 A</p></blockquote></li><li>完全函数依赖：通过 <code>学号</code> 和 <code>课程名称</code> 可以唯一确定该学生的 <code>分数</code>。因此说 <code>分数</code> 完全函数依赖于属性组 <code>学号</code> 和 <code>课程名称</code>，记为 <code>(学号, 课程名称) --&gt; 分数</code><blockquote><p><strong>概念</strong> 如果属性值 B 的确定需要依赖于属性组 A 的所有值，则称 B 完全依赖于属性组 A</p></blockquote></li><li>部分函数依赖：因为 <code>学号</code> 可以唯一确定 <code>姓名</code>，那么属性组 <code>学号</code> 和 <code>课程名称</code> 也可以确定 <code>姓名</code>，但是 <code>课程名称</code> 不能确定 <code>姓名</code>，因此说 <code>姓名</code> 部分函数依赖于属性组 <code>学号</code> 和 <code>课程名称</code>，记为 <code>(学号, 课程名称) --&gt; 姓名</code><blockquote><p><strong>概念</strong> 如果属性值 B 的确定需要依赖于属性组 A 的部分值，则称 B 部分依赖于属性组 A</p></blockquote></li><li>传递函数依赖: <code>学号</code> 可以确定 <code>系名</code> ， <code>系名</code> 可以确定 <code>系主任</code> ， 因此通过传递关系 <code>学号</code> 可以确定 <code>系主任</code>, 因此称 <code>系主任</code> 传递函数依赖与 <code>学号</code> ，记为 <code>学号 --&gt; 系名, 系名 --&gt; 系主任</code><blockquote><p><strong>概念</strong> 如果通过 A 属性（属性组）可以唯一确定 B 属性（属性组），再通过 B 属性（属性组）可以唯一确定 C 属性（属性组），则称 C 传递函数依赖于 A</p></blockquote></li><li>（候选）码：类似于数据表的主键，<em>数据表中的其他所有属性都完全依赖于（候选）码</em>，或者说完全依赖于主键。观察符合第一范式的数据表，可以发现上表的（候选）码为 <code>(学号，课程名称)</code><ul><li>主属性：（候选）码属性组中的所有属性</li><li>非主属性：除（候选）码属性组以外的属性</li></ul></li></ul><p>我们要设计数据表符合<strong>第二范式</strong>，就需要<strong>在符合第一范式的基础上，消除非主属性对（候选）码的部分函数依赖</strong>。</p><p>在上表中， <code>分数</code> 完全函数依赖于  <code>(学号，课程名称)</code> ，<code>姓名</code> 、 <code>系名</code> 和 <code>系主任</code> <strong>部分依赖于</strong> <code>(学号，课程名称)</code> ，因此我们需要将 <code>姓名</code> 、 <code>系名</code> 和 <code>系主任</code> 三列从原表中提出，以次来消除选课表中非主属性对（候选）码的部分函数依赖，并另建一个学生表来存放这些数据，修改如下</p><blockquote><p>选课表</p></blockquote><p>学号 | 姓名   | 课程名称 | 分数<br>—- | —   | – | — | —<br>10010 | 张三 | 数据结构 | 90<br>10010 | 张三 | 数据库 | 85<br>10010 | 张三 | 编译原理 | 77<br>10020 | 李四  | 大学英语 | 86<br>10020 | 李四  | 高等数学 | 80<br>10020 | 李四  | 工商管理 | 82<br>10030 | 王五 | 大学物理 | 72<br>10030 | 王五 | 电路      | 75<br>10030 | 王五 | 单片机技术 | 79</p><blockquote><p>学生表</p></blockquote><table><thead><tr><th>学号</th><th>姓名</th><th>系名</th><th>系主任</th></tr></thead><tbody><tr><td>10010</td><td>张三</td><td>计算机系</td><td>陈续缘</td></tr><tr><td>10020</td><td>李四</td><td>经管系</td><td>刘快计</td></tr><tr><td>10030</td><td>王五</td><td>自动化系</td><td>赵是福</td></tr></tbody></table><p>此时第二张表的（候选）码就为 <code>学号</code>，其他属性都完全依赖于 <code>学号</code>，因此现在这两张表的设计都符合第二范式，此外我们还解决了之前遇到的第一个问题，解决了数据冗余的问题。但是后两个问题任然存在，如果要添加新的 <code>系名</code> 和 <code>系主任</code> ，任然无法添加到学生表中，此外当张三毕业后，对应的 <code>系名</code> 和 <code>系主任</code> 的数据就会被删除。</p><h3 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h3><p>要<strong>符合第三范式</strong>，就需要<strong>在符合第二范式的基础之上消除传递依赖</strong></p><p>观察上面新建的学生表，可以发现，其实 <code>系主任</code> 依赖于 <code>系名</code> ， 而 <code>系名</code> 又依赖于 <code>学号</code> ，因此学生表中存在 <code>系主任</code> 对 <code>学号</code> 的传递函数依赖</p><p>因此我们需要将 <code>系名</code> 和 <code>系主任</code> 从原表中提出，以此来消除学生表中的传递函数依赖，并新建一个系表来存储数据</p><blockquote><p>学生表</p></blockquote><table><thead><tr><th>学号</th><th>姓名</th><th>系名</th></tr></thead><tbody><tr><td>10010</td><td>张三</td><td>计算机系</td></tr><tr><td>10020</td><td>李四</td><td>经管系</td></tr><tr><td>10030</td><td>王五</td><td>自动化系</td></tr></tbody></table><blockquote><p>系表</p></blockquote><table><thead><tr><th>系名</th><th>系主任</th></tr></thead><tbody><tr><td>计算机系</td><td>陈续缘</td></tr><tr><td>经管系</td><td>刘快计</td></tr><tr><td>自动化系</td><td>赵是福</td></tr></tbody></table><p>此时，如果我们需要新添系名和系主任的数据，就不会出现错误了；当张三毕业后，系名和系主任的数据也不会消失，从而最后两个问题也得到了解决。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;重新学习 MySQL 的基础知识，本章内容为数据库的第一范式，第二范式和第三方式的讲解&lt;/p&gt;</summary>
    
    
    
    <category term="MySQL" scheme="http://innofang.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="http://innofang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>重学MySQL之基本操作和约束</title>
    <link href="http://innofang.github.io/2020/03/27/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%92%8C%E7%BA%A6%E6%9D%9F/"/>
    <id>http://innofang.github.io/2020/03/27/%E9%87%8D%E5%AD%A6MySQL%E4%B9%8B%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%92%8C%E7%BA%A6%E6%9D%9F/</id>
    <published>2020-03-27T10:36:01.000Z</published>
    <updated>2020-03-28T06:34:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>重新学习 MySQL 的基础知识，本章内容为数据库的基本操作和约束的介绍</p><span id="more"></span><h2 id="使用终端操作-MySQL-数据库"><a href="#使用终端操作-MySQL-数据库" class="headerlink" title="使用终端操作 MySQL 数据库"></a>使用终端操作 MySQL 数据库</h2><ol><li><strong>如何登录 MySQL？</strong><blockquote><p>mysql -u用户名 -p密码</p></blockquote></li><li><strong>如何查看所有数据库？</strong><blockquote><p>SHOW DATABASES;</p></blockquote></li><li><strong>如何选择数据库？</strong><blockquote><p>USE 数据库名;</p></blockquote></li><li><strong>如何查看数据库中所有数据表？</strong><blockquote><p>SHOW TABLES;</p></blockquote></li><li><strong>如何查看数据表结构？</strong><blockquote><p>DESCRIBE 数据表名; / DESC 数据表名;</p></blockquote></li><li><strong>如何查看数据表定义？</strong><blockquote><p>SHOW CREATE TABLE 数据表名;</p></blockquote></li><li><strong>如何查看数据表中所有数据？</strong><blockquote><p>SELECT * FROM 数据表名;</p></blockquote></li><li><strong>如何创建数据库？</strong><blockquote><p>CREATE DATABASE 数据库名;</p></blockquote></li><li><strong>如何退出 MySQL？</strong><blockquote><p>EXIT;</p></blockquote></li></ol><h2 id="数据的增改删"><a href="#数据的增改删" class="headerlink" title="数据的增改删"></a>数据的增改删</h2><ol><li><strong>如何创建数据表？</strong>(定义 person 表)<blockquote><p>CRAETE TABLE person(<br>  id INT PRIMARY KEY,<br>  name VARCHAR(20),<br>  gender CHAR(1),<br>  birthday DATE<br>);</p></blockquote></li><li><strong>如何往数据表中新添一条记录？</strong>（新增 Mike, id 为 1，性别男，生日2000-1-1）<blockquote><p>INSERT INTO person VALUES(1, ‘Mike’, ‘M’, ‘2000-1-1’);<br>INSERT INTO person(id, name, birthday, gender) VALUES(1, ‘Mike’, ‘M’, ‘2000-1-1’);</p></blockquote></li><li><strong>如何修改数据表中的记录？</strong>（将 id 为 1 的人姓名更改为 Amy，性别更改为 F）<blockquote><p>UPDATE 数据表 SET 字段1=值1,字段2=值2 … WHERE 条件;<br>UPDATE person SET name=’Amy’, gender=’F’ WHERE id=1;</p></blockquote></li><li><strong>如何修改列名？</strong>（将 birthday 修改为 birth）<blockquote><p>ALTER TABLE 数据表 CHANGE [COLUMN] 旧列名 新列名 列定义 [FIRST| AFTER 列名]<br>ALTER TABLE person CHANGE COLUMN birthday birth DATE</p></blockquote></li><li><strong>如何修改列的定义？</strong>（修改 id 为自增）<blockquote><p>ALTER TABLE 数据表 MODIFY [COLUMN] 列名 列定义 [FIRST| AFTER 列名]<br>ALTER TABLE person MODIFY COLUMN id INT PRIMARY KEY AUTO_INCREMENT</p></blockquote></li><li><strong>如何删除数据表中的一条记录？</strong>（删除 id 为 1 的记录）<blockquote><p>DELETE FROM 数据表 WHERE 条件;<br>DELETE FROM person WHERE id=1;</p></blockquote></li><li><strong>如何删除数据表？</strong>（删除 person 表）<blockquote><p>DROP TABLE person;</p></blockquote></li></ol><h2 id="建表约束"><a href="#建表约束" class="headerlink" title="建表约束"></a>建表约束</h2><h4 id="1-主键约束"><a href="#1-主键约束" class="headerlink" title="1. 主键约束"></a>1. 主键约束</h4><p><strong>作用</strong> 使得某个字段不重复且不得为空，确保表内所有数据的唯一性</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li><strong>建表后如何添加主键约束？</strong><blockquote><p>ALTER TABLE user ADD PRIMARY KEY(id);<br>ALTER TABLE user MODIFY id INT PRIMARY KEY;</p></blockquote></li><li><strong>如何删除主键约束？</strong><blockquote><p>ALTER TABLE user DROP PRIMARY KEY;</p></blockquote></li></ol><h4 id="2-联合主键"><a href="#2-联合主键" class="headerlink" title="2. 联合主键"></a>2. 联合主键</h4><p><strong>作用：</strong> 使用多个字段来确定一条记录，受约束字段可以分别重复但不能为空</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    password <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(id, name)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="3-自增约束"><a href="#3-自增约束" class="headerlink" title="3. 自增约束"></a>3. 自增约束</h4><p><strong>作用</strong> 受约束字段的值由系统自动递增分配</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE user (</span><br><span class="line">    id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    name VARCHAR(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="4-唯一约束"><a href="#4-唯一约束" class="headerlink" title="4. 唯一约束"></a>4. 唯一约束</h4><p><strong>作用</strong> 受约束字段的值不能重复</p><p><strong>注意</strong> 一张表可以有多个唯一约束，但只能有一个主键约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">UNIQUE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>如果要联合多个唯一约束，可以在末尾指定，联合唯一约束只需任意受约束字段不重复即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="keyword">UNIQUE</span>(id, name)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li><strong>建表后如何添加唯一约束？</strong><blockquote><p>ALTER TABLE user ADD UNIQUE(name);<br>ALTER TABLE user MODIFY name VARCHAR(20) UNIQUE;</p></blockquote></li><li><strong>如何删除唯一约束？</strong><blockquote><p>ALTER TABLE user DROP INDEX name;</p></blockquote></li></ol><h4 id="5-非空约束"><a href="#5-非空约束" class="headerlink" title="5. 非空约束"></a>5. 非空约束</h4><p><strong>作用</strong> 受约束字段的值不能为空（NULL）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li><strong>建表后如何添加非空约束？</strong> <blockquote><p>ALTER TABLE user MODIFY name VARCHAR(20) NOT NULL;</p></blockquote></li><li><strong>如何删除非空约束？</strong><blockquote><p>ALTER TABLE user MODIFY name VARCHAR(20);</p></blockquote></li></ol><h4 id="6-默认约束"><a href="#6-默认约束" class="headerlink" title="6. 默认约束"></a>6. 默认约束</h4><p><strong>作用</strong> 未对受约束字段传值时，会使用默认值代替</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;anonymous&#x27;</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li><strong>建表后如何添加默认约束？</strong> <blockquote><p>ALTER TABLE user ALTER COLUMN name SET DEFAULT ‘anonymous’;</p></blockquote></li><li><strong>如何删除默认约束？</strong><blockquote><p>ALTER TABLE user ALTER COLUMN name DROP DEFAULT;</p></blockquote></li></ol><h4 id="7-外键约束"><a href="#7-外键约束" class="headerlink" title="7. 外键约束"></a>7. 外键约束</h4><p><strong>作用</strong> 用来在两个表的数据之间建立链接，保持主表（父表）和从表（子表）数据的一致性、完整性</p><p><strong>注意</strong> </p><ol><li>主表（父表）需先于从表（子表）存在于数据库中</li><li>必须为父表定义主键</li><li>外键中列的数目必须和父表的主键中列的数目相同</li><li>外键中列的数据类型必须和父表主键中对应列的数据类型相同</li><li>主表（父表）没有的记录，从表（子表）是无法引用的</li><li>主表（父表）中的记录若正在被从表（子表）引用，则无法被删除；若想删除，需先将从表（子表）中引用了该记录的数据删除</li></ol><p>首先定义主表（父表）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> class (</span><br><span class="line">    id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>再定义从表（子表）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">    id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    class_id <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (class_id) <span class="keyword">REFERENCES</span> class(id) </span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在往从表（子表）中添加数据时，class_id 字段值必须是 class 表中已存在的值，否则会报错</p><ol><li><strong>建表后如何添加外键约束？</strong> <blockquote><p>ALTER TABLE &lt;数据表名&gt; ADD &lt;索引名&gt; FOREIGN KEY(&lt;列名&gt;) REFERENCES &lt;主表名&gt; (&lt;列名&gt;);<br>ALTER TABLE student ADD CONSTRAINT student_class FOREIGN KEY(class_id) REFERENCE class(id);</p></blockquote></li><li><strong>如何删除外键约束？</strong><blockquote><p>ALTER TABLE student DROP FOREIGN KEY student_class;</p></blockquote></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;重新学习 MySQL 的基础知识，本章内容为数据库的基本操作和约束的介绍&lt;/p&gt;</summary>
    
    
    
    <category term="MySQL" scheme="http://innofang.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="http://innofang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>为你的Web应用提供HTTPS服务</title>
    <link href="http://innofang.github.io/2020/03/03/%E4%B8%BA%E4%BD%A0%E7%9A%84Web%E5%BA%94%E7%94%A8%E6%8F%90%E4%BE%9BHTTPS%E6%9C%8D%E5%8A%A1/"/>
    <id>http://innofang.github.io/2020/03/03/%E4%B8%BA%E4%BD%A0%E7%9A%84Web%E5%BA%94%E7%94%A8%E6%8F%90%E4%BE%9BHTTPS%E6%9C%8D%E5%8A%A1/</id>
    <published>2020-03-03T13:08:51.000Z</published>
    <updated>2020-03-05T13:29:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>超文本传输协议 HTTP 作为一种无状态无连接的协议，在传输信息时采用的是明文的方式，因此传输过程中的信息存在着被窃听、被篡改和被劫持的风险。因此，当你的引用涉及诸如共享密码、银行卡等私密信息时，单纯的使用 HTTP 显然是无法高效地对信息进行有效的加密和保护的。此时，就需要对涉及隐私的网站启用 HTTPS 了，HTTPS 实际就是将 HTTP 通信放到了具有安全性的 SSL/TSL 上进行加密传输的协议。</p><span id="more"></span><h2 id="SSL、TLS-和-HTTPS"><a href="#SSL、TLS-和-HTTPS" class="headerlink" title="SSL、TLS 和 HTTPS"></a>SSL、TLS 和 HTTPS</h2><p>SSL（Secure Socket Layer，安全套接字层），是一种通过公钥基础设施（Public Key Infrastructure，PKI）为通信双方提供数据加密和身份验证的协议，其中通信双方通常是客户端和服务器。SSL 协议于 1994 年被 Netscape 公司发明，后来各个浏览器均逐渐开始支持 SSL 协议。之后由 IETF（Internet Engineering Task Force，互联网工程任务组）接受并在 SSL 3.0 协议规范的基础上，制定了 TLS （Transport Layer Security，安全传输层协议），TLS 与 SSL 之间的加密算法不同，因此两者存在着显著差异，但是在理解 HTTPS 的过程中，可以把 SSL 和 TLS 看成是同一种协议，也就是说 HTTPS 实际上就是在 SSL/TLS 连接的上层进行 HTTP 通信。</p><p>要为你的 Web 应用提供 HTTPS 服务，你需要使用 SSL/TLS 证书来实现数据加密以及身份验证。而为了保证证书的可靠性，证书一般由 CA（Certificate Authority，证书分发机构）签发。</p><p>HTTPS 为了兼顾效率和安全，当服务器接收到客户端发送的请求之后，会将证书和响应一并返回给客户端，而客户端在确认证书的真实性之后，就会生成一个随机密钥（random key），并使用证书中的公钥对随机密钥进行加密，此次加密产生的对称密钥（symmetric key）就是客户端和服务器进行通信时，负责对通信实施加密的实际密钥。那 SSL 证书举例，它是一种使用 X.509 格式进行格式化的数据，这些数据包含了公钥以及其他一些相关信息。</p><p>一个 X.509 证书（简称 SSL 证书）实际上就是一个经过编码的 ASN.1（Abstract Syntax Notation One，抽象语法表示法/1）格式的电子文档。ASN.1 既是一个标准，也是一种表示法，该标准包含了公钥证书的标准格式，同时描述了表示电信以及计算机网络数据的规则和结构。</p><p>X.509 有多种格式编码，其中一种是 BER（Basic Encoding Rulues，基本编码规则），指定了一种自解释并且自定义的格式用于对 ASN.1 数据结构进行编码，而 DER 格式则是 BER 的一个子集（后续代码会提到），DER 只提供了一种编码 ASN.1 值的方法。SSL 证书有多种不同的格式保存，其中一种是 PEM（Privacy Enhanced Email，隐私增强邮件）格式，该格式会对 DEM 格式的 X.509 证书实施 Base64编码，这种格式的文件都以 <code>-----BEGIN CERTIFICATE-----</code> 开头，以 <code>-----END CERTIFICATE-----</code> 结尾。</p><h2 id="提供-HTTPS-服务"><a href="#提供-HTTPS-服务" class="headerlink" title="提供 HTTPS 服务"></a>提供 HTTPS 服务</h2><p>假设你已经获取了 SSL/TLS 证书文件 <code>cert.pem</code>，以及服务器私钥文件 <code>key.pem</code>，那么我们在使用的时候，只需要用一行代码即可启动</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server := http.Server&#123;</span><br><span class="line">    Addr:           config.Address,</span><br><span class="line">    Handler:        mux,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 启动 HTTPS 服务</span></span><br><span class="line">server.ListenAndServeTLS(<span class="string">&quot;cert.pem&quot;</span>, <span class="string">&quot;key.pem&quot;</span>)</span><br></pre></td></tr></table></figure><p>假如我们是在测试环境中，我们想要测试一下证书和私钥，那么我们完全可以使用自己生成的证书。虽然自行生成的证书和私钥不会用在生产环境中，但是了解 SSL 证书和私钥的生成方法，并学会如何在开发和测试的过程中使用证书和私钥，也是一件非常有意义的事情。</p><h2 id="生成个人使用的-SSL-证书以及服务器私钥"><a href="#生成个人使用的-SSL-证书以及服务器私钥" class="headerlink" title="生成个人使用的 SSL 证书以及服务器私钥"></a>生成个人使用的 SSL 证书以及服务器私钥</h2><p>生成 SSL 证书和密钥的步骤并不是特别复杂。因为 SSL 证书实际上就是一个将扩展密钥用法（extended key usage）设置成了服务器身份验证操作的 X.509 证书，所以在下面的代码中会使用 <code>crypto/x509</code> 标准库。此外，因为创建证书需要用到私钥，所以程序在使用私钥成功创建证书之后，还需将私钥单独保存在一个存放服务器私钥的文件里面。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ssl</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;math/big&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rand&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/x509/pkix&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/x509&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rsa&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/pem&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Generate</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 指定一个大整数 2^128</span></span><br><span class="line">max := <span class="built_in">new</span>(big.Int).Lsh(big.NewInt(<span class="number">1</span>), <span class="number">128</span>)</span><br><span class="line"><span class="comment">// 生成范围为 [0, max) 的随机序列号，用于记录 CA 分发的唯一号码</span></span><br><span class="line">serialNumber, _ := rand.Int(rand.Reader, max)</span><br><span class="line"><span class="comment">// 定义一个具有特殊标识的 x.509 专有名称</span></span><br><span class="line">subject := pkix.Name&#123;</span><br><span class="line">Organization:       []<span class="keyword">string</span>&#123;<span class="string">&quot;Your Organization&quot;</span>&#125;,</span><br><span class="line">OrganizationalUnit: []<span class="keyword">string</span>&#123;<span class="string">&quot;Your Apartment&quot;</span>&#125;,</span><br><span class="line">CommonName:         <span class="string">&quot;Project Name&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 x.509 证书，设定有效期为 1 年，并将证书设置成只能在 IP 地址 127.0.0.1 至上运行</span></span><br><span class="line"><span class="comment">// KeyUsage 和 ExtKeyUsage 指明该证书用于进行服务器身份验证操作</span></span><br><span class="line">template := x509.Certificate&#123;</span><br><span class="line">SerialNumber: serialNumber,</span><br><span class="line">Subject:subject,</span><br><span class="line">NotBefore:time.Now(),</span><br><span class="line">NotAfter: time.Now().Add(<span class="number">365</span> * <span class="number">24</span> * time.Hour),</span><br><span class="line">KeyUsage:x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,</span><br><span class="line">ExtKeyUsage:[]x509.ExtKeyUsage&#123;x509.ExtKeyUsageServerAuth&#125;,</span><br><span class="line">IPAddresses:[]net.IP&#123;net.ParseIP(<span class="string">&quot;127.0.0.1&quot;</span>)&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成 rsa 私钥，其结构里还包含一个能够公开访问的公钥</span></span><br><span class="line">pk, _ := rsa.GenerateKey(rand.Reader, <span class="number">2048</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// CreateCertificate 函数需要接收 Certificate 函数、公钥和私钥等参数，</span></span><br><span class="line"><span class="comment">// 生成一个经过 DER 编码格式化的字节切片</span></span><br><span class="line">derBytes, _ := x509.CreateCertificate(rand.Reader, &amp;template, &amp;template, &amp;pk.PublicKey, pk)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将证书编码到 cert.pem 文件中</span></span><br><span class="line">certOut, _ := os.Create(<span class="string">&quot;cert.pem&quot;</span>)</span><br><span class="line">pem.Encode(certOut, &amp;pem.Block&#123;Type: <span class="string">&quot;CERTIFICATE&quot;</span>, Bytes: derBytes&#125;)</span><br><span class="line"><span class="keyword">defer</span> certOut.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将生成的密钥编码到 key.pem 中</span></span><br><span class="line">keyOut, _ := os.Create(<span class="string">&quot;key.pem&quot;</span>)</span><br><span class="line">pem.Encode(keyOut, &amp;pem.Block&#123;Type: <span class="string">&quot;RSA PRIVATE KEY&quot;</span>, Bytes: x509.MarshalPKCS1PrivateKey(pk)&#125;)</span><br><span class="line"><span class="keyword">defer</span> keyOut.Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>值得注意的是，若证书是由 CA 签发，那么证书文件中将同时包含服务器签名以及 CA 签名，其中服务器前面在前，CA 签名在后</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li>Sau Sheong Chang.Go Web 编程[M].人民邮电出版社:北京,2017:53-56.</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;超文本传输协议 HTTP 作为一种无状态无连接的协议，在传输信息时采用的是明文的方式，因此传输过程中的信息存在着被窃听、被篡改和被劫持的风险。因此，当你的引用涉及诸如共享密码、银行卡等私密信息时，单纯的使用 HTTP 显然是无法高效地对信息进行有效的加密和保护的。此时，就需要对涉及隐私的网站启用 HTTPS 了，HTTPS 实际就是将 HTTP 通信放到了具有安全性的 SSL/TSL 上进行加密传输的协议。&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="http://innofang.github.io/categories/Go/"/>
    
    
    <category term="Go" scheme="http://innofang.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>一个关于切片的小问题</title>
    <link href="http://innofang.github.io/2020/02/28/%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E5%88%87%E7%89%87%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://innofang.github.io/2020/02/28/%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E5%88%87%E7%89%87%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/</id>
    <published>2020-02-28T15:01:10.000Z</published>
    <updated>2020-03-02T14:36:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>偶然在网上瞧见了一道 Go 语言的面试题，本以为不难，但却没答对，所以藉此再来回顾下关于 Go 语言 Slice 的知识。</p><span id="more"></span><h2 id="关于切片的小问题"><a href="#关于切片的小问题" class="headerlink" title="关于切片的小问题"></a>关于切片的小问题</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">ss := s[<span class="number">1</span>:]</span><br><span class="line">ss = <span class="built_in">append</span>(ss, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> ss &#123;</span><br><span class="line">v += <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> ss &#123;</span><br><span class="line">ss[i] += <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看似不难，但是能否正确写出答案，考验的还是自己对切片的底层知识是否掌握的够好。</p><h2 id="切片的知识回顾"><a href="#切片的知识回顾" class="headerlink" title="切片的知识回顾"></a>切片的知识回顾</h2><p>切片（Slice），它的内部一般会维护三个变量，<code>ptr</code>（pointer）、<code>len</code>（length）、<code>cap</code>（capacity）。在初学切片时，我们知道在对数组或者切片进一步进行切片后，新生成的子切片是原有数组或切片的视图（View）。<br>也就是说，我们对子切片进行任何的修改，都会作用在他的底层数组上。但是如果仅仅浅显的认识到这一点还是不够的，稍有疏忽就会出错。</p><p>所以，这道题一不留神就很容易得出 <code>[1 12 13]</code> 这种错误答案。接下来分块来分析一下</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">ss := s[<span class="number">1</span>:]</span><br><span class="line">ss = <span class="built_in">append</span>(ss, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>首先第一个问题：上面每一行产生的变量，它的值、<code>len</code> 和 <code>cap</code> 分别是多少？</p><p>第一行中，<code>s</code> 是一个原始切片，这种原始切片的 <code>len</code> 和 <code>cap</code> 的大小都是一样的，因此可以很容易的知道，此时 <code>s</code> 的 <code>len</code> 和 <code>cap</code> 都是 3。</p><p>第二行中的 <code>ss</code> 则是 <code>s</code> 的子切片，其值为 <code>[2 3]</code>，可见 <code>len</code> 应该为 2，那么它的 <code>cap</code> 应该是多少？首先应该明白一点，<strong>切片可以向后扩展，但是不可以向前扩展</strong>。因为 <code>ss</code> 是截取 <code>s</code> 最后两个值，据此我们可以判断出 <code>ss</code> 的 <code>cap</code> 应该为 2。倘若有另一个变量 <code>ss2 := s[:2]</code>，值为 <code>[1 2]</code>，根据可以向后扩展的原则，<code>ss2</code> 的底层数组 <code>s</code> 中还有一个元素的位置，所以此时 <code>ss2</code> 的 <code>cap</code> 的值就应该为 3。</p><p>第三行，涉及到 <code>append</code> 函数的知识。在第二行的分析中，了解到此时 <code>ss</code> 的 <code>len</code> 已经等于 <code>cap</code> 了，换句话是已经满了。如果非要在子切片上继续添加新元素就已经超过底层数组的 <code>cap</code> 了，那么 <code>append</code> 函数又是如何处理这个问题的呢？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The append built-in function appends elements to the end of a slice. If</span></span><br><span class="line"><span class="comment">// it has sufficient capacity, the destination is resliced to accommodate the</span></span><br><span class="line"><span class="comment">// new elements. If it does not, a new underlying array will be allocated.</span></span><br><span class="line"><span class="comment">// Append returns the updated slice. It is therefore necessary to store the</span></span><br><span class="line"><span class="comment">// result of append, often in the variable holding the slice itself:</span></span><br><span class="line"><span class="comment">//slice = append(slice, elem1, elem2)</span></span><br><span class="line"><span class="comment">//slice = append(slice, anotherSlice...)</span></span><br><span class="line"><span class="comment">// As a special case, it is legal to append a string to a byte slice, like this:</span></span><br><span class="line"><span class="comment">//slice = append([]byte(&quot;hello &quot;), &quot;world&quot;...)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">append</span><span class="params">(slice []Type, elems ...Type)</span> []<span class="title">Type</span></span></span><br></pre></td></tr></table></figure><p>根据 <code>append</code> 函数的描述，<strong>如果容量足够，那么会 reslice 来容纳新的元素，倘若容量不够的话，就会重新分配一个新的底层数组</strong>，这也是为什么 <code>append</code> 函数会要求接收返回值，因为 append 函数有可能导致底层素组的变化。</p><p>回到刚才的分析，现在已经明白，新产生的 <code>ss</code> 已经不是原来的 <code>ss</code> 了，底层数组也不是 <code>s</code> ，具体是那个底层数组也只有系统才知道。<strong>因此后续代码再对 <code>ss</code> 进行何种操作，都不会再作用到 <code>s</code> 上</strong>，所以我们问题的最终答案就是 <code>s</code> 没有变化，结果仍为 <code>[1 2 3]</code>。</p><p>不过，我们还需要再次思考，通过重新分配底层数组而产生的切片，它的 <code>cap</code> 应该为多少呢？通过查看源码，可以在 <a href="https://github.com/golang/go/blob/master/src/runtime/slice.go"><code>src/runtime/slice.go</code></a> 中找到一个名为 <code>growslice</code> 的函数，可以略窥一二。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">growslice</span><span class="params">(et *_type, old slice, <span class="built_in">cap</span> <span class="keyword">int</span>)</span> <span class="title">slice</span></span> &#123;</span><br><span class="line"><span class="comment">// 省略部分代码</span></span><br><span class="line"></span><br><span class="line">newcap := old.<span class="built_in">cap</span></span><br><span class="line">doublecap := newcap + newcap</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">cap</span> &gt; doublecap &#123;</span><br><span class="line">newcap = <span class="built_in">cap</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> old.<span class="built_in">len</span> &lt; <span class="number">1024</span> &#123;</span><br><span class="line">newcap = doublecap</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Check 0 &lt; newcap to detect overflow</span></span><br><span class="line"><span class="comment">// and prevent an infinite loop.</span></span><br><span class="line"><span class="keyword">for</span> <span class="number">0</span> &lt; newcap &amp;&amp; newcap &lt; <span class="built_in">cap</span> &#123;</span><br><span class="line">newcap += newcap / <span class="number">4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Set newcap to the requested cap when</span></span><br><span class="line"><span class="comment">// the newcap calculation overflowed.</span></span><br><span class="line"><span class="keyword">if</span> newcap &lt;= <span class="number">0</span> &#123;</span><br><span class="line">newcap = <span class="built_in">cap</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> overflow <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">var</span> lenmem, newlenmem, capmem <span class="keyword">uintptr</span></span><br><span class="line"><span class="comment">// Specialize for common values of et.size.</span></span><br><span class="line"><span class="comment">// For 1 we don&#x27;t need any division/multiplication.</span></span><br><span class="line"><span class="comment">// For sys.PtrSize, compiler will optimize division/multiplication into a shift by a constant.</span></span><br><span class="line"><span class="comment">// For powers of 2, use a variable shift.</span></span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> et.size == <span class="number">1</span>:</span><br><span class="line">lenmem = <span class="keyword">uintptr</span>(old.<span class="built_in">len</span>)</span><br><span class="line">newlenmem = <span class="keyword">uintptr</span>(<span class="built_in">cap</span>)</span><br><span class="line">capmem = roundupsize(<span class="keyword">uintptr</span>(newcap))</span><br><span class="line">overflow = <span class="keyword">uintptr</span>(newcap) &gt; maxAlloc</span><br><span class="line">newcap = <span class="keyword">int</span>(capmem)</span><br><span class="line"><span class="keyword">case</span> et.size == sys.PtrSize:</span><br><span class="line">lenmem = <span class="keyword">uintptr</span>(old.<span class="built_in">len</span>) * sys.PtrSize</span><br><span class="line">newlenmem = <span class="keyword">uintptr</span>(<span class="built_in">cap</span>) * sys.PtrSize</span><br><span class="line">capmem = roundupsize(<span class="keyword">uintptr</span>(newcap) * sys.PtrSize)</span><br><span class="line">overflow = <span class="keyword">uintptr</span>(newcap) &gt; maxAlloc/sys.PtrSize</span><br><span class="line">newcap = <span class="keyword">int</span>(capmem / sys.PtrSize)</span><br><span class="line"><span class="keyword">case</span> isPowerOfTwo(et.size):</span><br><span class="line"><span class="keyword">var</span> shift <span class="keyword">uintptr</span></span><br><span class="line"><span class="keyword">if</span> sys.PtrSize == <span class="number">8</span> &#123;</span><br><span class="line"><span class="comment">// Mask shift for better code generation.</span></span><br><span class="line">shift = <span class="keyword">uintptr</span>(sys.Ctz64(<span class="keyword">uint64</span>(et.size))) &amp; <span class="number">63</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">shift = <span class="keyword">uintptr</span>(sys.Ctz32(<span class="keyword">uint32</span>(et.size))) &amp; <span class="number">31</span></span><br><span class="line">&#125;</span><br><span class="line">lenmem = <span class="keyword">uintptr</span>(old.<span class="built_in">len</span>) &lt;&lt; shift</span><br><span class="line">newlenmem = <span class="keyword">uintptr</span>(<span class="built_in">cap</span>) &lt;&lt; shift</span><br><span class="line">capmem = roundupsize(<span class="keyword">uintptr</span>(newcap) &lt;&lt; shift)</span><br><span class="line">overflow = <span class="keyword">uintptr</span>(newcap) &gt; (maxAlloc &gt;&gt; shift)</span><br><span class="line">newcap = <span class="keyword">int</span>(capmem &gt;&gt; shift)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">lenmem = <span class="keyword">uintptr</span>(old.<span class="built_in">len</span>) * et.size</span><br><span class="line">newlenmem = <span class="keyword">uintptr</span>(<span class="built_in">cap</span>) * et.size</span><br><span class="line">capmem, overflow = math.MulUintptr(et.size, <span class="keyword">uintptr</span>(newcap))</span><br><span class="line">capmem = roundupsize(capmem)</span><br><span class="line">newcap = <span class="keyword">int</span>(capmem / et.size)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 省略部分代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> slice&#123;p, old.<span class="built_in">len</span>, newcap&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过阅读上面的代码，可以发现，对于一个切片的扩容有以下规则</p><ul><li>如果指定扩容大小大于旧切片容量的两倍，那么新切片的容量就为指定容量大小</li><li>如果指定扩容大小小于旧切片容量的两倍<ul><li>当旧切片长度小于 1024 时，新切片的容量则为旧容量的两倍</li><li>若就切片长度大于 1024 时，新切片的容量会在旧容量的基础上每次递增 1/4，注意这里是每次增加后的 1/4 并且前提是不超过指定容量值。<br>如果因为增加导致新容量的值溢出，则新容量就会直接为指定容量值</li></ul></li><li>（后面还基于切片的类型对切片容量做出了一些调整，<del>但是我似乎没看懂啊（雾）</del>）</li></ul><p>所以，对于重新指定了新的底层数组的 <code>ss</code> ，<strong>在原来容量大小为 2 的基础上，新的容量大小应该为旧容量的两倍，也就是 4</strong>。</p><p>后面还有两处循环，对于第一处循环</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> ss &#123;</span><br><span class="line">v += <span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为 Go 语言都是值传递，且此处只是对取得值进行修改，而非在原来的地址对值进行修改，因此很显然此循环不会对任何切片内的值做出改变。</p><p>至于第二处循环</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> ss &#123;</span><br><span class="line">ss[i] += <span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是在 <code>ss</code> 上对每个元素加 10，因此，<code>ss</code> 的内容应该为 <code>[12 13 14]</code></p><h2 id="正确答案"><a href="#正确答案" class="headerlink" title="正确答案"></a>正确答案</h2><p>综上所述，这个关于切片的小问题，最终的输出结果应该为 <code>[1 2 3]</code>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;偶然在网上瞧见了一道 Go 语言的面试题，本以为不难，但却没答对，所以藉此再来回顾下关于 Go 语言 Slice 的知识。&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="http://innofang.github.io/categories/Go/"/>
    
    
    <category term="Go" scheme="http://innofang.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go语言学习笔记</title>
    <link href="http://innofang.github.io/2020/02/11/Go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://innofang.github.io/2020/02/11/Go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-11T02:29:44.000Z</published>
    <updated>2020-04-17T13:32:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>Go 语言入门</p><span id="more"></span><h2 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> <span class="comment">// 定义 int 变量 a</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">int</span> = <span class="number">10</span> <span class="comment">// 定义 int 变量 b 并赋初值</span></span><br><span class="line"><span class="keyword">var</span> c, d <span class="keyword">int</span> <span class="comment">// 定义多个 int 变量</span></span><br><span class="line"><span class="keyword">var</span> e, f <span class="keyword">int</span> = <span class="number">3</span>, <span class="number">4</span> <span class="comment">// 定义多个 int 型变量</span></span><br><span class="line"><span class="keyword">var</span> g, h, i, j = <span class="number">5</span>, <span class="number">6</span>, <span class="literal">true</span>, <span class="string">&quot;def&quot;</span> <span class="comment">// 使用类型推导为多个变量进行赋值</span></span><br><span class="line">k, l, m := <span class="number">7</span>, <span class="number">8.1</span>, <span class="literal">false</span>, <span class="string">&quot;def&quot;</span> <span class="comment">// 更简短的定义与赋值语句，:= 只能第一次用，往后要用 =</span></span><br><span class="line">      <span class="comment">// 并且只能在函数内部使用，函数外部无法使用 :=</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">aa = <span class="number">1</span></span><br><span class="line">bb = <span class="number">2.2</span></span><br><span class="line">cc = <span class="string">&quot;define&quot;</span></span><br><span class="line">dd = <span class="literal">true</span></span><br><span class="line">) <span class="comment">// 集中定义多个变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在函数外的变量使用范围是包内部，GO 无全局变量的说法</span></span><br></pre></td></tr></table></figure><p><strong>TIPS</strong> 运行 GO 的 main 函数，所在包的包名也要是 main</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main  <span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123; <span class="comment">//</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="内建变量"><a href="#内建变量" class="headerlink" title="内建变量"></a>内建变量</h2><ul><li><code>bool</code> 布尔型</li><li><code>string</code> 字符串型</li><li><code>(u)int</code>, <code>(u)int8</code>, <code>(u)int16</code>, <code>(u)int32</code>, <code>(u)int64</code>, <code>(u)intptr</code> 数字表示int位数，不加就默认为当前计算机位数，<code>ptr</code> 表示指针，u表示无符号</li><li><code>byte</code> 字节型，8位1字节</li><li><code>rune</code> Go语言的字符型，32位4个字节</li><li><code>float32</code>, <code>float64</code> 浮点型，数字为位数</li><li><code>complex64</code>, <code>complex128</code>  复数类型，前者实部和虚部都是 <code>float32</code>，后者两个都是 <code>float64</code></li></ul><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><p>Go语言类型转换是<strong>强制</strong>的</p><h2 id="常量的定义"><a href="#常量的定义" class="headerlink" title="常量的定义"></a>常量的定义</h2><p>与变量的定义有很多相似的地方，不过要用 <code>const</code> 代替 <code>var</code></p><p>定义常量的时候可以指定类型，也可以不指定类型，若不指定类型，就是个位置类型的文本，在使用的时候会进行推断</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a, b = <span class="number">3</span>, <span class="number">4</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="keyword">int</span></span><br><span class="line">c = <span class="keyword">int</span>(math.Sqrt(a * a + b * b)) </span><br><span class="line"><span class="comment">// math.Sqrt 只能传入浮点数，若 a，b 指定了 int 型则会报错，若不指定则会当成 float</span></span><br></pre></td></tr></table></figure><h3 id="定义枚举类型"><a href="#定义枚举类型" class="headerlink" title="定义枚举类型"></a>定义枚举类型</h3><p>Go 语言没有枚举值，只能用 <code>const</code> 来模拟</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">Mon = <span class="literal">iota</span></span><br><span class="line">Tue</span><br><span class="line">Wed</span><br><span class="line">Thr</span><br><span class="line">Fri</span><br><span class="line">Sat</span><br><span class="line">Sun</span><br><span class="line">)</span><br><span class="line">fmt.Println(Mon, Tue, Wed, Thr, Fri, Sat, Sun) <span class="comment">// 0， 1， 2， 3， 4， 5， 6</span></span><br></pre></td></tr></table></figure><p><code>iota</code> 是一个预先定义的标识符，在 <code>const</code> 表达式中（通常在括号内），用来表示当前 <code>const</code> 规范的非类型整数顺序数，索引为 0</p><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> filename = <span class="string">&quot;in.txt&quot;</span></span><br><span class="line">contents, err := ioutil.ReadFile(filename)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, contents)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Go的条件语句的特点</p><ol><li>if 条件里可以赋值，且赋值的变量作用域只在这个 if 语句里</li><li>条件语句部分不需要括号，并且可以用 <code>;</code> 来分隔多个条件</li></ol><p>上面的例子可以进一步修改为</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> contents, err := ioutil.ReadFile(filename); err == <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, contents)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    fmt.Println(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">eval</span><span class="params">(a, b <span class="keyword">int</span>, op <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> result <span class="keyword">int</span></span><br><span class="line"><span class="keyword">switch</span> op &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;+&quot;</span>: result = a + b</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;-&quot;</span>: result = a - b</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;*&quot;</span>: result = a * b</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;/&quot;</span>: result = a / b</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;unsupported operator:&quot;</span> + op)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Go 语言中 switch 的特点：</p><ol><li>swtich 会自动 break，除非使用 <code>falllthrough</code></li><li>switch 后可以没有表示，在 case 中写表达式也可以</li></ol><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p>去其他语言的 for 循环的区别在于没有 <code>( )</code>，并且三个部分各自都可以省略</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++ &#123;</span><br><span class="line">    sum += i</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Go 语言中没有 while，如果把 for 玄幻的初始化和递增条件省略，就类似于 while</p><p>如果把三个部分都省略，那么就相当于死循环</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="多个返回值"><a href="#多个返回值" class="headerlink" title="多个返回值"></a>多个返回值</h3><p>Go 的函数可以返回多个值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">div</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> a / b, a % b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外，还可以给返回值命名，可以增强代码可读性，也可以为编辑器的补全提供帮助。</p><p>若指明了返回值名称，则可以对返回值进行直接赋值，最后只需要一个 return 即可(该用法仅用于非常简单的函数，否则影响可读性)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">div</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(q, r <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">q = a / b</span><br><span class="line">r = a % b</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数式编程"><a href="#函数式编程" class="headerlink" title="函数式编程"></a>函数式编程</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">apply</span><span class="params">(op <span class="keyword">func</span>(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span>, <span class="title">a</span>, <span class="title">b</span> <span class="title">int</span>) <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Calling %s with (%d, %d)\n&quot;</span>, </span><br><span class="line">               reflect.ValueOf(op).Pointer(runtime.FuncForPC(p).Name()), </span><br><span class="line">               a, b)</span><br><span class="line"><span class="keyword">return</span> op(a, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apply(<span class="function"><span class="keyword">func</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a * b</span><br><span class="line">&#125;, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><h3 id="可变参数列表"><a href="#可变参数列表" class="headerlink" title="可变参数列表"></a>可变参数列表</h3><p>Go 语言没有<code>默认参数</code>、<code>函数重载</code>，但有<code>可变参数列表</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(numbers ...<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">s := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> numbers &#123;</span><br><span class="line">s += numbers[i]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><p>Go 语言的指针不能进行运算，这也是他简单的地方<br>Go 语言只有值传递一种方式（与值传递对应的是类似与 C++ 的引用传递，这个才 Go 中是没有的）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func swap(a, b *int) &#123;</span><br><span class="line">*a , *b = *b, *a</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 [<span class="number">5</span>]<span class="keyword">int</span> <span class="comment">// 定义长度为 5 的整型数组，默认值都为 0</span></span><br><span class="line">arr2 := [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>&#125;<span class="comment">// 定义并初始化长度为 3 的整型数组</span></span><br><span class="line">arr3 := [...]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>&#125;   <span class="comment">// 不指定长度初始化一个整型数组</span></span><br><span class="line"><span class="keyword">var</span> grid [<span class="number">3</span>][<span class="number">4</span>]<span class="keyword">int</span>   <span class="comment">// 定义 3 行 4 列的二维数组</span></span><br></pre></td></tr></table></figure><p>数组的遍历，可以使用 <code>range</code> 关键字，可以获得下标和值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr := [...]<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> arr &#123;</span><br><span class="line">    fmt.Println(i, v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果只需要值不需要下标，则可以用 <code>__</code> 代替</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> arr &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>若只要下标，则可以直接写成</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">range</span> arr &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>Go 中的数组是值类型，也就是说数组传递给函数后，会拷贝数组内容，修改数组的值不会改变原数组的内容（大部分语言的数组都是引用传递，而 Go 则是值传递）。此外<code>[10]int</code> 和 <code>[20]int</code> 是不同类型，也就是说实参数组的长度要与形参数组的长度相一致，否则会报错。</p><p>要实现引用传递，则需要用到指针</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">(arr *[5]<span class="keyword">int</span>)</span></span> &#123; ... &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> arr[<span class="number">5</span>]<span class="keyword">int</span></span><br><span class="line">    foo(&amp;arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见使用数组还是相当麻烦的，所以在 Go 中使用的更多的是切片（Slice）</p><h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">arr := [...]<span class="keyword">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">fmt.Println(arr[<span class="number">2</span>:<span class="number">6</span>])<span class="comment">// [2 3 4 5]</span></span><br><span class="line">fmt.Println(arr[:<span class="number">6</span>])<span class="comment">// [0 1 2 3 4 5]</span></span><br><span class="line">fmt.Println(arr[<span class="number">2</span>:])<span class="comment">// [2 3 4 5 6 7]</span></span><br><span class="line">fmt.Println(arr[:])<span class="comment">// [0 1 2 3 4 5 6 7]</span></span><br></pre></td></tr></table></figure><p>切片生成的是数组的一个视图，修改切片会改变原数组，在函数中传递数组时，若要方便修改原数组，可以使用切片</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">(arr []<span class="keyword">int</span>)</span></span> &#123; ... &#125; <span class="comment">//  方括号内什么也没有就表示切片</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    arr := [...]<span class="keyword">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">    foo(arr[:])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注</strong></p><ol><li>slice 可以向后扩展，但是不能向前扩展</li><li>s[i] 不可以超越 len(s)，向后扩展不可以超越底层数组 caps(s)</li><li>向slice中添加元素，如果长度没超过 cap，则会覆盖原数组的内容，若超过cap，系统则会重新分配更大的底层数组</li><li>由于值传递，使用 append 有可能会修改 slice 的 len 或 cap ，因此必须接受 append 的返回值，即 <code>newSlc := append(slc, newValue)</code> </li></ol><h3 id="切片的创建方式"><a href="#切片的创建方式" class="headerlink" title="切片的创建方式"></a>切片的创建方式</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1 := []<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>&#125;<span class="comment">// 定义并初始化切片，[]内什么都不加为切片，加...或数字为数组</span></span><br><span class="line">s2 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">16</span>)<span class="comment">// 创建长度为 16 的空切片</span></span><br><span class="line">s3 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">10</span>, <span class="number">32</span>)<span class="comment">// 创建长度为 16 ，底层数组长度为 32 的空切片</span></span><br></pre></td></tr></table></figure><h3 id="切片的操作"><a href="#切片的操作" class="headerlink" title="切片的操作"></a>切片的操作</h3><h4 id="切片的复制"><a href="#切片的复制" class="headerlink" title="切片的复制"></a>切片的复制</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">copy</span>(s1, s2) <span class="comment">// 把 s2 复制到 s1 上</span></span><br></pre></td></tr></table></figure><h4 id="切片元素的删除"><a href="#切片元素的删除" class="headerlink" title="切片元素的删除"></a>切片元素的删除</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">append</span>(s[:<span class="number">3</span>], [<span class="number">4</span>:]) <span class="comment">// 删除中间元素（第三个）</span></span><br><span class="line"></span><br><span class="line">front := s[<span class="number">0</span>]    <span class="comment">// 取得头元素</span></span><br><span class="line">s = s[<span class="number">1</span>:]       <span class="comment">// 删除头元素</span></span><br><span class="line"></span><br><span class="line">tail := s[<span class="built_in">len</span>(s) - <span class="number">1</span>]<span class="comment">// 取得尾元素</span></span><br><span class="line">s = s[:<span class="built_in">len</span>(s)<span class="number">-1</span>]<span class="comment">// 删除尾元素</span></span><br></pre></td></tr></table></figure><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><p>定义形式如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">map</span>[K]V</span><br><span class="line"><span class="keyword">map</span>[K1]<span class="keyword">map</span>[K2]V<span class="comment">// 复合map</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// example</span></span><br><span class="line">m := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span> &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Inno&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span> : <span class="string">&quot;1234&quot;</span>,</span><br><span class="line">    <span class="string">&quot;gender&quot;</span> : <span class="string">&quot;male&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m) <span class="comment">// map[gender:male id:1234 name:Inno]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 另一种定义 map 的方式</span></span><br><span class="line">m2 = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>) <span class="comment">// m2 == empty map</span></span><br><span class="line"><span class="keyword">var</span> m3 = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>   <span class="comment">// m3 == nil</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// map 的遍历（不保证顺序）</span></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> m &#123;</span><br><span class="line">    fmt.Println(k, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">name := m[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">fmt.Println(name)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断元素是否存在</span></span><br><span class="line"><span class="keyword">if</span> age, ok := m[<span class="string">&quot;age&quot;</span>]; ok &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;age:&quot;</span>, age)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;There is not a key called age!&quot;</span>)</span><br><span class="line">    <span class="comment">// 若元素不存在，获得的值也不是 nil 而是一个 zeroValue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除 key</span></span><br><span class="line"><span class="built_in">delete</span>(m, <span class="string">&quot;gender&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取长度</span></span><br><span class="line"><span class="built_in">len</span>(m)</span><br></pre></td></tr></table></figure><ul><li>map 使用哈希表，必须可以比较相等</li><li>除了 slice、map、function 的内建类型都可以作为key</li><li>自建类型（Struct 类型）也可以作为 key，前提是没有 slice、map、function</li></ul><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><p>Go 语言面向对象仅支持封装，不支持继承和多态；Go语言没有class，只有 struct</p><h3 id="结构的创建和简单使用"><a href="#结构的创建和简单使用" class="headerlink" title="结构的创建和简单使用"></a>结构的创建和简单使用</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> treeNode <span class="keyword">struct</span> &#123;</span><br><span class="line">value       <span class="keyword">int</span></span><br><span class="line">left, right *treeNode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 工厂方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTreeNode</span><span class="params">(value <span class="keyword">int</span>)</span> *<span class="title">treeNode</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;treeNode&#123;value: value&#125; <span class="comment">// 返回的是局部变量的地址！！</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> root treeNode</span><br><span class="line"></span><br><span class="line"><span class="comment">// Go struct 有很多构造方法，所以可以不需要所谓的构造函数</span></span><br><span class="line"></span><br><span class="line">root = treeNode&#123;value: <span class="number">3</span>&#125;</span><br><span class="line">root.left = &amp;treeNode&#123;&#125;</span><br><span class="line">root.right = &amp;treeNode&#123;<span class="number">5</span>, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;</span><br><span class="line">root.right.left = <span class="built_in">new</span>(treeNode)</span><br><span class="line">root.left.right = createTreeNode(<span class="number">2</span>) <span class="comment">// 使用工厂方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义在 Slice 中可以省略反复写 treeNode</span></span><br><span class="line">nodes := []treeNode &#123;</span><br><span class="line">&#123;value: <span class="number">3</span>&#125;,</span><br><span class="line">&#123;&#125;,</span><br><span class="line">&#123;<span class="number">6</span>, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(nodes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Q</strong> 在工厂方法中返回的局部变量的地址，该局部变量是创建在堆上还是在栈上？</p><p><strong>A</strong> 因为 Go 语言有垃圾回收机制，具体是在堆上还是在栈上，由编译器来决定。若是函数中的局部变量，那么建在栈上；若将局部变量的地址返回给外部调用，那么这个局部变量就会键在堆上，并参与垃圾回收，当不再使用时，就会被回收掉。所以退出函数后，局部变量就会被销毁，这是不一定的。</p><h3 id="为结构定义方法"><a href="#为结构定义方法" class="headerlink" title="为结构定义方法"></a>为结构定义方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(node treeNode)</span> <span class="title">print</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Print(node.value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>(node treeNode)</code> 显示定义和命名方法接收者，随便叫什么都可以</li></ul><p>因为在Go语言中都是值传递，那么如果要在函数内修改值的话，值传递是无法生效的，因此可以使用指针作为方法接收者</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(node *treeNode)</span> <span class="title">setValue</span><span class="params">(value <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    node.value = value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>只有使用指针才可以改变结构内容</li><li><code>nil</code> 指针也可以调用方法</li></ul><p><strong>值接收者 VS 指针接收者</strong></p><ol><li>要改变内容时必须使用指针接收者</li><li>结构过大时也考虑使用指针接收者（因为值接收者是对值的拷贝，结果过大则消耗越大）</li><li>一致性：如果有指针接收者，最好都是指针接收者（一个建议，保持一致有利于阅读以及代码维护）</li><li>值接收者 是 Go 语言特有的</li><li>值/指针接收者均可接收值/指针</li></ol><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>名字一般使用CamelCase，首字母大写为 public，首字母小写为 private。</p><p>封装是对包而言的，每个目录可以有很多个包，但只能有一个main包，main 包包含可执行入口。</p><p>为结构定义的方法必须在同一个包内，但可以是不同文件。</p><h2 id="扩充类型"><a href="#扩充类型" class="headerlink" title="扩充类型"></a>扩充类型</h2><ol><li><p>使用别名</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Queue []<span class="keyword">int</span> <span class="comment">//Queue 本质是一个int切片</span></span><br><span class="line"><span class="comment">// 扩展 []int，使其具有队列的功能</span></span><br><span class="line"><span class="comment">/* 入队 */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *Queue)</span> <span class="title">Push</span><span class="params">(v <span class="keyword">int</span>)</span></span> &#123;<span class="comment">// 设计修改内容的要使用指针接收者</span></span><br><span class="line">    *q = <span class="built_in">append</span>(*q, v)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 出队 */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *Queue)</span> <span class="title">Pop</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    head := (*q)[<span class="number">0</span>]</span><br><span class="line">    *q = (*q)[<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">return</span> head</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用组合</p></li></ol><p>利用组合为之前的 treeNode对象扩展一个遍历方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义新的结构体，使用组合的方式扩展类型</span></span><br><span class="line"><span class="keyword">type</span> myTreeNode <span class="keyword">struct</span> &#123;</span><br><span class="line">node *treeNode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(myNode *myTreeNode)</span> <span class="title">postOrder</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> myNode == <span class="literal">nil</span> &amp;&amp; myNode.node == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">left := myTreeNode&#123;myNode.node.left&#125;</span><br><span class="line">right := myTreeNode&#123;myNode.node.right&#125;</span><br><span class="line"></span><br><span class="line">left.postOrder()</span><br><span class="line">right.postOrder()</span><br><span class="line">myNode.node.<span class="built_in">print</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> root treeNode </span><br><span class="line"><span class="comment">// 定义二叉树</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">myRoot := myTreeNode&#123;&amp;root&#125;</span><br><span class="line">myRoot.postOrder() </span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="接口的定义"><a href="#接口的定义" class="headerlink" title="接口的定义"></a>接口的定义</h3><p><em>使用者定义接口</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span> </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接口定义</span></span><br><span class="line"><span class="keyword">type</span> Retriever <span class="keyword">interface</span> &#123;</span><br><span class="line">Get(url <span class="keyword">string</span>) <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">download</span><span class="params">(r Retriever)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> r.Get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> r Retriever </span><br><span class="line">    <span class="comment">// 实现者待实现</span></span><br><span class="line">fmt.Println(download(r))</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实现接口"><a href="#实现接口" class="headerlink" title="实现接口"></a>实现接口</h3><p>在接口所在目录下新建目录，创建新文件用来实现接口方法，当前目录结构为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LearnGo&gt;innofang.io&gt;innofang&gt;interfaces</span><br><span class="line">    &gt;real</span><br><span class="line">    |- main.go// 接口实现所在位置</span><br><span class="line">    |- main.go // 接口定义所在位置</span><br></pre></td></tr></table></figure><p><em>只要实现了接口方法，就被认为实现了接口</em>，接口实现如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="built_in">real</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;net/http/httputil&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Retriever <span class="keyword">struct</span> &#123;</span><br><span class="line">UserAgent <span class="keyword">string</span></span><br><span class="line">TimeOut time.Duration</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只要实现了接口方法，就被认为实现了接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r Retriever)</span> <span class="title">Get</span><span class="params">(url <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">resp, err := http.Get(url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result, err := httputil.DumpResponse(resp, <span class="literal">true</span>)</span><br><span class="line">resp.Body.Close()<span class="comment">// 使用完 response 需要关闭</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用接口实现"><a href="#使用接口实现" class="headerlink" title="使用接口实现"></a>使用接口实现</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> r Retriever</span><br><span class="line">r = <span class="built_in">real</span>.Retriever&#123;&#125;<span class="comment">// 使用接口 包名.结构体名</span></span><br><span class="line">fmt.Println(download(r))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接口里面有什么</strong></p><p>接口变量里面的内容有两种情况：</p><ol><li>实现者的类型和实现者的值</li><li>实现者的类型和实现者的指针，其中指针指向实现者</li></ol><p>具体是哪个，可以自由选择，因此在使用接口变量的时候，不要使用接口的地址，因为接口内部包含有指针</p><ul><li>接口变量自带指针</li><li>接口变量同样采用值传递，几乎不需要使用接口的指针</li><li>指针接收者实现只能以指针方式使用；值接收者都可</li></ul><p>若接口方法实现时使用了指针接收者，那么在定义该接口实习时，需要取接口地址</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改 real 包下的 Get 方法实现，使用指针接收者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Retriever)</span> <span class="title">Get</span><span class="params">(url <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">... </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么在定义该接口实现者时，就需要使用取地址符</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> r Retriever</span><br><span class="line">r = &amp;<span class="built_in">real</span>.Retriever&#123;&#125;</span><br><span class="line">fmt.Println(download(r))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查看接口变量"><a href="#查看接口变量" class="headerlink" title="查看接口变量"></a>查看接口变量</h3><p>再定义一个接口实现者</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mock</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Retriever <span class="keyword">struct</span> &#123;</span><br><span class="line">Contents <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只要实现了接口方法，就被认为实现了接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r Retriever)</span> <span class="title">Get</span><span class="params">(url <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> r.Contents</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看接口变量有两种方式</p><h4 id="Type-Switch"><a href="#Type-Switch" class="headerlink" title="Type Switch"></a>Type Switch</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> v := r.(<span class="keyword">type</span>) &#123; <span class="comment">// 获取类型</span></span><br><span class="line"><span class="keyword">case</span> mock.Retriever:</span><br><span class="line">fmt.Println(<span class="string">&quot;Contents: &quot;</span>, v.Contents)</span><br><span class="line"><span class="keyword">case</span> *<span class="built_in">real</span>.Retriever:</span><br><span class="line">fmt.Println(<span class="string">&quot;UserAgent: &quot;</span>, v.UserAgent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Type-Assertion"><a href="#Type-Assertion" class="headerlink" title="Type Assertion"></a>Type Assertion</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">realRetriever := r.(*<span class="built_in">real</span>.Retriever) <span class="comment">// 通过</span></span><br><span class="line">fmt.Println(realRetriever.TimeOut)</span><br><span class="line"></span><br><span class="line"><span class="comment">//mockRetriever := r.(mock.Retriever)// 错误，因为 r 在之前定义的是 real.Retriever</span></span><br><span class="line"><span class="comment">//fmt.Println(mockRetriever.Contents)   // 因此无法转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 更优雅的转换方式</span></span><br><span class="line"><span class="keyword">if</span> mockRetriever, ok := r.(mock.Retriever); ok &#123;</span><br><span class="line">fmt.Println(mockRetriever.Contents)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;not a mock&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>表示任何类型</strong> ：<code>interface&#123;&#125;</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Quue []<span class="keyword">interface</span>&#123;&#125; <span class="comment">// 该slice就可以接收任何类型的值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *Queue)</span> <span class="title">Push</span><span class="params">(v <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">    *q = <span class="built_in">append</span>(*q, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *Queue)</span> <span class="title">Pop</span><span class="params">()</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">    head := (*q)[<span class="number">0</span>]</span><br><span class="line">    *q = (*q)][<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">return</span> head </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接口的组合"><a href="#接口的组合" class="headerlink" title="接口的组合"></a>接口的组合</h3><p>假设有另一个结构体 Poster，现在要把含有 Get 方法的 Retriever 和含有 Post 方法的 Poster 进行组合</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RetrieverPoster</span> <span class="title">interface</span></span> &#123;</span><br><span class="line">    Retriever<span class="comment">// 把结构体名包含进来就可以了</span></span><br><span class="line">    Poster</span><br><span class="line">    <span class="comment">// 也可以定义其他方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在对于实现者来说，他可以自己实现 Post 方法和 Get 方法了</p><p>使用者不管定义者如何定义，它只管实现它要的方法，不需要关心使用的是什么接口</p><p>只要是一个类型就可以实现接口，这也是 Go 语言灵活的地方</p><h2 id="defer-调用"><a href="#defer-调用" class="headerlink" title="defer 调用"></a>defer 调用</h2><p>何时使用 defer 调用 </p><ul><li>Open/Close</li><li>Lock/Unlock</li><li>PrintHeader/PrintFooter</li></ul><p>被 defer 修饰的语句会确保在函数结束时发生，无论这个程序是否被提前终止，如果有多个 defer 会有一个栈来存储语句，采用先进后出的顺序执行语句</p><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">file, err := os.Open(<span class="string">&quot;abc.txt&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="comment">// If there is an error, it will be of type *PathError.</span></span><br><span class="line">    <span class="keyword">if</span> pathError, ok := err.(*os.PathError); !ok &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err) <span class="comment">// 如果是自定义 error 就会直接 panic</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;%s, %s, %s\n&quot;</span>, pathError.Op, pathError.Path, pathError.Err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="panic"><a href="#panic" class="headerlink" title="panic"></a>panic</h3><ul><li>停止当前函数执行</li><li>一直向上返回，执行每一层的 defer</li><li>如果没有遇见 recover，程序退出</li></ul><h3 id="recover"><a href="#recover" class="headerlink" title="recover"></a>recover</h3><ul><li>仅在 defer 调用中使用</li><li>获取 panic 的值</li><li>如果无法处理，可重新 0panic</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;errors&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">tryRecover</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := <span class="built_in">recover</span>()</span><br><span class="line"><span class="keyword">if</span> err, ok := r.(error); ok &#123;</span><br><span class="line"><span class="comment">// 如果是 error， 则会进行处理</span></span><br><span class="line">fmt.Println(<span class="string">&quot;Error occured:&quot;</span>, err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 如果不是 error，比如直接 `panic(123)` ，则不处理</span></span><br><span class="line"><span class="built_in">panic</span>(fmt.Sprint(<span class="string">&quot;I don&#x27;t know what to do: %v&quot;</span>, r))</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"><span class="built_in">panic</span>(errors.New(<span class="string">&quot;this is an error&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tryRecover()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="表格驱动测试"><a href="#表格驱动测试" class="headerlink" title="表格驱动测试"></a>表格驱动测试</h2><ul><li>分离的测试数据和测试逻辑</li><li>明确的出错信息</li><li>可以部分失败</li><li>Go 语言的语法使得我们更易实践表格驱动测试</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">    tests := []<span class="keyword">struct</span> &#123;</span><br><span class="line">        a, b, c  <span class="keyword">int32</span></span><br><span class="line">    &#125;&#123;</span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>&#125;,</span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">        &#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">        &#123;math.MaxInt32, <span class="number">1</span>, math.MinInt32&#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, test := <span class="keyword">range</span> tests &#123;</span><br><span class="line">        <span class="keyword">if</span> actual := add(test.a, test.b); actual != test.c &#123;</span><br><span class="line">            <span class="comment">// 测试失败的说明</span></span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码覆盖率"><a href="#代码覆盖率" class="headerlink" title="代码覆盖率"></a>代码覆盖率</h3><p>在测试文件所在目录下执行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> test -coverprofile=c.out <span class="comment">// 运行测试代码</span></span><br><span class="line"><span class="keyword">go</span> tool cover -html=c.out<span class="comment">// 展示覆盖率</span></span><br></pre></td></tr></table></figure><h3 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Becnchmark</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">    testCase := ...</span><br><span class="line">    ans := ...</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123; <span class="comment">// 具体运行多少遍不用管，b.N 由系统决定</span></span><br><span class="line">        actual := testedFunc(testCase)</span><br><span class="line">        <span class="keyword">if</span> actual != ans &#123;</span><br><span class="line">            b.Errorf(<span class="string">&quot;...&quot;</span>, ...)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命令行在测试文件所在目录下执行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> test -bench .</span><br></pre></td></tr></table></figure><h3 id="性能调优"><a href="#性能调优" class="headerlink" title="性能调优"></a>性能调优</h3><p>在测试文件所在目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -bench . -cpuprofile cpu.out</span><br></pre></td></tr></table></figure><p>生成了二进制文件 <code>cpu.out</code>，接着使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go tool pprof cpu.out</span><br></pre></td></tr></table></figure><p>进入交互式命令行，可以使用 <code>help</code> 查看，最简单的方式是输入 <code>web</code> 查看二进制文件。内容上，看到的方框越大，说明耗时越久，优化方框大的部分可以使程序性能更有。</p><h2 id="Goroutine"><a href="#Goroutine" class="headerlink" title="Goroutine"></a>Goroutine</h2><p>协程</p><ul><li>轻量级“线程”</li><li>非抢占式多任务处理，由协程序主动交出控制权</li><li>编译器/解释器/虚拟机层面的多任务</li><li>多个协程可能在一个或多个线程上运行</li></ul><p>因为是非抢占式的 ，若不切换协程，则会一直执行一个协程（io操作会自动切换协程）。因此对于自定义协程，需要注意有没有手动交出控制权</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a [<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">a[i]++</span><br><span class="line">runtime.Gosched() <span class="comment">// 手动交出控制权</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;(i)</span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(time.Millisecond)</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="goroutine-的定义"><a href="#goroutine-的定义" class="headerlink" title="goroutine 的定义"></a>goroutine 的定义</h3><ul><li>任何函数只需要加上 <code>go</code> 就能送给调度器运行</li><li>不需要在定义时区分是否是异步函数</li><li>调度器在合适的点进行切换 </li><li>调试时，在命令行使用 <code>-race</code> 来检测数据访问冲突  <code>go run -race goroutine.go</code></li></ul><h3 id="goroutine-可能的切换点"><a href="#goroutine-可能的切换点" class="headerlink" title="goroutine 可能的切换点"></a>goroutine 可能的切换点</h3><ul><li>I/O, select</li><li>channel</li><li>等待锁</li><li>函数调用（有时）</li><li>runtime.Gosched()</li></ul><p>只是参考，不能保证切换，不能保证在其他地方不切换</p><h2 id="通道"><a href="#通道" class="headerlink" title="通道"></a>通道</h2><p>指的是 goroutine 之间的通道，可以让 goroutine 之间互相通信。每个通道都有与其相关的类型，即通道允许传输的数据类型。通道的零值为 nil，需要使用内置 make 方法来定义</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明通道</span></span><br><span class="line"><span class="keyword">var</span> 通道名 <span class="keyword">chan</span> 数据类型</span><br><span class="line"><span class="comment">// 创建通道：如果通道为 nil（就是不存在），就需要创建通道</span></span><br><span class="line">通道名 = <span class="built_in">make</span>(<span class="keyword">chan</span> 数据类型)</span><br></pre></td></tr></table></figure><h3 id="通道的注意点"><a href="#通道的注意点" class="headerlink" title="通道的注意点"></a>通道的注意点</h3><p>Channel 通道在使用的时候，有以下几个注意点：</p><ol><li>用于 goroutine，传递消息</li><li>通道，每个都有相关联的数据类型，nil chan 是无法使用的</li><li>使用通道传递数据：&lt;-<ol><li>chan &lt;- data，发送数据到通道。向通道中写</li><li>data &lt;- chan，从通道中获取数据。从通道中读数据</li></ol></li><li>阻塞<ol><li>发送数据：chan &lt;- data，阻塞，直到另一条 goroutine 读取数据来接触阻塞</li><li>读取数据：data &lt;- chan，阻塞，知道另一条 goroutine 写入数据来接触阻塞</li></ol></li><li>Channel 是同步的，意味着同一时间只有一条 goroutine 来操作</li></ol><p><strong>注</strong> 通道是 goroutine 之间的连接，所以通道的发送和接收必须处在不同的 goroutine 中</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data := &lt;- a <span class="comment">// 从通道 a 中读取数据</span></span><br><span class="line">a &lt;- data    <span class="comment">// 将数据写进通道 a 中</span></span><br></pre></td></tr></table></figure><p>定义方式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var c chan int // c == nil</span></span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        n := &lt;- c</span><br><span class="line">        fmt.Println(n)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;()</span><br><span class="line">c &lt;- <span class="number">1</span></span><br><span class="line">c &lt;- <span class="number">2</span></span><br><span class="line">time.Sleep(time.Millisecond)</span><br></pre></td></tr></table></figure><h3 id="关闭-channel"><a href="#关闭-channel" class="headerlink" title="关闭 channel"></a>关闭 channel</h3><p>channel 可以被发送方 close，但是 channel 即使被 close 了，也会接收数据，只不过收到的是 zeroValue</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">worker</span><span class="params">(id <span class="keyword">int</span>, c <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="comment">// 判断发送方是否关闭了 channel</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/* // 方法一</span></span><br><span class="line"><span class="comment">n, ok := &lt;-c </span></span><br><span class="line"><span class="comment">if !ok &#123;  </span></span><br><span class="line"><span class="comment">break</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">fmt.Printf(&quot;worker %d received %c\n&quot;, id, n)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="comment">// 方法二 利用 range (更好)</span></span><br><span class="line">        <span class="keyword">for</span> n := <span class="keyword">range</span> c &#123;</span><br><span class="line">            fmt.Printf(<span class="string">&quot;worker %d received %c\n&quot;</span>, id, n)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送方发数据</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">channelClose</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">go</span> worker(<span class="number">0</span>, c)</span><br><span class="line">c &lt;- <span class="string">&#x27;a&#x27;</span></span><br><span class="line">c &lt;- <span class="string">&#x27;b&#x27;</span></span><br><span class="line">c &lt;- <span class="string">&#x27;c&#x27;</span></span><br><span class="line">c &lt;- <span class="string">&#x27;d&#x27;</span></span><br><span class="line"><span class="built_in">close</span>(c)</span><br><span class="line">time.Sleep(time.Millisecond)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Select"><a href="#Select" class="headerlink" title="Select"></a>Select</h3><p>select 是 Go 中的一个控制结构，select 语句类似于 switch 语句，但是 select 会随机执行一个可执行的 case。如果没有 case 可运行，若设置了 default 则会执行 default，否则它将阻塞，直到有 case 可执行。语法结构上与 switch 语句很相似</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> communication clause:</span><br><span class="line">    statement(s)</span><br><span class="line"><span class="keyword">case</span> communication clause:</span><br><span class="line">    statement(s)</span><br><span class="line"><span class="keyword">default</span>: <span class="comment">// optional</span></span><br><span class="line">    statement(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>每个 case 都必须是一个通信</li><li>所有 channel 表达式都会被求值</li><li>所有被发送的表达式都会被求值</li><li>如果有多个 case 都可以运行，select 会随机公平地选出一个执行，其他不会执行</li><li>若此刻没有 case 语句可以执行时，若有default语句，则执行该语句；否则 select 将阻塞，知道有某个通信可以运行，Go 不会重新对 channel 或值进行求值</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ch1 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">ch2 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">ch1 &lt;- <span class="number">100</span></span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> num1 := &lt;-ch1:</span><br><span class="line">fmt.Println(<span class="string">&quot;Read from ch1:&quot;</span>, num1)</span><br><span class="line"><span class="keyword">case</span> num2, ok := &lt;-ch2:</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Read from ch2:&quot;</span>, num2)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;ch2 has been closed&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(<span class="number">1</span> * time.Second):</span><br><span class="line">fmt.Println(<span class="string">&quot;After 3 seconds&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;default ...&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Go 语言入门&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="http://innofang.github.io/categories/Go/"/>
    
    
    <category term="Go" scheme="http://innofang.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>关于英译中的个人技巧</title>
    <link href="http://innofang.github.io/2019/04/18/%E5%85%B3%E4%BA%8E%E8%8B%B1%E8%AF%91%E4%B8%AD%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%8A%80%E5%B7%A7/"/>
    <id>http://innofang.github.io/2019/04/18/%E5%85%B3%E4%BA%8E%E8%8B%B1%E8%AF%91%E4%B8%AD%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%8A%80%E5%B7%A7/</id>
    <published>2019-04-18T15:12:04.000Z</published>
    <updated>2019-04-18T15:30:14.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文例子取自《An Algorithm for Subgraph Isomorphism》。选择论文的原因是我在写这篇文章的时候在翻译外文文献，选的就是这篇论文，于是正好就地取材了。</p><p>因为是专业论文英译中，所以可能包含专业名词，但文本想讲解的是关于英译中的个人技巧，且笔者不是专业翻译人员，关键在于分享，所以只是抛砖引玉。</p><p>阅读本文，可能需要读者要有着良好的语法基础，不过后期笔者会继续优化文章结构与讲解思路。</p></blockquote><span id="more"></span><p>英文与中文最大的一点不同在于，英文中的句子的关键部分在句子的头部，而中文的句子则大部分情况是在句子的尾部。<br>举例来说：</p><ul><li>英文 <code>I stand under the tree with a cup of tea and a dictionary</code></li><li>中文 <code>我拿着一杯茶和一本字典站在树下</code></li></ul><p>从字面意思我们能理解，这句话的关键在于想描述 <code>我</code> 是 <code>站在树下</code> 的，而<code>拿着一杯茶和一本字典</code>则是对我站在树下的一个描述，对比中英文，可以发现，<u>英文会直接把主体部分提前，次要部分后置</u>；而<u>中文则是把次要部分提前，主体部分后置</u>。</p><p>所以因为中文的差异导致我们在翻译的时候容易翻出 “四不像” 的句子。那么我将分享一下我个人关于英译中的<br>小技巧，该方法的关键在于分清楚句子的主要部分和次要部分。下面开始举例讲解</p><hr><blockquote><p>It is well known that isomorphism can be determined by brute-force enumeration. </p></blockquote><p>因为我个人对以上出现的词汇都比较熟悉，所以为了让读者理解我想讲解的技巧，我想先向读者介绍上面出现的生词</p><ul><li><code>isomorphism</code> : 同构，如果两个图同构，说明两个图在结构上可以相同</li><li><code>brute-force</code> : 直译为 ‘暴力’ 即可，但应该不是我们说的打架的暴力，我们用它来描述一种算法的解决方式</li><li><code>enumeration</code> : 迭代</li></ul><p>下面我们来确定上述语句的主要部分和次要部分</p><ul><li><strong>主要部分</strong> <code>It is well known</code></li><li><strong>次要部分</strong> <code>isomorphism can be determined by brute-force enumeration</code></li></ul><p>学过语法的我们应该理解，<code>It</code> 描述的就是后面的次要部分。我们先对句子进行一下修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">It is well known &#123; that isomorphism can be determined [ by brute-force enumeration. ] &#125;</span><br></pre></td></tr></table></figure><p>我只是在次要部分外部加上了一对 <code>&#123; &#125;</code>，并且对次要部分中的 <code>by brute-force enumeration</code> 的外部加了一对<br><code>[ ]</code>，那么我演示下如何翻译，我们先把主要部分翻译出来，再把各个括号内的内容逐个翻译出来，对于你感觉缺省的部分添加对应的括号即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125; 是总所周知的</span><br><span class="line"></span><br><span class="line">&#123; 同构可以被 [] 确定 &#125;</span><br><span class="line"></span><br><span class="line">[ 通过暴力枚举的方式 ]</span><br></pre></td></tr></table></figure><p>为了便于理解，我们再将翻译出来的句子，从下至上把各括号内的翻译往上填入对应的括号内，即</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; 同构可以被 [ 通过暴力枚举的方式 ] 确定 &#125; 是总所周知的</span><br></pre></td></tr></table></figure><p>其实这部分可以不用写出来，我写出来的目的是为了便于展示，其实完全可以通过对应括号，<u>自上而下直接阅读对应括号的内容</u>即可</p><p>然后我们再调整一下，就变成了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同构可以通过暴力枚举的方式来确定，这是总所周知的</span><br></pre></td></tr></table></figure><p>以上就是翻译过程，使用该法，我们不需要反复把后面的句子挪到前面来查看是否通顺，而是直接按照 <code>整体 - 部分</code> 的关系，<br>将句子进行拆分，直接对 <code>部分</code> 进行翻译，然后在最后通过对应括号的方式，直接进行组合，再调整一下就可以完成最终的翻译。</p><p>这是一个很简单的例子，我们再举一个例子</p><hr><blockquote><p> As a first step toward introducing the original part of our algorithm, Section 2 of this paper describes a brute-force enumeration procedure that is actually a depth-first tree-search algorithm.</p></blockquote><p>为了便于划分，我把宾语、定语及各类从句划分为次要部分，对于上述句子，我的划分如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">As a first step &#123; toward introducing the original part of our algorithm &#125;, Section 2 of this paper describes a brute-force enumeration procedure &#123; that is actually a depth-first tree-search algorithm. &#125;</span><br></pre></td></tr></table></figure><p>对主要部分进行翻译，再对括号内的次要部分逐个翻译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">作为 &#123;1&#125; 第一步，本论文的第 2 节描述了一个 &#123;2&#125; 暴力枚举过程</span><br><span class="line"></span><br><span class="line">&#123;1 引入我们算法的原始部分 &#125;</span><br><span class="line"></span><br><span class="line">&#123;2 实际上是一个深度优先树搜索算法 &#125;</span><br></pre></td></tr></table></figure><p>从下至上把各括号内的翻译往上填入对应的括号内，即</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">作为 &#123;1 引入我们算法的原始部分 &#125; 第一步，本论文的第 2 节描述了一个 &#123;2 实际上是一个深度优先树搜索算法 &#125; 暴力枚举过程</span><br></pre></td></tr></table></figure><p>同样的，这里写出来是为了展示，使用从上到下直接阅读对应括号内的内容也是可以的。那么我们再调整一下，即变成了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">作为引入算法原始部分的第一步，本文的第 2 节描述了一种实际上是深度优先树搜索算法的暴力枚举过程</span><br></pre></td></tr></table></figure><hr><p>以上是我举得两个简单例子，在此我进行以下简单总结</p><ul><li><strong>分清楚主要部分和次要部分</strong>，这个可以直接通过语感、先行词或其他结构来进行划分，通常是把从句划分为次要部分，主要部分<u>往往</u>是包含主谓宾的。不过这个还是需要不断的实践。</li><li>如果一个次要部分还包含很多的次要部分，即该句子嵌套了很多结构可以继续划分，那么我对划分用的括号进行约定，我将其分了四个等级，不过私以为嵌套结构很难超过四级，如果超过了这个数量，可以检查一下自己划分的正确性。为了便于记忆可以理解为 <u>括号从大变小，从圆润变尖锐</u><ul><li> 一级 <code>&#123; &#125;</code></li><li> 二级 <code>[ ]</code></li><li> 三级 <code>( )</code></li><li> 四级 <code>&lt; &gt;</code></li></ul></li><li>如果并行的次要部分多余一个，可以用编号进行分辨，如例子 2 所示</li></ul><p>以上是我对英译中实践的一点拙见，个人在尝试过后越发得心应手，对于句子的理解也有了很大的提高，虽然以上举得例子都比较简单，但这只是抛砖引玉。</p><p>在次记录与分享，以便往后回顾。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文例子取自《An Algorithm for Subgraph Isomorphism》。选择论文的原因是我在写这篇文章的时候在翻译外文文献，选的就是这篇论文，于是正好就地取材了。&lt;/p&gt;
&lt;p&gt;因为是专业论文英译中，所以可能包含专业名词，但文本想讲解的是关于英译中的个人技巧，且笔者不是专业翻译人员，关键在于分享，所以只是抛砖引玉。&lt;/p&gt;
&lt;p&gt;阅读本文，可能需要读者要有着良好的语法基础，不过后期笔者会继续优化文章结构与讲解思路。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="English" scheme="http://innofang.github.io/categories/English/"/>
    
    
    <category term="English" scheme="http://innofang.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>不知不觉已经写够了十万行代码</title>
    <link href="http://innofang.github.io/2019/04/15/%E4%B8%8D%E7%9F%A5%E4%B8%8D%E8%A7%89%E5%B7%B2%E7%BB%8F%E5%86%99%E5%A4%9F%E4%BA%86%E5%8D%81%E4%B8%87%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
    <id>http://innofang.github.io/2019/04/15/%E4%B8%8D%E7%9F%A5%E4%B8%8D%E8%A7%89%E5%B7%B2%E7%BB%8F%E5%86%99%E5%A4%9F%E4%BA%86%E5%8D%81%E4%B8%87%E8%A1%8C%E4%BB%A3%E7%A0%81/</id>
    <published>2019-04-15T02:23:00.000Z</published>
    <updated>2020-06-24T06:52:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>大一的时候，那会还是一个刚开始学 C 语言的小白，偶然间看到过一个问题 <code>如何才能写够十万行代码</code>。当时觉得，我这种水平要在毕业前写够十万行代码真的太难了，我也没奢望能写够这么多的代码。</p><span id="more"></span><p>大学四年，转瞬即逝。不知不觉间，我差不多写到了大学（可能）最后一个项目 —— 毕设。现在已是四月中旬，经过一个多月的摸索，一边查阅文献，一边尝试，毕设也算是接近完成。偶然回过头想看看我那些与代码为伴的时光，很好奇这四年到底写了多少行代码？</p><p>我这四年写过的项目包括但不限于算法实践、Android、桌面 GUI、React、Spring Boot、机器学习、深度学习等，没接过外包，写过的代码有 C、C++、Java、Kotlin、Python、JavaScript、Dart，Processing 等，其它还玩过的比如 Lisp、Clojure、Matlab、Shell 等，再比如 HTML、CSS、XML 这些就暂且不算代码了吧，Github 上托管的项目也有 23 个了。于是就想写一个小工具来测一测自己还记得的且 Github 上还维护的项目，那些本地未上传或搬不上台面的项目就不统计了，下面是结果截图</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source/%E4%B8%8D%E7%9F%A5%E4%B8%8D%E8%A7%89%E5%B7%B2%E7%BB%8F%E5%86%99%E5%A4%9F%E4%BA%86%E5%8D%81%E4%B8%87%E8%A1%8C%E4%BB%A3%E7%A0%81/congradulation.png" alt="result" title="1 million code result screenshot"></p><p>总代码行数为 163,747，其中注释有 23,277，空行 29,437，所以有效代码大概为 111,033。这次写的代码计数工具，剔除了 out、build、node_modules、target 等项目生成文件，并且我检查过所有输出的路径，所以最后结果还是比较可信的。</p><p>上面的结果显示，我的 Java 代码占总有效代码行数的 <code>67.90%</code>。我大一进了 Android 实验室之后，就把大部分经历都投入到了 Java 和 Android 开发中，从大一下写到了大三上，差不多两年时间，后期为了跟进前沿技术开始学习了 Kotlin，期间也让我一直都很困惑，自己的技术面过于狭窄。到了大三下开始学习 Web 开发，我没有使用学校教的 SSH 开发，而是另外自学了 Spring Boot 和 React，一是想着拓宽自己的技术面，二来想着框架既然要学为什么不学新的呢？最后使用这两项技术，利用前后台分离的方式，实现了一个 <a href="https://github.com/innofang/jokul">Jokul 电影网站</a>，写完后也算是打开了新世界吧，至少尝试过其它的开发；考研之前两个月还学了 TensorFlow 和 Flask，写了一个手写数字识别的网站 <a href="https://github.com/innofang/what-digit-you-write">What digit you write?</a>；大四上考完研后，与同学合作完成了软件大型实验周的课设，我负责前端部分完成了 <a href="https://github.com/innofang/haetae">Haetae 獬豸</a>，这是一个信访大数据智能管理系统的前端，因为涉及敏感数据，所以后端没有开源，这也算是我大学四年唯一一次真正意义上的协同开发。也正是大三下到大四上的这一年，我的技术面才有了拓展。</p><p>但是，即使写够了十万行代码，我感觉也只是到了另一个阶段而已，并没什么特别的感觉，或者说也只算是成为了入门码农吧。这次考研没有上岸，惆怅了很久，如果前一年去找工作的话，现在应该也是不一样的景象，只是现在心里还是放不下，想了好久还是希望能够读书，学更多自己想学的东西，只可惜现在依旧长路漫漫。</p><blockquote><p>塞翁失马，焉知非福</p></blockquote><p>往后路的还得慢慢走呀。</p><hr><p>对了，安利下这次统计代码用的工具吧 —— <a href="https://github.com/innofang/code-counter">Code Counter</a>，可以通过指定路径或者指定包含多个路径的文件作为输入，统计指定后缀的代码文件，实现了过滤功能，并且能够统计出代码数、空行数、注释行数，基本满足常见需求。</p><p>欢迎使用及反馈 。😁</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;大一的时候，那会还是一个刚开始学 C 语言的小白，偶然间看到过一个问题 &lt;code&gt;如何才能写够十万行代码&lt;/code&gt;。当时觉得，我这种水平要在毕业前写够十万行代码真的太难了，我也没奢望能写够这么多的代码。&lt;/p&gt;</summary>
    
    
    
    <category term="misc" scheme="http://innofang.github.io/categories/misc/"/>
    
    
    <category term="misc" scheme="http://innofang.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>YARN 架构</title>
    <link href="http://innofang.github.io/2019/03/23/YARN-%E6%9E%B6%E6%9E%84/"/>
    <id>http://innofang.github.io/2019/03/23/YARN-%E6%9E%B6%E6%9E%84/</id>
    <published>2019-03-23T06:11:25.000Z</published>
    <updated>2019-05-26T01:55:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Yarn-架构"><a href="#Yarn-架构" class="headerlink" title="Yarn 架构"></a>Yarn 架构</h2><p>YARN 的基本思想是把资源管理和作业调度拆分成单独的守护进程，其拥有一个全局的  ResourceManager（RM) 和对每个应用的 ApplicationMaster（AM)。应用既可以是单个作业，也可以是多个作业。</p><span id="more"></span><p>ResourceManger 和 NodeManager 构成了数据计算框架。ResourceManager 是在系统中的所有应用之间仲裁资源的最终权限。NodeManager 是每台机器的框架代理，负责容器（Container)的管理，监视其资源的使用情况（CPU、内存、磁盘、网络），并向 ResourceManger 或者调度器（Scheduler）汇报这些情况。</p><p>实际上，每个应用程序的 ApplicationMaster 是一个特定于框架的库，其任务是协调来自 ResourceManager 的资源，并与 NodeManager 一起执行和监视这些任务。</p><p><img src="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/yarn_architecture.gif"></p><p>ResourceManager 由两部分组成：Scheduler 和 ApplicationManager</p><p>Scheduler 会根据容量、队列等约束，负责将资源分配给各种正在运行的应用。在某种意义上，Scheduler 就是一个纯粹的调度器而已，它不对应用进行状态的监控或跟踪。此外，它不会保证因为应用错误或硬件故障而重启失败的任务。Scheduler 根据应用的资源需求来执行其调度功能。它基于资源容器的抽象概念执行调度功能，该资源容器包含内存、CPU、磁盘、网络等。</p><p>Scheduler 具有一个可插入策略，该策略负责在不同的队列、应用等之间划分集群资源。当前诸如 <a href="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/CapacityScheduler.html">CapacityScheduler</a> 和 <a href="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/FairScheduler.html">FairScheduler</a> 就是一些插件的示例。</p><p>ApplicationManager 负责接收作业提交，协商执行特定于应用的 ApplicationMaster 的第一个容器，并提供在失败时重启 ApplicationMaster 容器的服务。每个应用的 ApplicationMaster 负责调度来自 Scheduler 的合适的资源容器，跟踪它们的状态并监视其进度。</p><p>Hadoop 2.x 中的 MapReduce 与以前的稳定版本（Hadoop 1.x）保持 API 兼容性。这意味着所有 MapReduce 作业都应该在 YARN 上保持不变，只需重新编译即可。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>Client</p><ul><li>提交作业</li><li>查询作业的运行进度</li><li>杀死作业</li></ul></li><li><p>ResuourceManager</p><ul><li>整个集群同一时间提供服务的 ResourceManager 只有一个</li><li>负责集群资源的统一管理和调度</li><li>处理客户端的请求（提交作业、杀死作业等）</li><li>监控 NodeManager，当 NodeManager出现故障时，NodeManager 上的运行的任务需要询问 ApplicationMaster 如何处理</li></ul></li><li><p>NodeManager </p><ul><li>整个集群有多个</li><li>负责节点本身的资源管理</li><li>定期向 ResourceManager 汇报本节点的资源使用情况</li><li>接收来自 ResourceManager 的命令（重启 Container 等）</li><li>处理来自 ApplicationMaster 的命令</li></ul></li><li><p>ApplicationMaster</p><ul><li>每个应用程序对应一个 ApplicaitonMaster</li><li>负责应用程序的管理</li><li>为应用程序向 ResourceManager 申请资源并分配给内部的 Task</li><li>需要与 NodeManager 进行通信（启动/停止 Task）</li><li>Task 运行在 Container 中，ApplicationMaster 也运行在 Container 中</li></ul></li><li><p>Container</p><ul><li>封装了 CPU、Memory 等资源的一个容器</li><li>是一个任务运行环境的抽象</li></ul></li></ul><h2 id="Refernece"><a href="#Refernece" class="headerlink" title="Refernece"></a>Refernece</h2><p><a href="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/YARN.html">Apache Hadoop YARN</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Yarn-架构&quot;&gt;&lt;a href=&quot;#Yarn-架构&quot; class=&quot;headerlink&quot; title=&quot;Yarn 架构&quot;&gt;&lt;/a&gt;Yarn 架构&lt;/h2&gt;&lt;p&gt;YARN 的基本思想是把资源管理和作业调度拆分成单独的守护进程，其拥有一个全局的  ResourceManager（RM) 和对每个应用的 ApplicationMaster（AM)。应用既可以是单个作业，也可以是多个作业。&lt;/p&gt;</summary>
    
    
    
    <category term="Hadoop" scheme="http://innofang.github.io/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="http://innofang.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>HDFS 架构</title>
    <link href="http://innofang.github.io/2019/03/22/HDFS-%E6%9E%B6%E6%9E%84/"/>
    <id>http://innofang.github.io/2019/03/22/HDFS-%E6%9E%B6%E6%9E%84/</id>
    <published>2019-03-22T11:39:15.000Z</published>
    <updated>2019-03-28T11:44:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HDFS-架构"><a href="#HDFS-架构" class="headerlink" title="HDFS 架构"></a>HDFS 架构</h2><p>HDFS 即分布式文件系统（Hadoop Distributed File System)。HDFS 具有高容错性，且能运行在低廉的硬件上。HDFS 提供对应用程序数据的高吞吐量访问，适用于具有大数据集的应用程序。</p><span id="more"></span><h2 id="NameNode-和-DataNode"><a href="#NameNode-和-DataNode" class="headerlink" title="NameNode 和 DataNode"></a>NameNode 和 DataNode</h2><p>HDFS 具有 Master/Slave 架构，根据名字可以联想到古时候<code>奴隶主</code>和<code>奴隶</code>的关系。一个 Hadoop 集群由单个 NameNode 和多个 DataNode 组成。</p><ul><li>NameNode <ul><li>负责客户端请求的响应</li><li>负责元数据的管理，比如文件名称、副本系数、数据块存放的位置等</li></ul></li><li>DataNode <ul><li>通常是集群中每个节点一个，存储文件对应的数据块（Block)</li><li>定期向 NameNode 发送心跳信息，汇报本身及其所有的 block 信息  </li></ul></li></ul><p>HDFS 暴露了一个文件系统并允许用户数据存储在这些文件中。此外，一个文件会把被<strong>拆分</strong>到一个或多个数据块（block）中，这些数据块就存储在一系列 DataNode 中。NameNode 则是执行诸如打开、关闭、重命名文件和文件夹等文件系统操作，并且它还决定了数据块到 DataNode 的映射，即哪个数据块在哪个 DataNode 中，是由 NameNode 来决定的。DataNode 负责提供来自文件系统客户机的读写请求，还会根据来自 NameNode 的指令来执行对数据块的创建、删除和复制。 </p><p><strong>PS</strong> 文件拆分的依据是由底层的 blocksize 来决定。如果 blocksize 定义为 128M，那么对于一个 130M 的文件就会被拆分成两个分别为 128M 和 2M 的文件。</p><p><img src="http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/images/hdfsarchitecture.png"></p><p>NameNode 和 DataNode 可以运行在廉价的机器上，通常是运行在具有 GNU/Linux 操作系统的机器上。HDFS 由 Java 语言构建，所以任何支持 Java 的机器都可以运行 NameNode 和 DataNode。</p><p>一个典型的部署方式是<strong>一个专有机器运行 NameNode，其它每台机器运行一个 DataNode</strong>。当然，并不排除一台机器运行多个 DataNode，但是在实际情况中很少发生。</p><h2 id="文件系统命名空间"><a href="#文件系统命名空间" class="headerlink" title="文件系统命名空间"></a>文件系统命名空间</h2><p>HDFS 支持传统的层级文件结构。用户或应用可以创建文件夹并在文件夹内存储文件。文件系统命名空间与其它大多数现存的文件一同类似，支持文件的创建、删除，移动和重命名。</p><p>NameNode 维护着文件系统命名空间。任何对命名空间或对它的属性的改变都会被 NameNode 记录下来。应用可以指定 HDFS 应当维护的文件副本系数。文件副本系数也叫做文件的<strong>副本因子</strong>（Replication Factor），这些信息由 NameNode 进行存储。</p><h2 id="数据副本"><a href="#数据副本" class="headerlink" title="数据副本"></a>数据副本</h2><p>HDFS 旨在可靠地在大型集群中跨机器存储大文件，将文件存储为一系列数据块中。为了实现容错，一个文件的数据块会被复制多份。数据块大小和副本因子可以根据文件进行配置。</p><p>所有数据块中除了最后一个数据块之外的大小都是相同的。</p><p>应用可以指定文件的副本数。副本因子可以在文件创建时指定并可以在以后进行更改。HDFS 中的文件是一次写入的（除非追加和截断），并且任何时候只能有一个 Writer，并不支持多并发。</p><p>NameNode 会根据数据块的副本作出决定。它会定期接收集群中每个 DataNode 的心跳（Hearbeat）和数据块报告（Blockreport）。收到心跳意味着这个 DataNode 是正常工作的。数据块报告则包含 DataNode 上所有数据块的列表。</p><p><img src="http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/images/hdfsdatanodes.png"></p><h2 id="HDFS-优缺点"><a href="#HDFS-优缺点" class="headerlink" title="HDFS 优缺点"></a>HDFS 优缺点</h2><ul><li>数据冗余、硬件容错</li><li>适合存储大文件</li><li>处理流式的数据访问</li><li>可构建在廉价机器上</li></ul><p>缺点：</p><ul><li>低延迟的数据访问</li><li>不适合小文件存储</li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html">HDFS Architecture</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;HDFS-架构&quot;&gt;&lt;a href=&quot;#HDFS-架构&quot; class=&quot;headerlink&quot; title=&quot;HDFS 架构&quot;&gt;&lt;/a&gt;HDFS 架构&lt;/h2&gt;&lt;p&gt;HDFS 即分布式文件系统（Hadoop Distributed File System)。HDFS 具有高容错性，且能运行在低廉的硬件上。HDFS 提供对应用程序数据的高吞吐量访问，适用于具有大数据集的应用程序。&lt;/p&gt;</summary>
    
    
    
    <category term="Hadoop" scheme="http://innofang.github.io/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="http://innofang.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>正则中关于环视（lookaround）的小例子</title>
    <link href="http://innofang.github.io/2018/07/12/%E6%AD%A3%E5%88%99%E4%B8%AD%E5%85%B3%E4%BA%8E%E7%8E%AF%E8%A7%86%EF%BC%88lookaround%EF%BC%89%E7%9A%84%E5%B0%8F%E4%BE%8B%E5%AD%90/"/>
    <id>http://innofang.github.io/2018/07/12/%E6%AD%A3%E5%88%99%E4%B8%AD%E5%85%B3%E4%BA%8E%E7%8E%AF%E8%A7%86%EF%BC%88lookaround%EF%BC%89%E7%9A%84%E5%B0%8F%E4%BE%8B%E5%AD%90/</id>
    <published>2018-07-12T03:34:06.000Z</published>
    <updated>2019-03-28T00:56:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>刚开始学正则表达式时，环视（lookaround）经常会给初学者造成一定的困扰。但如果能抓住其中的要点，那么这种困惑就会立刻消失。</p><p>环视（lookaround）其实分为两个部分：前瞻（lookahead）和后视（lookbehind）。</p><blockquote><p>注：这里的翻译是基于我个人的理解，其它地方可能还有别的叫法</p></blockquote><span id="more"></span><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>我们在学一个东西时，我们需要去考虑一下它的使用场景，如果没有一个明确的目的的话，学到的知识也不会很深刻。</p><p>考虑这样一个场景，我们在做用户登录或注册校验时，会去判断用户输入的密码是否合法，比如，现在对于用户输入的密码，我们有如下几点要求：</p><ul><li>至少有 6 个字符</li><li>包含一个小写字母</li><li>包含一个大写字母</li><li>包含一个数字</li></ul><p>如果不使用正则表达式的话，估计大部分人都会用 if 语句去逐个判断每个要求是否符合。这样的代码初学时也没有少写过，不能说这样写的方式有什么不对，但总归是没有那么优雅。</p><p>那么有没有更好的解决方案呢？可能大部分人也会想到用正则表达式，但如果对正则表达式的了解并不是很深入的话，面对这样的需求，可能会遇到这样一个问题：怎么判断字符串中至少含有一个大小写字母和数字？如果你动手去写的话，你就会发现你没法保证写出来的表达式不考虑顺序。</p><h1 id="环视（lookaround）的简单讲解"><a href="#环视（lookaround）的简单讲解" class="headerlink" title="环视（lookaround）的简单讲解"></a>环视（lookaround）的简单讲解</h1><p>那么如何解决这个问题？如何能够通过正则表达式，在不考虑字符出现顺序的情况下判断密码是否至少包含一个大小写字母和数字？</p><p>这就将用到我们接下来要介绍的关于环视（lookaround）的两个部分：前瞻（lookahead）和后视（lookbehind）。</p><p>当我们在使用前瞻（lookahead）和后视（lookbehind）时，正则表达式在处理字符串的过程中，是不会在字符串上移动的，也就是说我们可以使用这种技术或者说手段来提前判定字符串是否符合一些情况。</p><p>那么，在继续深入讲解之前，我们先来学习一下 4 种环视（lookaround）的写法，这里假设你已经具备了基本的正则表达式语法知识。</p><table><thead><tr><th>环视（lookaround）</th><th>名称</th><th>做了什么</th></tr></thead><tbody><tr><td>(?=foo)</td><td>前瞻（lookahead）</td><td>判断紧跟在字符串中当前位置后面的内容是否<strong>是</strong> <em>foo</em></td></tr><tr><td>(?!foo)</td><td>否定前瞻（negative lookahead）</td><td>判断紧跟在字符串中当前位置后面的内容是否<strong>不是</strong> <em>foo</em></td></tr><tr><td>(?&lt;=foo)</td><td>后视（lookbehind）</td><td>判断紧跟在字符串中当前位置前面的内容是否<strong>是</strong> <em>foo</em></td></tr><tr><td>(?&lt;!foo)</td><td>否定后视（negative lookbehind）</td><td>判断紧跟在字符串中当前位置前面的内容是否<strong>不是</strong> <em>foo</em></td></tr></tbody></table><blockquote><p>注：上面的 <em>foo</em> 可以替换为正则表达式，功能将会更强大</p></blockquote><h1 id="环视（lookaround）的简单示例"><a href="#环视（lookaround）的简单示例" class="headerlink" title="环视（lookaround）的简单示例"></a>环视（lookaround）的简单示例</h1><p>理解不了上面的介绍？那么为了能先让读者简单理解四种环视的写法的作用，我先讲个简单例子，现在先假设这个当前的字符串是 <em>foobarbarfoo</em>：</p><table><thead><tr><th>例子</th><th>描述</th></tr></thead><tbody><tr><td>bar(?=bar)</td><td>匹配第一个 <em>bar</em>（因为第一个 <em>bar</em> 后面<strong>紧跟着</strong>一个 <em>bar</em>）</td></tr><tr><td>bar(?!bar)</td><td>匹配第二个 <em>bar</em>（因为第二个 <em>bar</em> 后面<strong>没有紧跟着</strong>一个 <em>bar</em>）</td></tr><tr><td>(?&lt;=foo)bar</td><td>匹配第一个 <em>bar</em>（因为第一个 <em>bar</em> 前面<strong>紧跟着</strong> <em>foo</em>）</td></tr><tr><td>(?&lt;!foo)bar</td><td>匹配第二个 <em>bar</em>（因为第二个 <em>bar</em> 前面<strong>没有紧跟着</strong> <em>foo</em>）</td></tr></tbody></table><p>在上面的例子中，都着重强调了 “紧跟着” 这几个字，这是相对于括号之外的那个 <em>bar</em> 字符串而言的，即要判断紧挨着这个字符串 <em>bar</em> 的前后是否符合要求。</p><h1 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h1><p>现在环视（lookaround）的概念以及简单的示例已经介绍完了，那么再回到我们开头讲的那个例子：如何用正则表达式去判断用户输入的密码是否符合要求？</p><p>我们先把几个需求逐步解决。首先第一个：至少有 6 个字符。这个很好解决，保证密码内容是由大小写字母及数字组成的，并且长度至少为 6。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[A-Za-z0-9]&#123;6,&#125;$</span><br></pre></td></tr></table></figure><p>简单解释一下吧，<code>^</code> 用来匹配开头，<code>$</code>用来匹配结尾，<code>[A-Za-z0-9]</code>表示要匹配的内容是由大小写字母及数字组成的，<code>&#123;6,&#125;</code>表示长度至少为6。</p><p>那么第二个要求：包含一个小写字母。前面我们在描述那几个例子时，都强调了要<strong>紧跟在字符串当前位置</strong>，那么可能有读者会困惑，既然都这样要求了，那么就无法不强调一个先后顺序了，但是事实是，我们可以通过修改表达式来达到这个目的，修改原来的正则表达式，满足现在的要求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(?=.*[a-z])[A-Za-z0-9]&#123;6,&#125;$</span><br></pre></td></tr></table></figure><p>与之前用字符串的写法不同，这里使用了一个表达式： <code>.*[a-z]</code>。<code>.</code>用来匹配任何字符，<code>*</code>即匹配 0 个到多个字符，<code>[a-z]</code>即表示小写字母，这个写法表示，后面的字符串中至少要有一个小写字母，而小写字母的前面有什么，不需要考虑，即只要满足一堆字符串后面有一个小写字母即可。注意这里只是一个判断，正则表达式在环视扫描时，不会在字符串上移动，如果没有符合要求的字符，那么就会结束扫描。</p><p>当然这是贪婪（greedy）模式的写法，也可以使用懒惰（lazy）模式的写法： <code>(?=.*?[a-z])</code>，即在 <code>*</code> 后面加一个 <code>?</code> ，这样只要有第一个符合要求的字符出现，就会停止匹配，然后继续扫描。如果你不理解什么是贪婪（greedy）模式和懒惰（lazy）模式，可以先跳过这一段，文末会有个简单的解释。</p><p>后面两个要求：包含一个大写字母和包含一个数字。原理同第二个要求，这里就直接给出最终实现了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9]&#123;6,&#125;$</span><br></pre></td></tr></table></figure><p>值得注意的是，<code>(?=.*?[A-Z])</code>、<code>(?=.*?[a-z])</code>、<code>(?=.*?[0-9])</code>这三个表达式，会先后进行扫描判断，只要有不符合的就停止，匹配失败。正则表达式在扫描时不会在字符串上移动，所以这三个表达式的写法并没有顺序。</p><p>以上，就解决了我们本文开头提出的问题，有了正则表达式，你就可以使用你喜欢或者你正在用的编程语言去进行尝试了。</p><p>本文的灵感来自 <a href="https://www.codewars.com/">CodeWars</a> 的 <a href="https://www.codewars.com/kata/52e1476c8147a7547a000811/train/python">Regex Password Validation</a></p><p>解决方案也可以参考 <a href="https://github.com/InnoFang/Algorithms/blob/master/codewars/python/5%20kyu/Regex%20Password%20Validation/Solution.py">我的实现</a></p><h1 id="关于贪婪（greedy）模式和懒惰（lazy）模式"><a href="#关于贪婪（greedy）模式和懒惰（lazy）模式" class="headerlink" title="关于贪婪（greedy）模式和懒惰（lazy）模式"></a>关于贪婪（greedy）模式和懒惰（lazy）模式</h1><ul><li><strong>贪婪</strong>意味着匹配最长的字符串</li><li><strong>懒惰</strong>意味着匹配最短的字符串</li></ul><p>举例来说，给定一个字符串 <em>InnoFang</em>。</p><ul><li>对贪婪模式来说，正则表达式为 <code>I.*n</code>，匹配文本输出为 <em><strong>InnoFan</strong>g</em></li><li>对懒惰模式来说，正则表达式为 <code>I.*?n</code>，匹配文本输出为 <em><strong>In</strong>noFang</em></li></ul><p>两者在写法上的区别，就是懒惰模式相比贪婪模式会在诸如 <code>*</code>、<code>+</code>、<code>?</code> 等限定匹配数量的符号后面加一个 <code>?</code> 。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.rexegg.com/regex-lookarounds.html">Mastering Lookahead and Lookbehind</a></li><li><a href="https://stackoverflow.com/questions/2973436/regex-lookahead-lookbehind-and-atomic-groups">Regex lookahead, lookbehind and atomic groups</a> </li><li><a href="https://stackoverflow.com/questions/2301285/what-do-lazy-and-greedy-mean-in-the-context-of-regular-expressions">What do ‘lazy’ and ‘greedy’ mean in the context of regular expressions?</a> </li></ul><p><a href="https://juejin.im/post/5b4a9539f265da0f521de210"><img src="https://badge.juejin.im/entry/5b4a97b25188251af86bdcc1/likes.svg?style=plastic"></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;刚开始学正则表达式时，环视（lookaround）经常会给初学者造成一定的困扰。但如果能抓住其中的要点，那么这种困惑就会立刻消失。&lt;/p&gt;
&lt;p&gt;环视（lookaround）其实分为两个部分：前瞻（lookahead）和后视（lookbehind）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：这里的翻译是基于我个人的理解，其它地方可能还有别的叫法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="正则表达式" scheme="http://innofang.github.io/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
    <category term="正则表达式" scheme="http://innofang.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式(十八):访问者模式</title>
    <link href="http://innofang.github.io/2018/05/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%81%E5%85%AB-%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://innofang.github.io/2018/05/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%81%E5%85%AB-%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2018-05-07T15:08:57.000Z</published>
    <updated>2018-05-07T15:11:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Visitor（访问者）"><a href="#Visitor（访问者）" class="headerlink" title="Visitor（访问者）"></a>Visitor（访问者）</h1><p>访问者模式是行为型设计模式的一种。访问者模式结构看起来要比其他的设计模式的结构要<br>复杂一些，但其实如果能找到一个合理的例子来解释这种模式的话，其实是非常好理解的。</p><span id="more"></span><p>在讲解之前先申明访问者模式的结构和定义。</p><p><img src="https://raw.githubusercontent.com/InnoFang/DesignPatterns/master/uml/visitor.png"></p><ul><li>Visitor :  接口或抽象类，内部定义了对每一个元素（Element）访问的性为，它的参数就是可以访问的元素，它的方法个数理论上来讲与元素个数是一样的，因此，访问者模式要求元素的类族要稳定，如果要频繁的修改 Visitor 接口，那么说明不适合使用访问者模式</li><li>ConcreteVisitor : 具体的访问者，需要给出对每个元素类访问时所产生的具体行为</li><li>Element : 元素接口或抽象类，定义了一个接收访问者（accept）的方法，意指每个元素都要能被访问者访问</li><li>ElementA, ElementB : 具体元素类，其具体的实现，通常情况下是使用访问者提供的访问该元素类的方法</li><li>ObjectStructure : 对象结构，是一个抽象表述，内部管理了元素集合，并且可以迭代这些元素供访问者访问</li></ul><h1 id="访问者模式的简单实现"><a href="#访问者模式的简单实现" class="headerlink" title="访问者模式的简单实现"></a>访问者模式的简单实现</h1><p>如果只是简单的看类图及其描述的话，多半是要晕的。但是设计模式的灵感很多时候都来自于生活，那么我们来结合实际情况来阐述一下这个访问者模式</p><p>公司在招聘的时候，会根据申请人的不同进行不同的考量，比如应届生会更重视学分绩点或者专业基础，社招人员会更重视项目经验与实践能力。而申请者申请工作的时候都要投递简历，面试的时候又会有诸如小组组长，技术总监，hr等几轮面试，而且考察的点都不一样</p><p>这其实是一个很好的访问者模式的模型，我们把申请者比作元素（Element），访问者就是面试官，我们作为申请者需要将自己的简历给面试官看，这就是元素（Element）给访问者（Visitor）提供的 accept 方法，面试管再查看建立时则是通过自身的 visit 方法进行筛选，那么现在将申请者的简历收集起来就相当于一个人才市场，也就是我们的对象结构（ObjectStructure），它在内部持有申请者的简历，那么每一个来访问的面试官都可以用自身的 visit 方法，按照自己的标准来对每一份建立进行不同的考量，期望筛选出符合标准的申请者。</p><p>那么我们就用代码来实现以下这个案例吧</p><p>首先，自然是定义一个面试申请者（Applicant）和面试官（Interviewer）的接口</p><blockquote><p>申请者接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 面试申请者接口，只有一个抽象方法用来接受面试官的考核</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Applicant</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">accept</span><span class="params">(Interviewer visitor)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>面试官接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 面试官接口，分对象考核学生和工程师</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Interviewer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">(Student student)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">(Engineer engineer)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就可以定义学生和工程师实体了，对于学生而言会有 GPA 和专业（major），而工程师的话则是工作经验和项目数量</p><blockquote><p>学生实体类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 申请者：学生，具有姓名，gpa，专业属性，并实现 accept 方法，用于接收面试官审核</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Applicant</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> gpa;</span><br><span class="line">    <span class="keyword">private</span> String major;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">double</span> gpa, String major)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.gpa = gpa;</span><br><span class="line">        <span class="keyword">this</span>.major = major;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(Interviewer visitor)</span> </span>&#123;</span><br><span class="line">        visitor.visit(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter and setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>工程师实体</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 申请者：工程师，具有姓名，工作经验，项目数量，并实现 accept 方法，用于接收面试官审核</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Engineer</span> <span class="keyword">implements</span> <span class="title">Applicant</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> workExperience;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> projectNumber;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Engineer</span><span class="params">(String name, <span class="keyword">int</span> workExperience, <span class="keyword">int</span> projectNumber)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.workExperience = workExperience;</span><br><span class="line">        <span class="keyword">this</span>.projectNumber = projectNumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(Interviewer visitor)</span> </span>&#123;</span><br><span class="line">        visitor.visit(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter and setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，accept 方法基本都是接收一个访问者然后调用它自身的 visit 方法，因为具体怎么“访问”是由访问者自身决定的</p><p>那么面试官我们也定义 Leader 和 HR 两种，他们在考核的时候也是要对学生和工程师进行不同的考量，比如对于 Leader 而言，考量学生时他想考察的是 GPA，而对工程师的话则是项目数量，对于 HR 而言，考察学生时考察的是专业，而工程师则是工作经验。当然这里只是举个例子。</p><blockquote><p>Leader</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对于 Leader 而言，考量学生时他想考察的是 GPA，而对工程师的话则是项目数量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Leader</span> <span class="keyword">implements</span> <span class="title">Interviewer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Student  &quot;</span> + student.getName() + <span class="string">&quot;&#x27;s gpa is &quot;</span> + student.getGpa());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(Engineer engineer)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Engineer  &quot;</span> + engineer.getName() + <span class="string">&quot;&#x27;s number of projects is &quot;</span> + engineer.getProjectNumber());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>HR</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对于 HR 而言，考察学生时考察的是专业，而工程师则是工作经验</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hr</span> <span class="keyword">implements</span> <span class="title">Interviewer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Student  &quot;</span> + student.getName() + <span class="string">&quot;&#x27;s major is &quot;</span> + student.getMajor());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(Engineer engineer)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Engineer  &quot;</span> + engineer.getName() + <span class="string">&quot;&#x27;s work experience is &quot;</span> + engineer.getWorkExperience() + <span class="string">&quot; year&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么申请者们如何更好的让面试管审核自己呢？现在最普遍的就是往人才市场投简历，那么我们就模拟一个人才市场，内部维护一个申请者的列表，并实现一个可以接收面试官查看的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 人才市场</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LaborMarket</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    List&lt;Applicant&gt; applicants = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        applicants.add(<span class="keyword">new</span> Student(<span class="string">&quot;Wang&quot;</span>,  <span class="number">3.2</span>, <span class="string">&quot;Computer Science&quot;</span>));</span><br><span class="line">        applicants.add(<span class="keyword">new</span> Student(<span class="string">&quot;Lee&quot;</span>,  <span class="number">3.4</span>, <span class="string">&quot;Network Engineer&quot;</span>));</span><br><span class="line">        applicants.add(<span class="keyword">new</span> Student(<span class="string">&quot;Chan&quot;</span>,  <span class="number">3.4</span>, <span class="string">&quot;Computer Science&quot;</span>));</span><br><span class="line">        applicants.add(<span class="keyword">new</span> Engineer(<span class="string">&quot;Bob&quot;</span>,  <span class="number">4</span>, <span class="number">15</span>));</span><br><span class="line">        applicants.add(<span class="keyword">new</span> Engineer(<span class="string">&quot;Tony&quot;</span>,  <span class="number">3</span>, <span class="number">10</span>));</span><br><span class="line">        applicants.add(<span class="keyword">new</span> Engineer(<span class="string">&quot;Jim&quot;</span>,  <span class="number">6</span>, <span class="number">20</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showApplicants</span><span class="params">(Interviewer visitor)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Applicant applicant : applicants) &#123;</span><br><span class="line">            applicant.accept(visitor);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只是简单的模拟了一下，而接受面试官去审核各个面试者的方法实现则是遍历每个申请者，调用他们的 accept 方法，其实这就<strong>相当于是让面试官去看自己的简历</strong></p><p>那么，接下来来测试一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LaborMarket laborMarket = <span class="keyword">new</span> LaborMarket();</span><br><span class="line">System.out.println(<span class="string">&quot;===== Round 1: Leader =====&quot;</span>);</span><br><span class="line">laborMarket.showApplicants(<span class="keyword">new</span> Leader());</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;===== Round 2: HR =====&quot;</span>);</span><br><span class="line">laborMarket.showApplicants(<span class="keyword">new</span> Hr());</span><br></pre></td></tr></table></figure><p>运行，输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">===== Round 1: Leader =====</span><br><span class="line">Student  Wang&#x27;s gpa is 3.2</span><br><span class="line">Student  Lee&#x27;s gpa is 3.4</span><br><span class="line">Student  Chan&#x27;s gpa is 3.4</span><br><span class="line">Engineer  Bob&#x27;s number of projects is 15</span><br><span class="line">Engineer  Tony&#x27;s number of projects is 10</span><br><span class="line">Engineer  Jim&#x27;s number of projects is 20</span><br><span class="line">===== Round 2: HR =====</span><br><span class="line">Student  Wang&#x27;s major is Computer Science</span><br><span class="line">Student  Lee&#x27;s major is Network Engineer</span><br><span class="line">Student  Chan&#x27;s major is Computer Science</span><br><span class="line">Engineer  Bob&#x27;s work experience is 4 year</span><br><span class="line">Engineer  Tony&#x27;s work experience is 3 year</span><br><span class="line">Engineer  Jim&#x27;s work experience is 6 year</span><br></pre></td></tr></table></figure><p>其实逻辑并不复杂，而访问者模式也让我们能够将面试官分别考量不同的申请者的逻辑变得更加的清晰，可以看到我们并没有写一行 if 语句去判断申请者和面试官，这样做的好处就是这个功能能够更好的扩展和维护，结构更加清晰并且灵活性也很高</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>正如我前面说的，访问者模式的有点很明显，但是我们仍然要考虑一个问题，如果我的功能真的很简单，或许真的就是一行 if 语句就能解决，那么这个模式还有使用的必要吗？<br>如果你有这样的疑问，那么我觉得就没有必要这样用，不要为了使用设计模式而使用设计模式，这样只会让简单的问题复杂化，只有当你真正需要它的时候，你才能体会到访问者模式的价值</p><p>那么，再次总结下访问者模式的优缺点</p><p>优点：</p><ul><li>符合单一职责原则，每个角色的职责能够明确的分开</li><li>可扩展性强</li><li>可维护</li><li>更加灵活</li></ul><p>缺点：</p><ul><li>有关具体元素时修改成本大</li><li>对访问者显示了具体元素的细节，不符合迪米特原则</li><li>为了能够做到访问者“区别对待”具体元素，没有依赖抽象类，而是使用了具体元素类，不符合依赖倒置原则</li></ul><p>END</p><hr><p><a href="https://github.com/InnoFang/DesignPatterns/tree/master/src/io/innofang/visitor">源码地址</a>          </p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Visitor（访问者）&quot;&gt;&lt;a href=&quot;#Visitor（访问者）&quot; class=&quot;headerlink&quot; title=&quot;Visitor（访问者）&quot;&gt;&lt;/a&gt;Visitor（访问者）&lt;/h1&gt;&lt;p&gt;访问者模式是行为型设计模式的一种。访问者模式结构看起来要比其他的设计模式的结构要&lt;br&gt;复杂一些，但其实如果能找到一个合理的例子来解释这种模式的话，其实是非常好理解的。&lt;/p&gt;</summary>
    
    
    
    <category term="设计模式" scheme="http://innofang.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="http://innofang.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>如何借助Github进行协同开发</title>
    <link href="http://innofang.github.io/2018/03/17/%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9Github%E8%BF%9B%E8%A1%8C%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91/"/>
    <id>http://innofang.github.io/2018/03/17/%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9Github%E8%BF%9B%E8%A1%8C%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91/</id>
    <published>2018-03-17T08:51:56.000Z</published>
    <updated>2020-06-24T06:55:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>平常都是自己一个人在开发，一直都没有机会接触协同开发，平常使用 Github 时也就是简单的 add, commit, push，并由体会到 Git 带给我们<br>更多的好处，那么如何借助 Github 进行协同开发，现在来简单的尝试一下</p><span id="more"></span><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>如果你想只是想简单的尝试下协同开发，而不像基于参与真正的开发，那么创建一个测试项目来实验一下是最合适不过的了</p><p>首先打开 Github ，接着点击 New repository，创建一个空项目，简便起见，我们在创建新项目时顺便勾选 <code>Initialize this repository with a README</code> 这个选项，这样我们的项目至少还有一个 README 文件，而不至于什么也没有</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source//%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9Github%E8%BF%9B%E8%A1%8C%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91/new_repository.jpg"> </p><p>为了便于后文进行描述，这里约定</p><ul><li>把拥有原始仓库的操作者称为 <em><strong>master</strong></em></li><li>把 fork 了原始项目的操作者称为 <em><strong>follower</strong></em></li></ul><p>那么现在 <em><strong>master</strong></em> 已经创建好仓库了，接着 <em><strong>follower</strong></em> 也想和 <em><strong>master</strong></em> 一起开发这个项目，那么 <em><strong>follower</strong></em> 要做的就是在 Github 上 fork <em><strong>master</strong></em> 的这个项目</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source//%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9Github%E8%BF%9B%E8%A1%8C%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91/fork.jpg"></p><p>那么 <em><strong>follower</strong></em> 的 Github 上也有了一份这个项目的副本</p><p>接下来 <em><strong>follower</strong></em> 把项目 clone 到本地，复制项目的 ssh</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source//%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9Github%E8%BF%9B%E8%A1%8C%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91/clone.jpg"></p><p>打开 Git Bash，输入下面的命令 (请用复制的 ssh 替换掉 <follower ssh>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> &lt;follower ssh&gt;</span><br></pre></td></tr></table></figure><p>稍等片刻，即可进行项目的开发了</p><h1 id="对本地项目进行更新"><a href="#对本地项目进行更新" class="headerlink" title="对本地项目进行更新"></a>对本地项目进行更新</h1><p><em><strong>follower</strong></em> 已经把项目 clone 到本地了，这里要注意的就是，每次进行开发时要保持跟 <em><strong>master</strong></em> 项目一样的进度，也就是把 <em><strong>master</strong></em> 的代码更新到本地</p><p>那么在更新之前， <em><strong>follower</strong></em> 要做的就是添加 <em><strong>master</strong></em> 的远端连接，这里需要 <em><strong>master</strong></em> 远端的 ssh，操作参考上一节，命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add upstream &lt;master ssh&gt;</span><br></pre></td></tr></table></figure><p>添加成功过后就可以更新本地代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote update</span><br></pre></td></tr></table></figure><p>接着合并 master 的分支，（这里的 master 是指 upstream 的 master， 即远端的 master，而不是本地的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge upstream/master</span><br></pre></td></tr></table></figure><p>现在 <em><strong>follower</strong></em> 本地的代码已经更新完了，接下来就是进行项目的开发</p><h1 id="对项目进行开发"><a href="#对项目进行开发" class="headerlink" title="对项目进行开发"></a>对项目进行开发</h1><p>因为 <em><strong>follower</strong></em> 是作为 <em><strong>master</strong></em> 合作者的，所以 <em><strong>follower</strong></em> 在开发时最好能建立一个分支，然后在分支上进行开发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git banch dev</span><br><span class="line">$ git checkout dev</span><br></pre></td></tr></table></figure><p>上面两个命令分别是创建一个 dev 分支，并且把本地分支切换至 dev 分支</p><p>也可以使用下面的命令，创建加切换一起完成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b dev</span><br></pre></td></tr></table></figure><p>现在就已经到 dev 分支上了，那么我们就在这个分支上进行开发，因为项目很简单，所以简单修改下 README 即可，接着就可以 add、commit、push 三部曲更新 <em><strong>follower</strong></em> 的代码了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;:memo: update&quot;</span></span><br><span class="line">$ git push -u origin dev</span><br></pre></td></tr></table></figure><p>这时候 <em><strong>follower</strong></em> 进入 Github 就会发现在该项目下多了一行下面的东西</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source//%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9Github%E8%BF%9B%E8%A1%8C%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91/compare.jpg"></p><p>点击 <code>Compare &amp; pull request</code> ，然后填写一些必要信息再点击 <code>Create pull request</code> 即可</p><p>至此， <em><strong>follower</strong></em> 的代码编写与提交就算完成，接下来就是 <em><strong>master</strong></em> 的任务了</p><h1 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h1><p>此时 <em><strong>master</strong></em> 在 Github 就可以看到在项目顶部栏上多了一个 pull request</p><p><img src="https://cdn.jsdelivr.net/gh/innofang/jotter/source//%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9Github%E8%BF%9B%E8%A1%8C%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91/one_pull_request.jpg"></p><p>那么点击去找到这个 pull request 请求就可以看到下面的信息</p><p><img src="https://github.com/InnoFang/StudyNotes/blob/master/notimportant/%E5%A6%82%E4%BD%95%E5%80%9F%E5%8A%A9Github%E8%BF%9B%E8%A1%8C%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91/merge.jpg?raw=true"></p><p>点击 <code>Merge pull request</code> 然后 confirm 就可以把 <em><strong>follower</strong></em> 更新的代码合并到自己的项目里。</p><p>此时 <em><strong>master</strong></em> 再在本地使用下面的命令就可以把远端的代码更新到本地了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull</span><br></pre></td></tr></table></figure><h1 id="同步本地代码"><a href="#同步本地代码" class="headerlink" title="同步本地代码"></a>同步本地代码</h1><p>这里要注意的就是，如果 <em><strong>master</strong></em> 更新了代码，就会导致 <em><strong>follower</strong></em> 的本地与 <em><strong>master</strong></em> 的远端不一致，那么 <em><strong>follower</strong></em> 就没办法提交 pull request 了，所以 <em><strong>follower</strong></em> 在开发前最好进行代码的更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote update</span><br><span class="line">$ git merge upstream/master</span><br></pre></td></tr></table></figure><p>同之前的更新操作是一样的。或者使用下面的命令进行更新也是可以的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch upstream</span><br><span class="line">$ git merge upstream/master</span><br></pre></td></tr></table></figure><h1 id="尽量减少冲突"><a href="#尽量减少冲突" class="headerlink" title="尽量减少冲突"></a>尽量减少冲突</h1><p>用 Github 进行协同开发我觉得实在所难免，但要尽量的减少冲突，那么就需要在<strong>进行开发的时候做好一个约定</strong>，大家在进行开发的时候就按照这个约定进行开发。</p><p>其次，在 Github 上开发的项目最好不要上传一些不必要的文件，比如 IDE 的配置文件（ Intellij IDEA 的 .idea、*.iml） 等，那么如何忽略这些文件，或者如果你已经开始了一些项目，怎么把 Github 上的不必要的文件去掉而不影响本地，可以参考我的另一篇文章 <a href="https://innofang.github.io/2018/03/09/%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86%E4%BD%A0Github%E4%B8%8A%E7%9A%84%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/">如何管理你Github上的开源项目</a></p><h1 id="多说一句"><a href="#多说一句" class="headerlink" title="多说一句"></a>多说一句</h1><p>因为平常都是一个人在写代码，所以还没有机会尝试如何去进行真正的协同开发，但是这又是一个必备的技能，所以在简单的实践过后，分享了一下自己的经验。因为没有实际合作经验，难免有疏漏和不足，所以在实际开发中遇到了问题还需要自己去查阅，具体情况具体分析，这样协同合作才能游刃有余。</p><!-- image resource -->]]></content>
    
    
    <summary type="html">&lt;p&gt;平常都是自己一个人在开发，一直都没有机会接触协同开发，平常使用 Github 时也就是简单的 add, commit, push，并由体会到 Git 带给我们&lt;br&gt;更多的好处，那么如何借助 Github 进行协同开发，现在来简单的尝试一下&lt;/p&gt;</summary>
    
    
    
    <category term="Github" scheme="http://innofang.github.io/categories/Github/"/>
    
    
    <category term="Github" scheme="http://innofang.github.io/tags/Github/"/>
    
  </entry>
  
</feed>
